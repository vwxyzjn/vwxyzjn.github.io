{"version":3,"sources":["webpack:///./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue","webpack:///./~/prismjs/prism.js","webpack:///./~/prismjs/themes/prism-coy.css","webpack:///./~/prismjs/themes/prism-coy.css?e5a5","webpack:///./~/marked/lib/marked.js","webpack:///./~/prismjs/components/prism-python.js","webpack:///./~/katex/dist/fonts/KaTeX_AMS-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Caligraphic-Bold.eot","webpack:///./~/katex/dist/fonts/KaTeX_Caligraphic-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Fraktur-Bold.eot","webpack:///./~/katex/dist/fonts/KaTeX_Fraktur-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Main-Bold.eot","webpack:///./~/katex/dist/fonts/KaTeX_Main-Italic.eot","webpack:///./~/katex/dist/fonts/KaTeX_Main-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Math-Italic.eot","webpack:///./~/katex/dist/fonts/KaTeX_SansSerif-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Script-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Size1-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Size2-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Size3-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Size4-Regular.eot","webpack:///./~/katex/dist/fonts/KaTeX_Typewriter-Regular.eot","webpack:///article.vue","webpack:///./~/katex/dist/katex.css","webpack:///./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue?ecda","webpack:///./~/katex/dist/katex.css?1787","webpack:///./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue?309a","webpack:///./~/katex/dist/contrib/auto-render.js","webpack:///./~/katex/dist/contrib/splitAtDelimiters.js","webpack:///./~/katex/dist/katex.js","webpack:///./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/output_3_0.jpeg","webpack:///./~/katex/dist/fonts/KaTeX_AMS-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_AMS-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_AMS-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Caligraphic-Bold.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff","webpack:///./~/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Caligraphic-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Fraktur-Bold.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Fraktur-Bold.woff","webpack:///./~/katex/dist/fonts/KaTeX_Fraktur-Bold.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Fraktur-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Fraktur-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Fraktur-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Main-Bold.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Main-Bold.woff","webpack:///./~/katex/dist/fonts/KaTeX_Main-Bold.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Main-Italic.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Main-Italic.woff","webpack:///./~/katex/dist/fonts/KaTeX_Main-Italic.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Main-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Main-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Main-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Math-Italic.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Math-Italic.woff","webpack:///./~/katex/dist/fonts/KaTeX_Math-Italic.woff2","webpack:///./~/katex/dist/fonts/KaTeX_SansSerif-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_SansSerif-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_SansSerif-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Script-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Script-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Script-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Size1-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Size1-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Size1-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Size2-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Size2-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Size2-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Size3-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Size3-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Size3-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Size4-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Size4-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Size4-Regular.woff2","webpack:///./~/katex/dist/fonts/KaTeX_Typewriter-Regular.ttf","webpack:///./~/katex/dist/fonts/KaTeX_Typewriter-Regular.woff","webpack:///./~/katex/dist/fonts/KaTeX_Typewriter-Regular.woff2","webpack:///./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue?5378"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AACA,sBAA+U;;AAE/U;AACA;AACA;AACA;AACA,yBAAyG;AACzG;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACdA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,sCAAsC,sBAAsB;AAC5D;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wCAAwC,wBAAwB,EAAE;AAClE;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,wBAAwB,yBAAyB;AACjD;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,iBAAiB;;AAE3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yEAAyE;AACzE,EAAE;;AAEF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF,uBAAuB,KAAK;AAC5B;;AAEA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA,CAAC;;AAED;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,kBAAkB,EAAE,OAAO,GAAG,WAAW;AACzC;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI;AACxB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4EAA4E,EAAE;AAC9E,CAAC;;AAED;AACA;AACA,8DAA8D,IAAI,kBAAkB;AACpF;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG,IAAI;AACzB;AACA;AACA,qBAAqB,GAAG;AACxB;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AA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AAkD,GAAG,sBAAsB,GAAG;AAC9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,GAAG;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;;AAEA,oBAAoB;AACpB,iBAAiB,GAAG,GAAG,GAAG;AAC1B;AACA,kBAAkB,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D,+BAA+B,IAAI;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,GAAG;AACb;AACA,mCAAmC,GAAG;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,wBAAwB;AACxB,2BAA2B,GAAG;AAC9B,mCAAmC,GAAG;AACtC,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,iBAAiB,EAAE;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,OAAO;AACf;AACA;AACA;AACA;AACA,yBAAyB;AACziBAAiB,8BAA8B;AAC/C,iBAAiB;AACjB;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,iBAAiB,6BAA6B;AAC9C;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,kBAAkB;AACpD,wBAAwB;AACxB,wBAAwB;AACxB,0BAA0B;AAC1B,yBAAyB;AACzB;;AAEA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,4BAA4B;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA,2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AiF,wBAAwB,GAAG,iFAAiF,wBAAwB,GAAG,mFAAmF,wBAAwB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,mBAAmB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,qBAAqB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,qBAAqB,GAAG,mFAAmF,4BAA4B,GAAG,iFAAiF,qBAAqB,GAAG,iFAAiF,qBAAqB,GAAG,iFAAiF,qBAAqB,GAAG,iFAAiF,qBAAqB,GAAG,iFAAiF,mBAAmB,GAAG,iFAAiF,qBAAqB,GAAG,iFAAiF,sBAAsB,GAAG,iFAAiF,sBAAsB,GAAG,iFAAiF,sBAAsB,GAAG,mFAAmF,sBAAsB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,sBAAsB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,mBAAmB,GAAG,iFAAiF,qBAAqB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,uBAAuB,GAAG,mFAAmF,uBAAuB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,uBAAuB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,mBAAmB,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,wBAAwB,GAAG,mFAAmF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,mBAAmB,GAAG,iFAAiF,4BAA4B,GAAG,mFAAmF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,4BAA4B,GAAG,iFAAiF,mBAAmB,GAAG,mFAAmF,4BAA4B,GAAG,mFAAmF,4BAA4B,GAAG,mFAAmF,2BAA2B,GAAG,mFAAmF,4BAA4B,GAAG,mFAAmF,4BAA4B,GAAG,mFAAmF,4BAA4B,GAAG,mFAAmF,4BAA4B,GAAG,mFAAmF,4BAA4B,GAAG,mFAAmF,4BAA4B,GAAG,mFAAmF,2BAA2B,GAAG,qFAAqF,mBAAmB,GAAG,6BAA6B,6BAA6B,GAAG,6BAA6B,6BAA6B,GAAG,6BAA6B,6BAA6B,GAAG,6BAA6B,6BAA6B,GAAG,gDAAgD,6BAA6B,GAAG,gDAAgD,6BAA6B,GAAG,yBAAyB,0BAA0B,kBAAkB,GAAG,qBAAqB,uBAAuB,GAAG,8BAA8B,6BAA6B,GAAG,8BAA8B,6BAA6B,GAAG,qCAAqC,uBAAuB,GAAG,kCAAkC,uBAAuB,GAAG,sCAAsC,aAAa,GAAG,iDAAiD,uBAAuB,kBAAkB,GAAG,sCAAsC,0BAA0B,uBAAuB,qCAAqC,GAAG,+BAA+B,0BAA0B,GAAG,wCAAwC,uBAAuB,GAAG,wCAAwC,qBAAqB,GAAG,wCAAwC,sBAAsB,GAAG,qBAAqB;;AAEhqtD;;;;;;;;ACPA;AACA;;;AAGA;AACA,+CAAgD,eAAe,qBAAqB,iBAAiB,qBAAqB,kBAAkB,oFAAoF,eAAe,+DAA+D,iBAAiB,yBAAyB,qBAAqB,kBAAkB,qBAAqB,iBAAiB,qBAAqB,kBAAkB,+DAA+D,eAAe,+DAA+D,kBAAkB,QAAQ,mdAAmd,oBAAoB,GAAG,wBAAwB,sBAAsB,GAAG,wBAAwB,uBAAuB,GAAG,wBAAwB,oBAAoB,GAAG,wBAAwB,oBAAoB,GAAG,wBAAwB,oBAAoB,GAAG,wBAAwB,oBAAoB,GAAG,uBAAuB,uBAAuB,GAAG,wBAAwB,uBAAuB,GAAG,yBAAyB,uBAAuB,GAAG,6BAA6B,wBAAwB,yBAAyB,GAAG,wBAAwB,wBAAwB,GAAG,wBAAwB,yBAAyB,GAAG,wBAAwB,sBAAsB,GAAG,wBAAwB,sBAAsB,GAAG,wBAAwB,sBAAsB,GAAG,uBAAuB,yBAAyB,GAAG,wBAAwB,yBAAyB,GAAG,yBAAyB,yBAAyB,GAAG,GAAG,qBAAqB;;AAEjhE;;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;AACA;AACA,gE;;;;;;;ACPA;;AAEA;AACA,oCAA4T;AAC5T;AACA;AACA;AACA,gE;;;;;;;;ACPA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,uCAAuC;AAChD,SAAS,yCAAyC;AAClD,SAAS,0CAA0C;AACnD;AACA,YAAY,sCAAsC;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;;AAEA;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS,0BAA0B;AACnC;AACA,SAAS,0BAA0B;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;YCrGA,yBAAa,SAA2D,mBAAmB,gDAAgD,aAAa,KAAK,MAAM,gCAAgC,SAAS,qCAAqC,SAAS,mCAAmC,OAAO,KAAK,OAAO,eAAe,aAAa,0BAA0B,0BAA0B,gBAAgB,UAAU,UAAU,0CAA0C,8BAAwB,0BAAoB,8CAA8C,kCAAkC,YAAY,YAAY,mCAAmC,iBAAiB,gBAAgB,sBAAsB,oBAAoB,0CAA0C,YAAY,WAAW,YAAY,SAAS,GAAG;AACzyB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,mGAAmG;AACtG;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,EAAE,8BAA8B;AACjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,EAAE,YAAY;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO,0BAA0B,KAAK;AACjD,YAAY,iDAAiD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,qDAAqD,IAAI;AACzD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA,CAAC,EAAE,6IAA6I;AAChJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,IAAI,IAAI;AACzB;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClsBAAsB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2BAA2B,yBAAyB;AACpD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,8DAA8D;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,KAAK,IAAI;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,4CAA4C;AACzD,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,kDAAkD;AAC/D,aAAa;AACb;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,kDAAkD;AAC/D,aAAa,gDAAgD;AAC7D,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,wCAAwC;AACxC,uCAAuC;;AAEvC;AACA,eAAe,6BAA6B;AAC5C;AACA,mCAAmC;AACnC,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uCAAuC;AAC7D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sDAAsD;AACvE,iBAAiB,2BAA2B;AAC5C,iBAAiB,4BAA4B;AAC7C,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C,iBAAiB,4BAA4B;AAC7C,iBAAiB,2BAA2B;AAC5C,iBAAiB;AACjB;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sDAAsD;AACvE,iBAAiB,2BAA2B;AAC5C,iBAAiB,4BAA4B;AAC7C,iBAAiB,yBAAyB;AAC1C,iBAAiB,4BAA4B;AAC7C,iBAAiB,2BAA2B;AAC5C,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,+BAA+B;AACxC,SAAS,kCAAkC;AAC3C,SAAS,yBAAyB;AAClC,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,8BAA8B;AACvC,SAAS,yBAAyB;AAClC,SAAS,kCAAkC;AAC3C,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,MAAM,GAAG;AAC5B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,0BAA0B;AACvC,aAAa,kCAAkC;AAC/C,aAAa,yBAAyB;AACtC,aAAa;AACb;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC,SAAS,+BAA+B;AACxC,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,CAAC,EAAE,gHAAgH;AACnH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC,EAAE,qGAAqG;AACxG;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC,EAAE,gGAAgG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK,wBAAwB;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK,wBAAwB;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,mBAAmB;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,yCAAyC;AAC9C,KAAK,mCAAmC;AACxC,KAAK,iCAAiC;AACtC,KAAK,uBAAuB;AAC5B,KAAK,uBAAuB;AAC5B,KAAK,uBAAuB;AAC5B,KAAK;AACL;;AAEA;AACA;AACA,KAAK,yCAAyC;AAC9C,KAAK,mCAAmC;AACxC,KAAK,iCAAiC;AACtC,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK,yCAAyC;AAC9C,KAAK,mCAAmC;AACxC,KAAK,iCAAiC;AACtC,KAAK,uBAAuB;AAC5B,KAAK,uBAAuB;AAC5B,KAAK,uBAAuB;AAC5B,KAAK,uBAAuB;AAC5B,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,GAAG,YAAY,OAAO,OAAO;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,+FAA+F;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,mCAAmC;AACtC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA,qBAAqB,IAAI;AACzB,UAAU,OAAO,OAAO,GAAG,GAAG,MAAM,KAAK,QAAQ,MAAM;AACvD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,CAAC,EAAE,8CAA8C;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,YAAY,QAAQ,OAAO,SAAS;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzyDAAyrC;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB,4BAA4B;AAC5C,gBAAgB;AAChB;;AAEA;AACA;AACA,QAAQ,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,CAAC,EAAE,+CAA+C;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,aAAa;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,CAAC,GAAG;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC,EAAE,aAAa;AAChB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC,oCAAoC,OAAO;AAC3C,kCAAkC,OAAO;AACzC,oCAAoC,OAAO;AAC3C,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C,WAAW,wBAAwB;AACnC;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;;AAEA,gBAAgB,aAAa;AAC7B;AACA;AACA;;AAEA,gBAAgB,aAAa;AAC7B;AACA;AACA;;AAEA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf,cAAc;AACd,cAAc;AACd,iBAAiB;AACjB,gBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,GAAG,EAAE,GAAG;AACT,CAAC,E;;;;;;;;;;;;ACl3RD,8E;;;;;;ACAA,sF;;;;;;ACAA,uF;;;;;;ACAA,wF;;;;;;ACAA,2F;;;;;;ACAA,4F;;;;;;ACAA,6F;;;;;;ACAA,8F;;;;;;ACAA,+F;;;;;;ACAA,gG;;;;;;ACAA,uF;;;;;;ACAA,wF;;;;;;ACAA,yF;;;;;;ACAA,0F;;;;;;ACAA,2F;;;;;;ACAA,4F;;;;;;ACAA,oF;;;;;;ACAA,qF;;;;;;ACAA,sF;;;;;;ACAA,sF;;;;;;ACAA,uF;;;;;;ACAA,wF;;;;;;ACAA,uF;;;;;;ACAA,wF;;;;;;ACAA,yF;;;;;;ACAA,sF;;;;;;ACAA,uF;;;;;;ACAA,wF;;;;;;ACAA,4F;;;;;;ACAA,6F;;;;;;ACAA,8F;;;;;;ACAA,yF;;;;;;ACAA,0F;;;;;;ACAA,2F;;;;;;ACAA,wF;;;;;;ACAA,6CAA6C,omS;;;;;;ACA7C,8CAA8C,wlP;;;;;;ACA9C,wF;;;;;;ACAA,6CAA6C,wtR;;;;;;ACA7C,8CAA8C,gwO;;;;;;ACA9C,8CAA8C,o5V;;;;;;ACA9C,6CAA6C,wuM;;;;;;ACA7C,8CAA8C,giK;;;;;;ACA9C,wF;;;;;;ACAA,6CAA6C,w6Q;;;;;;ACA7C,8CAA8C,wvN;;;;;;ACA9C,6F;;;;;;ACAA,8F;;;;;;ACAA,+F;;;;;;;ACAA,gBAAgB,mBAAmB,aAAa,0BAA0B;AAC1E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC,qB","file":"static/js/0.c2751a05348cf053239b.js","sourcesContent":["\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-22f8fdc1\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./article.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./article.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-22f8fdc1\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./article.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue\n// module id = 17\n// module chunks = 0","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o) {\n\t\t\tvar type = _.util.type(o);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tvar clone = {};\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\t// Check for existence for IE8\n\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tparent = element.parentNode;\n\n\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar tokens = _.tokenize(text, grammar);\n\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar Token = _.Token;\n\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\ttokenloop: for (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t    delNum = 1;\n\n\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\n\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tmatch = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (env.type == 'comment') {\n\t\tenv.attributes['spellcheck'] = 'true';\n\t}\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n \t// In worker\n\t_self.addEventListener('message', function(evt) {\n\t\tvar message = JSON.parse(evt.data),\n\t\t    lang = message.language,\n\t\t    code = message.code,\n\t\t    immediateClose = message.immediateClose;\n\n\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\tif (immediateClose) {\n\t\t\t_self.close();\n\t\t}\n\t}, false);\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\w\\W]*?-->/,\n\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t'string': {\n\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t}\n\t},\n\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript'\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tif(Array.prototype.forEach) { // Check to prevent error in IE8\n\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\t\tvar language, parent = pre;\n\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t\t}\n\n\t\t\t\tif (!language) {\n\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t\t}\n\n\t\t\t\tvar code = document.createElement('code');\n\t\t\t\tcode.className = 'language-' + language;\n\n\t\t\t\tpre.textContent = '';\n\n\t\t\t\tcode.textContent = 'Loading…';\n\n\t\t\t\tpre.appendChild(code);\n\n\t\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\t\txhr.open('GET', src, true);\n\n\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\txhr.send(null);\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prismjs/prism.js\n// module id = 20\n// module chunks = 0 1","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"code[class*=language-],pre[class*=language-]{color:#000;background:none;font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{position:relative;margin:.5em 0;box-shadow:-1px 0 0 0 #358ccb,0 0 0 1px #dfdfdf;border-left:10px solid #358ccb;background-color:#fdfdfd;background-image:linear-gradient(transparent 50%,rgba(69,142,209,.04) 0);background-size:3em 3em;background-origin:content-box;overflow:visible;padding:0}code[class*=language]{max-height:inherit;height:100%;padding:0 1em;display:block;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background-color:#fdfdfd;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;margin-bottom:1em}:not(pre)>code[class*=language-]{position:relative;padding:.2em;border-radius:.3em;color:#c92c2c;border:1px solid rgba(0,0,0,.1);display:inline;white-space:normal}pre[class*=language-]:after,pre[class*=language-]:before{content:\\\"\\\";z-index:-2;display:block;position:absolute;bottom:.75em;left:.18em;width:40%;height:20%;max-height:13em;box-shadow:0 13px 8px #979797;-webkit-transform:rotate(-2deg);-moz-transform:rotate(-2deg);-ms-transform:rotate(-2deg);-o-transform:rotate(-2deg);transform:rotate(-2deg)}:not(pre)>code[class*=language-]:after,pre[class*=language-]:after{right:.75em;left:auto;-webkit-transform:rotate(2deg);-moz-transform:rotate(2deg);-ms-transform:rotate(2deg);-o-transform:rotate(2deg);transform:rotate(2deg)}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#7d8b99}.token.punctuation{color:#5f6364}.token.boolean,.token.constant,.token.deleted,.token.function-name,.token.number,.token.property,.token.symbol,.token.tag{color:#c92c2c}.token.attr-name,.token.builtin,.token.char,.token.function,.token.inserted,.token.selector,.token.string{color:#2f9c0a}.token.entity,.token.operator,.token.url,.token.variable{color:#a67f59;background:hsla(0,0%,100%,.5)}.token.atrule,.token.attr-value,.token.class-name,.token.keyword{color:#1990b8}.token.important,.token.regex{color:#e90}.language-css .token.string,.style .token.string{color:#a67f59;background:hsla(0,0%,100%,.5)}.token.important{font-weight:400}.token.bold{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.namespace{opacity:.7}@media screen and (max-width:767px){pre[class*=language-]:after,pre[class*=language-]:before{bottom:14px;box-shadow:none}}.token.cr:before,.token.lf:before,.token.tab:not(:empty):before{color:#e0d7d1}pre[class*=language-].line-numbers{padding-left:0}pre[class*=language-].line-numbers code{padding-left:3.8em}pre[class*=language-].line-numbers .line-numbers-rows{left:0}pre[class*=language-][data-line]{padding-top:0;padding-bottom:0;padding-left:0}pre[data-line] code{position:relative;padding-left:4em}pre .line-highlight{margin-top:0}\", \"\", {\"version\":3,\"sources\":[\"F:/Github/newvue/node_modules/prismjs/themes/prism-coy.css\"],\"names\":[],\"mappings\":\"AAMA,6CAEC,WAAa,AACb,gBAAiB,AACjB,8DAAuE,AACvE,gBAAiB,AACjB,gBAAiB,AACjB,oBAAqB,AACrB,kBAAmB,AACnB,iBAAkB,AAClB,gBAAiB,AAEjB,gBAAiB,AACjB,cAAe,AACf,WAAY,AAEZ,qBAAsB,AACtB,kBAAmB,AACnB,iBAAkB,AAClB,YAAc,CACd,AAGD,sBACC,kBAAmB,AACnB,cAAe,AACf,gDAA8D,AAC9D,+BAAgC,AAChC,yBAA0B,AAC1B,yEAAiF,AACjF,wBAAyB,AACzB,8BAA+B,AAC/B,iBAAkB,AAClB,SAAW,CACX,AAED,sBACC,mBAAoB,AACpB,YAAa,AACb,cAAe,AACf,cAAe,AACf,aAAe,CACf,AAGD,uDAEC,yBAA0B,AAC1B,8BAA+B,AAC/B,2BAA4B,AAC5B,sBAAuB,AACvB,iBAAmB,CACnB,AAGD,iCACC,kBAAmB,AACnB,aAAc,AACd,mBAAqB,AACrB,cAAe,AACf,gCAAqC,AACrC,eAAgB,AAChB,kBAAoB,CACpB,AAED,yDAEC,WAAY,AACZ,WAAY,AACZ,cAAe,AACf,kBAAmB,AACnB,aAAe,AACf,WAAa,AACb,UAAW,AACX,WAAY,AACZ,gBAAiB,AACjB,8BAAiC,AACjC,gCAAiC,AACjC,6BAA8B,AAC9B,4BAA6B,AAC7B,2BAA4B,AAC5B,uBAAyB,CACzB,AAED,mEAEC,YAAc,AACd,UAAW,AACX,+BAAgC,AAChC,4BAA6B,AAC7B,2BAA4B,AAC5B,0BAA2B,AAC3B,sBAAwB,CACxB,AAED,8EAKC,aAAe,CACf,AAED,mBACC,aAAe,CACf,AAED,0HAQC,aAAe,CACf,AAED,0GAOC,aAAe,CACf,AAED,yDAIC,cAAe,AACf,6BAAqC,CACrC,AAED,iEAIC,aAAe,CACf,AAED,8BAEC,UAAY,CACZ,AAED,iDAEC,cAAe,AACf,6BAAqC,CACrC,AAED,iBACC,eAAoB,CACpB,AAED,YACC,eAAkB,CAClB,AACD,cACC,iBAAmB,CACnB,AAED,cACC,WAAa,CACb,AAED,WACC,UAAY,CACZ,AAED,oCACC,yDAEC,YAAa,AACb,eAAiB,CACjB,CAED,AAGD,gEAGC,aAAe,CACf,AAGD,mCACC,cAAgB,CAChB,AAED,wCACC,kBAAoB,CACpB,AAED,sDACC,MAAQ,CACR,AAGD,iCACC,cAAe,AACf,iBAAkB,AAClB,cAAgB,CAChB,AACD,oBACC,kBAAmB,AACnB,gBAAkB,CAClB,AACD,oBACC,YAAc,CACd\",\"file\":\"prism-coy.css\",\"sourcesContent\":[\"/**\\n * prism.js Coy theme for JavaScript, CoffeeScript, CSS and HTML\\n * Based on https://github.com/tshedor/workshop-wp-theme (Example: http://workshop.kansan.com/category/sessions/basics or http://workshop.timshedor.com/category/sessions/basics);\\n * @author Tim  Shedor\\n */\\n\\ncode[class*=\\\"language-\\\"],\\npre[class*=\\\"language-\\\"] {\\n\\tcolor: black;\\n\\tbackground: none;\\n\\tfont-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\\n\\ttext-align: left;\\n\\twhite-space: pre;\\n\\tword-spacing: normal;\\n\\tword-break: normal;\\n\\tword-wrap: normal;\\n\\tline-height: 1.5;\\n\\n\\t-moz-tab-size: 4;\\n\\t-o-tab-size: 4;\\n\\ttab-size: 4;\\n\\n\\t-webkit-hyphens: none;\\n\\t-moz-hyphens: none;\\n\\t-ms-hyphens: none;\\n\\thyphens: none;\\n}\\n\\n/* Code blocks */\\npre[class*=\\\"language-\\\"] {\\n\\tposition: relative;\\n\\tmargin: .5em 0;\\n\\tbox-shadow: -1px 0px 0px 0px #358ccb, 0px 0px 0px 1px #dfdfdf;\\n\\tborder-left: 10px solid #358ccb;\\n\\tbackground-color: #fdfdfd;\\n\\tbackground-image: linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%);\\n\\tbackground-size: 3em 3em;\\n\\tbackground-origin: content-box;\\n\\toverflow: visible;\\n\\tpadding: 0;\\n}\\n\\ncode[class*=\\\"language\\\"] {\\n\\tmax-height: inherit;\\n\\theight: 100%;\\n\\tpadding: 0 1em;\\n\\tdisplay: block;\\n\\toverflow: auto;\\n}\\n\\n/* Margin bottom to accomodate shadow */\\n:not(pre) > code[class*=\\\"language-\\\"],\\npre[class*=\\\"language-\\\"] {\\n\\tbackground-color: #fdfdfd;\\n\\t-webkit-box-sizing: border-box;\\n\\t-moz-box-sizing: border-box;\\n\\tbox-sizing: border-box;\\n\\tmargin-bottom: 1em;\\n}\\n\\n/* Inline code */\\n:not(pre) > code[class*=\\\"language-\\\"] {\\n\\tposition: relative;\\n\\tpadding: .2em;\\n\\tborder-radius: 0.3em;\\n\\tcolor: #c92c2c;\\n\\tborder: 1px solid rgba(0, 0, 0, 0.1);\\n\\tdisplay: inline;\\n\\twhite-space: normal;\\n}\\n\\npre[class*=\\\"language-\\\"]:before,\\npre[class*=\\\"language-\\\"]:after {\\n\\tcontent: '';\\n\\tz-index: -2;\\n\\tdisplay: block;\\n\\tposition: absolute;\\n\\tbottom: 0.75em;\\n\\tleft: 0.18em;\\n\\twidth: 40%;\\n\\theight: 20%;\\n\\tmax-height: 13em;\\n\\tbox-shadow: 0px 13px 8px #979797;\\n\\t-webkit-transform: rotate(-2deg);\\n\\t-moz-transform: rotate(-2deg);\\n\\t-ms-transform: rotate(-2deg);\\n\\t-o-transform: rotate(-2deg);\\n\\ttransform: rotate(-2deg);\\n}\\n\\n:not(pre) > code[class*=\\\"language-\\\"]:after,\\npre[class*=\\\"language-\\\"]:after {\\n\\tright: 0.75em;\\n\\tleft: auto;\\n\\t-webkit-transform: rotate(2deg);\\n\\t-moz-transform: rotate(2deg);\\n\\t-ms-transform: rotate(2deg);\\n\\t-o-transform: rotate(2deg);\\n\\ttransform: rotate(2deg);\\n}\\n\\n.token.comment,\\n.token.block-comment,\\n.token.prolog,\\n.token.doctype,\\n.token.cdata {\\n\\tcolor: #7D8B99;\\n}\\n\\n.token.punctuation {\\n\\tcolor: #5F6364;\\n}\\n\\n.token.property,\\n.token.tag,\\n.token.boolean,\\n.token.number,\\n.token.function-name,\\n.token.constant,\\n.token.symbol,\\n.token.deleted {\\n\\tcolor: #c92c2c;\\n}\\n\\n.token.selector,\\n.token.attr-name,\\n.token.string,\\n.token.char,\\n.token.function,\\n.token.builtin,\\n.token.inserted {\\n\\tcolor: #2f9c0a;\\n}\\n\\n.token.operator,\\n.token.entity,\\n.token.url,\\n.token.variable {\\n\\tcolor: #a67f59;\\n\\tbackground: rgba(255, 255, 255, 0.5);\\n}\\n\\n.token.atrule,\\n.token.attr-value,\\n.token.keyword,\\n.token.class-name {\\n\\tcolor: #1990b8;\\n}\\n\\n.token.regex,\\n.token.important {\\n\\tcolor: #e90;\\n}\\n\\n.language-css .token.string,\\n.style .token.string {\\n\\tcolor: #a67f59;\\n\\tbackground: rgba(255, 255, 255, 0.5);\\n}\\n\\n.token.important {\\n\\tfont-weight: normal;\\n}\\n\\n.token.bold {\\n\\tfont-weight: bold;\\n}\\n.token.italic {\\n\\tfont-style: italic;\\n}\\n\\n.token.entity {\\n\\tcursor: help;\\n}\\n\\n.namespace {\\n\\topacity: .7;\\n}\\n\\n@media screen and (max-width: 767px) {\\n\\tpre[class*=\\\"language-\\\"]:before,\\n\\tpre[class*=\\\"language-\\\"]:after {\\n\\t\\tbottom: 14px;\\n\\t\\tbox-shadow: none;\\n\\t}\\n\\n}\\n\\n/* Plugin styles */\\n.token.tab:not(:empty):before,\\n.token.cr:before,\\n.token.lf:before {\\n\\tcolor: #e0d7d1;\\n}\\n\\n/* Plugin styles: Line Numbers */\\npre[class*=\\\"language-\\\"].line-numbers {\\n\\tpadding-left: 0;\\n}\\n\\npre[class*=\\\"language-\\\"].line-numbers code {\\n\\tpadding-left: 3.8em;\\n}\\n\\npre[class*=\\\"language-\\\"].line-numbers .line-numbers-rows {\\n\\tleft: 0;\\n}\\n\\n/* Plugin styles: Line Highlight */\\npre[class*=\\\"language-\\\"][data-line] {\\n\\tpadding-top: 0;\\n\\tpadding-bottom: 0;\\n\\tpadding-left: 0;\\n}\\npre[data-line] code {\\n\\tposition: relative;\\n\\tpadding-left: 4em;\\n}\\npre .line-highlight {\\n\\tmargin-top: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/prismjs/themes/prism-coy.css\n// module id = 21\n// module chunks = 0 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js??ref--5-2!./prism-coy.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../vue-style-loader/lib/addStylesClient.js\")(\"1fcd7648\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prismjs/themes/prism-coy.css\n// module id = 22\n// module chunks = 0 1","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities \n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/marked/lib/marked.js\n// module id = 23\n// module chunks = 0 1","Prism.languages.python= {\n\t'triple-quoted-string': {\n\t\tpattern: /\"\"\"[\\s\\S]+?\"\"\"|'''[\\s\\S]+?'''/,\n\t\talias: 'string'\n\t},\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /(\"|')(?:\\\\\\\\|\\\\?[^\\\\\\r\\n])*?\\1/,\n\t\tgreedy: true\n\t},\n\t'function' : {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_][a-zA-Z0-9_]*(?=\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)[a-z0-9_]+/i,\n\t\tlookbehind: true\n\t},\n\t'keyword' : /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'boolean' : /\\b(?:True|False)\\b/,\n\t'number' : /\\b-?(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n\t'operator' : /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n\t'punctuation' : /[{}[\\];(),.:]/\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prismjs/components/prism-python.js\n// module id = 24\n// module chunks = 0 1","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_AMS-Regular.672c961.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_AMS-Regular.eot\n// module id = 25\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Caligraphic-Bold.3c3fce5.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Caligraphic-Bold.eot\n// module id = 26\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Caligraphic-Regular.a0ba281.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Caligraphic-Regular.eot\n// module id = 27\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Fraktur-Bold.2b4454d.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Fraktur-Bold.eot\n// module id = 28\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Fraktur-Regular.dc81eae.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Fraktur-Regular.eot\n// module id = 29\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Bold.d327c21.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Bold.eot\n// module id = 30\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Italic.2702ac3.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Italic.eot\n// module id = 31\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Regular.31ec450.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Regular.eot\n// module id = 32\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Math-Italic.031026c.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Math-Italic.eot\n// module id = 33\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_SansSerif-Regular.a3319b7.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_SansSerif-Regular.eot\n// module id = 34\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Script-Regular.cf8394e.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Script-Regular.eot\n// module id = 35\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Size1-Regular.5438d9d.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size1-Regular.eot\n// module id = 36\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Size2-Regular.1f5c2ab.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size2-Regular.eot\n// module id = 37\n// module chunks = 0","module.exports = \"data:application/vnd.ms-fontobject;base64,\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size3-Regular.eot\n// module id = 38\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Size4-Regular.5a3cee2.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size4-Regular.eot\n// module id = 39\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Typewriter-Regular.b2e9414.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Typewriter-Regular.eot\n// module id = 40\n// module chunks = 0","<template>\r\n  <div class=\"research-article\">\r\n    <div v-html=\"rawHtml\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'katex/dist/katex.css'\r\nimport renderMathInElement from 'katex/dist/contrib/auto-render.js'\r\nimport marked from 'marked'\r\nimport Prism from 'prismjs'\r\nimport 'prismjs/themes/prism-coy.css'\r\nimport 'prismjs/prism.js'\r\nimport 'prismjs/components/prism-python.js'\r\n\r\nlet article = `\r\n\r\n# The Plane Shooting Problem (Dynamic Programming)\r\nAuthor: Costa Huang\r\n\r\n## Introduction\r\n\r\nThe nation is at war. The enemy send out a squadron of $n$ planes to attack our troops from various angles. You have a very precise anti-aircraft launcher that will be used to shoot enemy planes. If the launcher is aimed directly at an enemy plane, it's guaranteed to destroy the plane. Unfortunately, your launcher is ponderous to reposition. Namely, you can only move 1 degree per minute. Then 1 plane enter your shoot range per minute. Once they go passed your shoot range, they are gone and you can't shoot them again. You are tasked to destroy the first plane, and then destroy as many plane as possible. \r\n\r\n## Examples\r\n\r\nThe plane is coming at [50,49,60,48,54,55,56,57,58] angles for each minute. You shoot down the first plane at 50 degree and you can either statys at 50 degree, move to 51 degree, or move to 49 degree. The optimal solution would be shooting down 6 aircraft: [50,54,55,56,57,58].\r\n\r\n## Analysis\r\n\r\nNotice this problem can be solved by brute force method. For each position, we can either statys at $k$ degree, move to $k+1$ degree, or move to $k-1$ degree. So we can just try all possible possibilities and see which possibility shoot the most plane. We therefore demonstrate a brute force approach:\r\n\r\n\r\n\r\n\\`\\`\\`python\r\nimport pandas as pd\r\nimport numpy as np\r\n    \r\n# Some testing data\r\na_1 = [50,49,60,48,54,55,56,57,58]\r\na_2 = [50,49,60,48,54,55,56,47,46]\r\na_3 = [50,80,81,82,83]\r\na_4 = [50,51,49,48]\r\na_5= [50,51,50,51,50,55,56,57,58,59,60]\r\na_6 = [50,49,48,50,50,50]\r\n\r\n\r\ndef brute_force(angles, start_angle):\r\n    \r\n    if len(angles) == 0:\r\n        return 0\r\n    x = brute_force(angles[1:], start_angle+1)\r\n    y = brute_force(angles[1:], start_angle-1)\r\n    z = brute_force(angles[1:], start_angle)\r\n    if angles[0] == start_angle:\r\n        return max(x + 1, y + 1, z + 1)\r\n    else:\r\n        return max(x, y, z)\r\n    \r\nprint(brute_force(a_1, a_1[0]))\r\nprint(brute_force(a_2, a_2[0]))\r\nprint(brute_force(a_5, a_5[0]))\r\n\\`\\`\\`\r\n\r\n    6\r\n    5\r\n    8\r\n    \r\n\r\nThen we draw the brute force tree for analysis:\r\n\r\n\r\n\\`\\`\\`python\r\nfrom IPython.display import Image\r\nImage(\"pic.JPG\", height = 600, width = 600)\r\n\\`\\`\\`\r\n\r\n\r\n\r\n\r\n![Responsive image](${require('./output_3_0.jpeg')})\r\n\r\n\r\n\r\nWe somehow spotted this pattern: there are so many interconnected edges, which means we can maybe find a way to efficiently use the past information. For example, if we want to know what's the maximum number of planes we can shoot down if we end in 49, there are only two ways to 49: [50,49,49], [50,50,49], but in the process we would have already know which ways shoot down more planes, and we can just take the maximum of them. Therefore we demonstrate the dynamic programming approach:\r\n\r\n\r\n\\`\\`\\`python\r\nangles = a_6\r\nstart_angle = angles[0]\r\n\r\ndf = pd.DataFrame(index = angles, columns = range(start_angle - len(angles),start_angle + len(angles)+1), data = 0)\r\ndef dynamic_programming(df, print_output = False):\r\n    df.iloc[0][start_angle] = 1\r\n    columns = list(df.columns)\r\n    rows = list(df.index)\r\n    \r\n    for row in range(0, len(df)-1):\r\n        # record the degree of the upcoming plane, which is in next row\r\n        plane_degree = rows[row+1]\r\n        \r\n        for col in range(1, len(df.iloc[0])-1):\r\n            # if the current column has data, the cannon can\r\n            # go down left, go down, or go down right\r\n            if df.iloc[row].iloc[col] != 0:\r\n                data = df.iloc[row].iloc[col]\r\n                \r\n                # go down left\r\n                left_column_degree = columns[col-1]\r\n                # if our move results in a new destoryed plane: \r\n                if left_column_degree == plane_degree:\r\n                    df.iloc[row+1].iloc[col-1] = max(df.iloc[row+1].iloc[col-1], data + 1)\r\n                else:\r\n                    df.iloc[row+1].iloc[col-1] = max(df.iloc[row+1].iloc[col-1], data)\r\n                    \r\n                # go down\r\n                down_column_degree = columns[col]\r\n                # if our move results in a new destoryed plane: \r\n                if down_column_degree == plane_degree:\r\n                    df.iloc[row+1].iloc[col] = max(df.iloc[row+1].iloc[col], data + 1)\r\n                else:\r\n                    df.iloc[row+1].iloc[col] = max(df.iloc[row+1].iloc[col], data)\r\n                    \r\n                # go down right\r\n                right_column_degree = columns[col+1]\r\n                # if our move results in a new destoryed plane: \r\n                if right_column_degree == plane_degree:\r\n                    df.iloc[row+1].iloc[col+1] = max(df.iloc[row+1].iloc[col+1], data + 1)\r\n                else:\r\n                    df.iloc[row+1].iloc[col+1] = max(df.iloc[row+1].iloc[col+1], data)\r\n        \r\n        if print_output == True:\r\n            print(df)\r\n            print(\"===============================================================\")\r\n            \r\n    # now we are ready to trace the planes we shoot down\r\n    # in the last row search the largest possible planes shoot down in the current row,\r\n    # namely, max_planes = [planes shoot down, column number]\r\n    row = len(df)-1 \r\n    max_planes = [0,0]\r\n    for col in range(0, len(df.iloc[row])):\r\n        if df.iloc[row].iloc[col] > max_planes[0]:\r\n            max_planes[0] = df.iloc[row].iloc[col]\r\n            max_planes[1] = col\r\n    \r\n    \r\n    # now find the order of planes to shoot down\r\n    moving_record = [columns[max_planes[1]]]\r\n    print(\"now we start to trace back our move\")\r\n    while (row > 0):\r\n        # from the last row where we hit maximum number of plane, we can go up, go up left, go up right to trace\r\n        # the record, but we need to go to the maximum of them\r\n        left_col = max_planes[1]-1\r\n        right_col = max_planes[1]+2\r\n        # reset max_planes[planes shoot down] and go up one row\r\n        max_planes[0] = 0  \r\n        row -= 1\r\n        for col in range(left_col, right_col):\r\n            if df.iloc[row].iloc[col] > max_planes[0]:\r\n                max_planes[0] = df.iloc[row].iloc[col]\r\n                max_planes[1] = col\r\n        \r\n        moving_record += [columns[max_planes[1]]]\r\n        \r\n        print(moving_record)\r\n    \r\n    moving_record.reverse()\r\n    print(\"after reversing, now the moving record is:\")\r\n    print(moving_record)\r\n    \r\n    \r\n    # Lastly, we ouput the specific planes we choose to shoot\r\n    planes_chosen = []\r\n    for i in range(0, len(df.index)):\r\n        if df.index[i] == moving_record[i]:\r\n            planes_chosen += [df.index[i]]\r\n    \r\n    print(\"lastly, we print out planes chosen to shoot down\")\r\n    print(planes_chosen)\r\n    \r\n    return max(df.iloc[-1])\r\n    \r\n\r\n\r\ndp_output = dynamic_programming(df, print_output = True)\r\nprint(\"input data is \", angles)\r\nprint(\"dynamic programming can shoot down\", dp_output, \"planes\")\r\nprint(\"brute force method can shoot down\", brute_force(angles, start_angle), \"planes\")\r\n\\`\\`\\`\r\n\r\n        44  45  46  47  48  49  50  51  52  53  54  55  56\r\n    50   0   0   0   0   0   0   1   0   0   0   0   0   0\r\n    49   0   0   0   0   0   2   1   1   0   0   0   0   0\r\n    48   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    ===============================================================\r\n        44  45  46  47  48  49  50  51  52  53  54  55  56\r\n    50   0   0   0   0   0   0   1   0   0   0   0   0   0\r\n    49   0   0   0   0   0   2   1   1   0   0   0   0   0\r\n    48   0   0   0   0   3   2   2   1   1   0   0   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    ===============================================================\r\n        44  45  46  47  48  49  50  51  52  53  54  55  56\r\n    50   0   0   0   0   0   0   1   0   0   0   0   0   0\r\n    49   0   0   0   0   0   2   1   1   0   0   0   0   0\r\n    48   0   0   0   0   3   2   2   1   1   0   0   0   0\r\n    50   0   0   0   3   3   3   3   2   1   1   0   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    ===============================================================\r\n        44  45  46  47  48  49  50  51  52  53  54  55  56\r\n    50   0   0   0   0   0   0   1   0   0   0   0   0   0\r\n    49   0   0   0   0   0   2   1   1   0   0   0   0   0\r\n    48   0   0   0   0   3   2   2   1   1   0   0   0   0\r\n    50   0   0   0   3   3   3   3   2   1   1   0   0   0\r\n    50   0   0   3   3   3   3   4   3   2   1   1   0   0\r\n    50   0   0   0   0   0   0   0   0   0   0   0   0   0\r\n    ===============================================================\r\n        44  45  46  47  48  49  50  51  52  53  54  55  56\r\n    50   0   0   0   0   0   0   1   0   0   0   0   0   0\r\n    49   0   0   0   0   0   2   1   1   0   0   0   0   0\r\n    48   0   0   0   0   3   2   2   1   1   0   0   0   0\r\n    50   0   0   0   3   3   3   3   2   1   1   0   0   0\r\n    50   0   0   3   3   3   3   4   3   2   1   1   0   0\r\n    50   0   3   3   3   3   4   5   4   3   2   1   1   0\r\n    ===============================================================\r\n    now we start to trace back our move\r\n    [50, 50]\r\n    [50, 50, 49]\r\n    [50, 50, 49, 48]\r\n    [50, 50, 49, 48, 49]\r\n    [50, 50, 49, 48, 49, 50]\r\n    \r\n    after reversing, now the moving record is:\r\n    [50, 49, 48, 49, 50, 50]\r\n    \r\n    lastly, we print out planes chosen to shoot down\r\n    [50, 49, 48, 50, 50]\r\n    \r\n    input data is  [50, 49, 48, 50, 50, 50]\r\n    dynamic programming can shoot down 5 planes\r\n    brute force method can shoot down 5 planes\r\n    \r\n\r\nNow we can test different data by generating some random list and run the program to see when does brute force become really slow.\r\n\r\n\r\n\\`\\`\\`python\r\nt = np.random.choice(10, 14) + 50\r\nt\r\n# (2, 5) + 10 would out put size 5, origin 10, random integer from (10-2, 10+2) \r\n# at size 14 is where you can see brute force takes more than an instant\r\n# notice 3^14 = 4782969\r\n\\`\\`\\`\r\n\r\n\r\n\r\n\r\n    array([59, 53, 50, 50, 54, 56, 50, 58, 53, 57, 54, 58, 52, 53])\r\n\r\n\r\n\r\n\r\n\\`\\`\\`python\r\nangles = t\r\nstart_angle = angles[0]\r\ndf = pd.DataFrame(index = angles, columns = range(start_angle - len(angles),start_angle + len(angles)+1), data = 0)\r\ndp_ouput = dynamic_programming(df)\r\nprint(\"\\ninput data is \", angles)\r\nprint(\"dynamic programming can shoot down\", dp_ouput, \"planes\")\r\nprint(\"brute force method can shoot down\", brute_force(angles, start_angle), \"planes\")\r\n\\`\\`\\`\r\n\r\n    now we start to trace back our move\r\n    [53, 52]\r\n    [53, 52, 53]\r\n    [53, 52, 53, 54]\r\n    [53, 52, 53, 54, 53]\r\n    [53, 52, 53, 54, 53, 53]\r\n    [53, 52, 53, 54, 53, 53, 54]\r\n    [53, 52, 53, 54, 53, 53, 54, 55]\r\n    [53, 52, 53, 54, 53, 53, 54, 55, 56]\r\n    [53, 52, 53, 54, 53, 53, 54, 55, 56, 55]\r\n    [53, 52, 53, 54, 53, 53, 54, 55, 56, 55, 56]\r\n    [53, 52, 53, 54, 53, 53, 54, 55, 56, 55, 56, 57]\r\n    [53, 52, 53, 54, 53, 53, 54, 55, 56, 55, 56, 57, 58]\r\n    [53, 52, 53, 54, 53, 53, 54, 55, 56, 55, 56, 57, 58, 59]\r\n    \r\n    after reversing, now the moving record is:\r\n    [59, 58, 57, 56, 55, 56, 55, 54, 53, 53, 54, 53, 52, 53]\r\n    \r\n    lastly, we print out planes chosen to shoot down\r\n    [59, 56, 53, 54, 52, 53]\r\n    \r\n    input data is  [59 53 50 50 54 56 50 58 53 57 54 58 52 53]\r\n    dynamic programming can shoot down 6 planes\r\n    brute force method can shoot down 6 planes\r\n`\r\n\r\n// document.getElementById('results').innerHTML = (marked(article))\r\nexport default {\r\n  name: 'article',\r\n  data(){\r\n    return {\r\n      rawHtml: marked(article)\r\n    }\r\n  },\r\n  mounted(){\r\n    Prism.highlightAll()\r\n    /*eslint-disable */\r\n    renderMathInElement(document.body,{\r\n        delimiters: [\r\n            {left: \"$$\", right: \"$$\", display: true},\r\n            {left: \"\\\\[\", right: \"\\\\]\", display: true},\r\n            {left: \"$\", right: \"$\", display: false},\r\n            {left: \"\\\\(\", right: \"\\\\)\", display: false}\r\n            ]\r\n        }\r\n    )\r\n    /*eslint-enable */\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style lang=\"scss\">\r\n@import '../article_font'\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// article.vue?7ec5d34b","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"@font-face{font-family:KaTeX_AMS;src:url(\" + require(\"./fonts/KaTeX_AMS-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_AMS-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_AMS-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_AMS-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_AMS-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Caligraphic;src:url(\" + require(\"./fonts/KaTeX_Caligraphic-Bold.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Caligraphic-Bold.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Caligraphic-Bold.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Caligraphic-Bold.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Caligraphic-Bold.ttf\") + \") format(\\\"truetype\\\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Caligraphic;src:url(\" + require(\"./fonts/KaTeX_Caligraphic-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Caligraphic-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Caligraphic-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Caligraphic-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Caligraphic-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Fraktur;src:url(\" + require(\"./fonts/KaTeX_Fraktur-Bold.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Fraktur-Bold.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Fraktur-Bold.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Fraktur-Bold.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Fraktur-Bold.ttf\") + \") format(\\\"truetype\\\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Fraktur;src:url(\" + require(\"./fonts/KaTeX_Fraktur-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Fraktur-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Fraktur-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Fraktur-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Fraktur-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Main;src:url(\" + require(\"./fonts/KaTeX_Main-Bold.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Main-Bold.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Main-Bold.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Main-Bold.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Main-Bold.ttf\") + \") format(\\\"truetype\\\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Main;src:url(\" + require(\"./fonts/KaTeX_Main-Italic.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Main-Italic.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Main-Italic.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Main-Italic.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Main-Italic.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:italic}@font-face{font-family:KaTeX_Main;src:url(\" + require(\"./fonts/KaTeX_Main-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Main-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Main-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Main-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Main-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Math;src:url(\" + require(\"./fonts/KaTeX_Math-Italic.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Math-Italic.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Math-Italic.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Math-Italic.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Math-Italic.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:italic}@font-face{font-family:KaTeX_SansSerif;src:url(\" + require(\"./fonts/KaTeX_SansSerif-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_SansSerif-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_SansSerif-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_SansSerif-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_SansSerif-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Script;src:url(\" + require(\"./fonts/KaTeX_Script-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Script-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Script-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Script-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Script-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size1;src:url(\" + require(\"./fonts/KaTeX_Size1-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Size1-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Size1-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Size1-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Size1-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size2;src:url(\" + require(\"./fonts/KaTeX_Size2-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Size2-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Size2-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Size2-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Size2-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size3;src:url(\" + require(\"./fonts/KaTeX_Size3-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Size3-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Size3-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Size3-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Size3-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size4;src:url(\" + require(\"./fonts/KaTeX_Size4-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Size4-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Size4-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Size4-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Size4-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Typewriter;src:url(\" + require(\"./fonts/KaTeX_Typewriter-Regular.eot\") + \");src:url(\" + require(\"./fonts/KaTeX_Typewriter-Regular.eot\") + \"#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"./fonts/KaTeX_Typewriter-Regular.woff2\") + \") format(\\\"woff2\\\"),url(\" + require(\"./fonts/KaTeX_Typewriter-Regular.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"./fonts/KaTeX_Typewriter-Regular.ttf\") + \") format(\\\"truetype\\\");font-weight:400;font-style:normal}.katex-display{display:block;margin:1em 0;text-align:center}.katex-display>.katex{display:inline-block;text-align:initial}.katex{font:normal 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;white-space:nowrap;text-indent:0}.katex .katex-html{display:inline-block}.katex .katex-mathml{position:absolute;clip:rect(1px,1px,1px,1px);padding:0;border:0;height:1px;width:1px;overflow:hidden}.katex .base,.katex .strut{display:inline-block}.katex .mathrm{font-style:normal}.katex .mathit,.katex .textit{font-style:italic}.katex .mathit{font-family:KaTeX_Math}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .amsrm,.katex .mathbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr{font-family:KaTeX_Script}.katex .mathsf{font-family:KaTeX_SansSerif}.katex .mainit{font-family:KaTeX_Main;font-style:italic}.katex .mord+.mop{margin-left:.16667em}.katex .mord+.mbin{margin-left:.22222em}.katex .mord+.mrel{margin-left:.27778em}.katex .mop+.mop,.katex .mop+.mord,.katex .mord+.minner{margin-left:.16667em}.katex .mop+.mrel{margin-left:.27778em}.katex .mop+.minner{margin-left:.16667em}.katex .mbin+.minner,.katex .mbin+.mop,.katex .mbin+.mopen,.katex .mbin+.mord{margin-left:.22222em}.katex .mrel+.minner,.katex .mrel+.mop,.katex .mrel+.mopen,.katex .mrel+.mord{margin-left:.27778em}.katex .mclose+.mop{margin-left:.16667em}.katex .mclose+.mbin{margin-left:.22222em}.katex .mclose+.mrel{margin-left:.27778em}.katex .mclose+.minner,.katex .minner+.mop,.katex .minner+.mord,.katex .mpunct+.mclose,.katex .mpunct+.minner,.katex .mpunct+.mop,.katex .mpunct+.mopen,.katex .mpunct+.mord,.katex .mpunct+.mpunct,.katex .mpunct+.mrel{margin-left:.16667em}.katex .minner+.mbin{margin-left:.22222em}.katex .minner+.mrel{margin-left:.27778em}.katex .minner+.minner,.katex .minner+.mopen,.katex .minner+.mpunct{margin-left:.16667em}.katex .mbin.mtight,.katex .mclose.mtight,.katex .minner.mtight,.katex .mop.mtight,.katex .mopen.mtight,.katex .mord.mtight,.katex .mpunct.mtight,.katex .mrel.mtight{margin-left:0}.katex .mclose+.mop.mtight,.katex .minner+.mop.mtight,.katex .mop+.mop.mtight,.katex .mop+.mord.mtight,.katex .mord+.mop.mtight{margin-left:.16667em}.katex .reset-textstyle.textstyle{font-size:1em}.katex .reset-textstyle.scriptstyle{font-size:.7em}.katex .reset-textstyle.scriptscriptstyle{font-size:.5em}.katex .reset-scriptstyle.textstyle{font-size:1.42857em}.katex .reset-scriptstyle.scriptstyle{font-size:1em}.katex .reset-scriptstyle.scriptscriptstyle{font-size:.71429em}.katex .reset-scriptscriptstyle.textstyle{font-size:2em}.katex .reset-scriptscriptstyle.scriptstyle{font-size:1.4em}.katex .reset-scriptscriptstyle.scriptscriptstyle{font-size:1em}.katex .style-wrap{position:relative}.katex .vlist{display:inline-block}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist .baseline-fix{display:inline-table;table-layout:fixed}.katex .msupsub{text-align:left}.katex .mfrac>span>span{text-align:center}.katex .mfrac .frac-line{width:100%}.katex .mfrac .frac-line:before{border-bottom-style:solid;border-bottom-width:1px;content:\\\"\\\";display:block}.katex .mfrac .frac-line:after{border-bottom-style:solid;border-bottom-width:.04em;content:\\\"\\\";display:block;margin-top:-1px}.katex .mspace{display:inline-block}.katex .mspace.negativethinspace{margin-left:-.16667em}.katex .mspace.thinspace{width:.16667em}.katex .mspace.negativemediumspace{margin-left:-.22222em}.katex .mspace.mediumspace{width:.22222em}.katex .mspace.thickspace{width:.27778em}.katex .mspace.sixmuspace{width:.333333em}.katex .mspace.eightmuspace{width:.444444em}.katex .mspace.enspace{width:.5em}.katex .mspace.twelvemuspace{width:.666667em}.katex .mspace.quad{width:1em}.katex .mspace.qquad{width:2em}.katex .llap,.katex .rlap{width:0;position:relative}.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .llap>.fix,.katex .rlap>.fix{display:inline-block}.katex .llap>.inner{right:0}.katex .rlap>.inner{left:0}.katex .katex-logo .a{font-size:.75em;margin-left:-.32em;position:relative;top:-.2em}.katex .katex-logo .t{margin-left:-.23em}.katex .katex-logo .e{margin-left:-.1667em;position:relative;top:.2155em}.katex .katex-logo .x{margin-left:-.125em}.katex .rule{display:inline-block;border:0 solid;position:relative}.katex .overline .overline-line,.katex .underline .underline-line{width:100%}.katex .overline .overline-line:before,.katex .underline .underline-line:before{border-bottom-style:solid;border-bottom-width:1px;content:\\\"\\\";display:block}.katex .overline .overline-line:after,.katex .underline .underline-line:after{border-bottom-style:solid;border-bottom-width:.04em;content:\\\"\\\";display:block;margin-top:-1px}.katex .sqrt>.sqrt-sign{position:relative}.katex .sqrt .sqrt-line{width:100%}.katex .sqrt .sqrt-line:before{border-bottom-style:solid;border-bottom-width:1px;content:\\\"\\\";display:block}.katex .sqrt .sqrt-line:after{border-bottom-style:solid;border-bottom-width:.04em;content:\\\"\\\";display:block;margin-top:-1px}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer,.katex .sizing{display:inline-block}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:2em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:3.46em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:4.14em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.98em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.47142857em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.95714286em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.55714286em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.875em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.125em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.25em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.5em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.8em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.1625em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.5875em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:3.1125em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.77777778em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.88888889em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.6em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.92222222em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.3em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.76666667em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.7em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.8em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.9em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.2em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.44em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.73em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:2.07em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.49em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.58333333em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.66666667em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.75em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.83333333em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44166667em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.725em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.075em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.48611111em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.55555556em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.625em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.69444444em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.20138889em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.4375em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72916667em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.28901734em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.40462428em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.46242775em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.52023121em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.57803468em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69364162em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83236994em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.19653179em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.43930636em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.24154589em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.33816425em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.38647343em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.43478261em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.48309179em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.57971014em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69565217em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83574879em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20289855em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.20080321em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.2811245em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.32128514em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.36144578em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.40160643em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48192771em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57831325em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69477912em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.8313253em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{display:inline-block;width:.12em}.katex .op-symbol{position:relative}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent>.vlist>span,.katex .op-limits>.vlist>span{text-align:center}.katex .accent .accent-body>span{width:0}.katex .accent .accent-body.accent-vec>span{position:relative;left:.326em}.katex .mtable .vertical-separator{display:inline-block;margin:0 -.025em;border-right:.05em solid #000}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-c>.vlist{text-align:center}.katex .mtable .col-align-l>.vlist{text-align:left}.katex .mtable .col-align-r>.vlist{text-align:right}\", \"\", {\"version\":3,\"sources\":[\"F:/Github/newvue/node_modules/katex/dist/katex.css\"],\"names\":[],\"mappings\":\"AAAA,WACE,sBAAyB,AACzB,kCAAwC,AACxC,0MAA2O,AAC3O,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,8BAAiC,AACjC,kCAA6C,AAC7C,0MAA+P,AAC/P,gBAAkB,AAClB,iBAAmB,CACpB,AACD,WACE,8BAAiC,AACjC,mCAAgD,AAChD,8MAA2Q,AAC3Q,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,0BAA6B,AAC7B,mCAAyC,AACzC,8MAA+O,AAC/O,gBAAkB,AAClB,iBAAmB,CACpB,AACD,WACE,0BAA6B,AAC7B,mCAA4C,AAC5C,8MAA2P,AAC3P,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,uBAA0B,AAC1B,mCAAsC,AACtC,8MAAmO,AACnO,gBAAkB,AAClB,iBAAmB,CACpB,AACD,WACE,uBAA0B,AAC1B,mCAAwC,AACxC,8MAA2O,AAC3O,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,uBAA0B,AAC1B,mCAAyC,AACzC,8MAA+O,AAC/O,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,uBAA0B,AAC1B,mCAAwC,AACxC,8MAA2O,AAC3O,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,4BAA+B,AAC/B,mCAA8C,AAC9C,8MAAmQ,AACnQ,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,yBAA4B,AAC5B,mCAA2C,AAC3C,8MAAuP,AACvP,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,wBAA2B,AAC3B,mCAA0C,AAC1C,8MAAmP,AACnP,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,wBAA2B,AAC3B,mCAA0C,AAC1C,8MAAmP,AACnP,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,wBAA2B,AAC3B,mCAA0C,AAC1C,8MAAmP,AACnP,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,wBAA2B,AAC3B,mCAA0C,AAC1C,8MAAmP,AACnP,gBAAoB,AACpB,iBAAmB,CACpB,AACD,WACE,6BAAgC,AAChC,mCAA+C,AAC/C,8MAAuQ,AACvQ,gBAAoB,AACpB,iBAAmB,CACpB,AACD,eACE,cAAe,AACf,aAAc,AACd,iBAAmB,CACpB,AACD,sBACE,qBAAsB,AACtB,kBAAoB,CACrB,AACD,OACE,oDAAuD,AACvD,gBAAiB,AACjB,mBAAoB,AACpB,aAAe,CAChB,AACD,mBACE,oBAAsB,CACvB,AACD,qBACE,kBAAmB,AACnB,2BAA+B,AAC/B,UAAW,AACX,SAAU,AACV,WAAY,AACZ,UAAW,AACX,eAAiB,CAClB,AAID,2BACE,oBAAsB,CACvB,AACD,eACE,iBAAmB,CACpB,AAID,8BAFE,iBAAmB,CAKpB,AAHD,eACE,sBAAwB,CAEzB,AACD,eACE,uBAAwB,AACxB,eAAkB,CACnB,AAID,6BACE,qBAAuB,CACxB,AACD,gBACE,6BAA+B,CAChC,AACD,iBACE,yBAA2B,CAC5B,AACD,eACE,4BAA8B,CAC/B,AACD,gBACE,wBAA0B,CAC3B,AACD,eACE,2BAA6B,CAC9B,AACD,eACE,uBAAwB,AACxB,iBAAmB,CACpB,AACD,kBACE,oBAAuB,CACxB,AACD,mBACE,oBAAuB,CACxB,AACD,mBACE,oBAAuB,CACxB,AAOD,wDACE,oBAAuB,CACxB,AACD,kBACE,oBAAuB,CACxB,AACD,oBACE,oBAAuB,CACxB,AAUD,8EACE,oBAAuB,CACxB,AAUD,8EACE,oBAAuB,CACxB,AACD,oBACE,oBAAuB,CACxB,AACD,qBACE,oBAAuB,CACxB,AACD,qBACE,oBAAuB,CACxB,AA4BD,yNACE,oBAAuB,CACxB,AACD,qBACE,oBAAuB,CACxB,AACD,qBACE,oBAAuB,CACxB,AAOD,oEACE,oBAAuB,CACxB,AAsBD,sKACE,aAAe,CAChB,AAaD,gIACE,oBAAuB,CACxB,AACD,kCACE,aAAe,CAChB,AACD,oCACE,cAAiB,CAClB,AACD,0CACE,cAAiB,CAClB,AACD,oCACE,mBAAqB,CACtB,AACD,sCACE,aAAe,CAChB,AACD,4CACE,kBAAqB,CACtB,AACD,0CACE,aAAe,CAChB,AACD,4CACE,eAAiB,CAClB,AACD,kDACE,aAAe,CAChB,AACD,mBACE,iBAAmB,CACpB,AACD,cACE,oBAAsB,CACvB,AACD,mBACE,cAAe,AACf,SAAU,AACV,iBAAmB,CACpB,AACD,wBACE,oBAAsB,CACvB,AACD,4BACE,qBAAsB,AACtB,kBAAoB,CACrB,AACD,gBACE,eAAiB,CAClB,AACD,wBACE,iBAAmB,CACpB,AACD,yBACE,UAAY,CACb,AACD,gCACE,0BAA2B,AAC3B,wBAAyB,AACzB,WAAY,AACZ,aAAe,CAChB,AACD,+BACE,0BAA2B,AAC3B,0BAA4B,AAC5B,WAAY,AACZ,cAAe,AACf,eAAiB,CAClB,AACD,eACE,oBAAsB,CACvB,AACD,iCACE,qBAAwB,CACzB,AACD,yBACE,cAAiB,CAClB,AACD,mCACE,qBAAwB,CACzB,AACD,2BACE,cAAiB,CAClB,AACD,0BACE,cAAiB,CAClB,AACD,0BACE,eAAkB,CACnB,AACD,4BACE,eAAkB,CACnB,AACD,uBACE,UAAa,CACd,AACD,6BACE,eAAkB,CACnB,AACD,oBACE,SAAW,CACZ,AACD,qBACE,SAAW,CACZ,AACD,0BAEE,QAAS,AACT,iBAAmB,CACpB,AACD,wCAEE,iBAAmB,CACpB,AACD,oCAEE,oBAAsB,CACvB,AACD,oBACE,OAAS,CACV,AACD,oBACE,MAAQ,CACT,AACD,sBACE,gBAAkB,AAClB,mBAAqB,AACrB,kBAAmB,AACnB,SAAY,CACb,AACD,sBACE,kBAAqB,CACtB,AACD,sBACE,qBAAuB,AACvB,kBAAmB,AACnB,WAAc,CACf,AACD,sBACE,mBAAsB,CACvB,AACD,aACE,qBAAsB,AACtB,eAAgB,AAChB,iBAAmB,CACpB,AACD,kEAEE,UAAY,CACb,AACD,gFAEE,0BAA2B,AAC3B,wBAAyB,AACzB,WAAY,AACZ,aAAe,CAChB,AACD,8EAEE,0BAA2B,AAC3B,0BAA4B,AAC5B,WAAY,AACZ,cAAe,AACf,eAAiB,CAClB,AACD,wBACE,iBAAmB,CACpB,AACD,wBACE,UAAY,CACb,AACD,+BACE,0BAA2B,AAC3B,wBAAyB,AACzB,WAAY,AACZ,aAAe,CAChB,AACD,8BACE,0BAA2B,AAC3B,0BAA4B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\",\"file\":\"katex.css\",\"sourcesContent\":[\"@font-face {\\n  font-family: 'KaTeX_AMS';\\n  src: url('fonts/KaTeX_AMS-Regular.eot');\\n  src: url('fonts/KaTeX_AMS-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_AMS-Regular.woff2') format('woff2'), url('fonts/KaTeX_AMS-Regular.woff') format('woff'), url('fonts/KaTeX_AMS-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Caligraphic';\\n  src: url('fonts/KaTeX_Caligraphic-Bold.eot');\\n  src: url('fonts/KaTeX_Caligraphic-Bold.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Caligraphic-Bold.woff2') format('woff2'), url('fonts/KaTeX_Caligraphic-Bold.woff') format('woff'), url('fonts/KaTeX_Caligraphic-Bold.ttf') format('truetype');\\n  font-weight: bold;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Caligraphic';\\n  src: url('fonts/KaTeX_Caligraphic-Regular.eot');\\n  src: url('fonts/KaTeX_Caligraphic-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Caligraphic-Regular.woff2') format('woff2'), url('fonts/KaTeX_Caligraphic-Regular.woff') format('woff'), url('fonts/KaTeX_Caligraphic-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Fraktur';\\n  src: url('fonts/KaTeX_Fraktur-Bold.eot');\\n  src: url('fonts/KaTeX_Fraktur-Bold.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Fraktur-Bold.woff2') format('woff2'), url('fonts/KaTeX_Fraktur-Bold.woff') format('woff'), url('fonts/KaTeX_Fraktur-Bold.ttf') format('truetype');\\n  font-weight: bold;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Fraktur';\\n  src: url('fonts/KaTeX_Fraktur-Regular.eot');\\n  src: url('fonts/KaTeX_Fraktur-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Fraktur-Regular.woff2') format('woff2'), url('fonts/KaTeX_Fraktur-Regular.woff') format('woff'), url('fonts/KaTeX_Fraktur-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Main';\\n  src: url('fonts/KaTeX_Main-Bold.eot');\\n  src: url('fonts/KaTeX_Main-Bold.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Main-Bold.woff2') format('woff2'), url('fonts/KaTeX_Main-Bold.woff') format('woff'), url('fonts/KaTeX_Main-Bold.ttf') format('truetype');\\n  font-weight: bold;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Main';\\n  src: url('fonts/KaTeX_Main-Italic.eot');\\n  src: url('fonts/KaTeX_Main-Italic.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Main-Italic.woff2') format('woff2'), url('fonts/KaTeX_Main-Italic.woff') format('woff'), url('fonts/KaTeX_Main-Italic.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: italic;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Main';\\n  src: url('fonts/KaTeX_Main-Regular.eot');\\n  src: url('fonts/KaTeX_Main-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Main-Regular.woff2') format('woff2'), url('fonts/KaTeX_Main-Regular.woff') format('woff'), url('fonts/KaTeX_Main-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Math';\\n  src: url('fonts/KaTeX_Math-Italic.eot');\\n  src: url('fonts/KaTeX_Math-Italic.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Math-Italic.woff2') format('woff2'), url('fonts/KaTeX_Math-Italic.woff') format('woff'), url('fonts/KaTeX_Math-Italic.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: italic;\\n}\\n@font-face {\\n  font-family: 'KaTeX_SansSerif';\\n  src: url('fonts/KaTeX_SansSerif-Regular.eot');\\n  src: url('fonts/KaTeX_SansSerif-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_SansSerif-Regular.woff2') format('woff2'), url('fonts/KaTeX_SansSerif-Regular.woff') format('woff'), url('fonts/KaTeX_SansSerif-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Script';\\n  src: url('fonts/KaTeX_Script-Regular.eot');\\n  src: url('fonts/KaTeX_Script-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Script-Regular.woff2') format('woff2'), url('fonts/KaTeX_Script-Regular.woff') format('woff'), url('fonts/KaTeX_Script-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Size1';\\n  src: url('fonts/KaTeX_Size1-Regular.eot');\\n  src: url('fonts/KaTeX_Size1-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Size1-Regular.woff2') format('woff2'), url('fonts/KaTeX_Size1-Regular.woff') format('woff'), url('fonts/KaTeX_Size1-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Size2';\\n  src: url('fonts/KaTeX_Size2-Regular.eot');\\n  src: url('fonts/KaTeX_Size2-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Size2-Regular.woff2') format('woff2'), url('fonts/KaTeX_Size2-Regular.woff') format('woff'), url('fonts/KaTeX_Size2-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Size3';\\n  src: url('fonts/KaTeX_Size3-Regular.eot');\\n  src: url('fonts/KaTeX_Size3-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Size3-Regular.woff2') format('woff2'), url('fonts/KaTeX_Size3-Regular.woff') format('woff'), url('fonts/KaTeX_Size3-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Size4';\\n  src: url('fonts/KaTeX_Size4-Regular.eot');\\n  src: url('fonts/KaTeX_Size4-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Size4-Regular.woff2') format('woff2'), url('fonts/KaTeX_Size4-Regular.woff') format('woff'), url('fonts/KaTeX_Size4-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'KaTeX_Typewriter';\\n  src: url('fonts/KaTeX_Typewriter-Regular.eot');\\n  src: url('fonts/KaTeX_Typewriter-Regular.eot#iefix') format('embedded-opentype'), url('fonts/KaTeX_Typewriter-Regular.woff2') format('woff2'), url('fonts/KaTeX_Typewriter-Regular.woff') format('woff'), url('fonts/KaTeX_Typewriter-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n.katex-display {\\n  display: block;\\n  margin: 1em 0;\\n  text-align: center;\\n}\\n.katex-display > .katex {\\n  display: inline-block;\\n  text-align: initial;\\n}\\n.katex {\\n  font: normal 1.21em KaTeX_Main, Times New Roman, serif;\\n  line-height: 1.2;\\n  white-space: nowrap;\\n  text-indent: 0;\\n}\\n.katex .katex-html {\\n  display: inline-block;\\n}\\n.katex .katex-mathml {\\n  position: absolute;\\n  clip: rect(1px, 1px, 1px, 1px);\\n  padding: 0;\\n  border: 0;\\n  height: 1px;\\n  width: 1px;\\n  overflow: hidden;\\n}\\n.katex .base {\\n  display: inline-block;\\n}\\n.katex .strut {\\n  display: inline-block;\\n}\\n.katex .mathrm {\\n  font-style: normal;\\n}\\n.katex .textit {\\n  font-style: italic;\\n}\\n.katex .mathit {\\n  font-family: KaTeX_Math;\\n  font-style: italic;\\n}\\n.katex .mathbf {\\n  font-family: KaTeX_Main;\\n  font-weight: bold;\\n}\\n.katex .amsrm {\\n  font-family: KaTeX_AMS;\\n}\\n.katex .mathbb {\\n  font-family: KaTeX_AMS;\\n}\\n.katex .mathcal {\\n  font-family: KaTeX_Caligraphic;\\n}\\n.katex .mathfrak {\\n  font-family: KaTeX_Fraktur;\\n}\\n.katex .mathtt {\\n  font-family: KaTeX_Typewriter;\\n}\\n.katex .mathscr {\\n  font-family: KaTeX_Script;\\n}\\n.katex .mathsf {\\n  font-family: KaTeX_SansSerif;\\n}\\n.katex .mainit {\\n  font-family: KaTeX_Main;\\n  font-style: italic;\\n}\\n.katex .mord + .mop {\\n  margin-left: 0.16667em;\\n}\\n.katex .mord + .mbin {\\n  margin-left: 0.22222em;\\n}\\n.katex .mord + .mrel {\\n  margin-left: 0.27778em;\\n}\\n.katex .mord + .minner {\\n  margin-left: 0.16667em;\\n}\\n.katex .mop + .mord {\\n  margin-left: 0.16667em;\\n}\\n.katex .mop + .mop {\\n  margin-left: 0.16667em;\\n}\\n.katex .mop + .mrel {\\n  margin-left: 0.27778em;\\n}\\n.katex .mop + .minner {\\n  margin-left: 0.16667em;\\n}\\n.katex .mbin + .mord {\\n  margin-left: 0.22222em;\\n}\\n.katex .mbin + .mop {\\n  margin-left: 0.22222em;\\n}\\n.katex .mbin + .mopen {\\n  margin-left: 0.22222em;\\n}\\n.katex .mbin + .minner {\\n  margin-left: 0.22222em;\\n}\\n.katex .mrel + .mord {\\n  margin-left: 0.27778em;\\n}\\n.katex .mrel + .mop {\\n  margin-left: 0.27778em;\\n}\\n.katex .mrel + .mopen {\\n  margin-left: 0.27778em;\\n}\\n.katex .mrel + .minner {\\n  margin-left: 0.27778em;\\n}\\n.katex .mclose + .mop {\\n  margin-left: 0.16667em;\\n}\\n.katex .mclose + .mbin {\\n  margin-left: 0.22222em;\\n}\\n.katex .mclose + .mrel {\\n  margin-left: 0.27778em;\\n}\\n.katex .mclose + .minner {\\n  margin-left: 0.16667em;\\n}\\n.katex .mpunct + .mord {\\n  margin-left: 0.16667em;\\n}\\n.katex .mpunct + .mop {\\n  margin-left: 0.16667em;\\n}\\n.katex .mpunct + .mrel {\\n  margin-left: 0.16667em;\\n}\\n.katex .mpunct + .mopen {\\n  margin-left: 0.16667em;\\n}\\n.katex .mpunct + .mclose {\\n  margin-left: 0.16667em;\\n}\\n.katex .mpunct + .mpunct {\\n  margin-left: 0.16667em;\\n}\\n.katex .mpunct + .minner {\\n  margin-left: 0.16667em;\\n}\\n.katex .minner + .mord {\\n  margin-left: 0.16667em;\\n}\\n.katex .minner + .mop {\\n  margin-left: 0.16667em;\\n}\\n.katex .minner + .mbin {\\n  margin-left: 0.22222em;\\n}\\n.katex .minner + .mrel {\\n  margin-left: 0.27778em;\\n}\\n.katex .minner + .mopen {\\n  margin-left: 0.16667em;\\n}\\n.katex .minner + .mpunct {\\n  margin-left: 0.16667em;\\n}\\n.katex .minner + .minner {\\n  margin-left: 0.16667em;\\n}\\n.katex .mord.mtight {\\n  margin-left: 0;\\n}\\n.katex .mop.mtight {\\n  margin-left: 0;\\n}\\n.katex .mbin.mtight {\\n  margin-left: 0;\\n}\\n.katex .mrel.mtight {\\n  margin-left: 0;\\n}\\n.katex .mopen.mtight {\\n  margin-left: 0;\\n}\\n.katex .mclose.mtight {\\n  margin-left: 0;\\n}\\n.katex .mpunct.mtight {\\n  margin-left: 0;\\n}\\n.katex .minner.mtight {\\n  margin-left: 0;\\n}\\n.katex .mord + .mop.mtight {\\n  margin-left: 0.16667em;\\n}\\n.katex .mop + .mord.mtight {\\n  margin-left: 0.16667em;\\n}\\n.katex .mop + .mop.mtight {\\n  margin-left: 0.16667em;\\n}\\n.katex .mclose + .mop.mtight {\\n  margin-left: 0.16667em;\\n}\\n.katex .minner + .mop.mtight {\\n  margin-left: 0.16667em;\\n}\\n.katex .reset-textstyle.textstyle {\\n  font-size: 1em;\\n}\\n.katex .reset-textstyle.scriptstyle {\\n  font-size: 0.7em;\\n}\\n.katex .reset-textstyle.scriptscriptstyle {\\n  font-size: 0.5em;\\n}\\n.katex .reset-scriptstyle.textstyle {\\n  font-size: 1.42857em;\\n}\\n.katex .reset-scriptstyle.scriptstyle {\\n  font-size: 1em;\\n}\\n.katex .reset-scriptstyle.scriptscriptstyle {\\n  font-size: 0.71429em;\\n}\\n.katex .reset-scriptscriptstyle.textstyle {\\n  font-size: 2em;\\n}\\n.katex .reset-scriptscriptstyle.scriptstyle {\\n  font-size: 1.4em;\\n}\\n.katex .reset-scriptscriptstyle.scriptscriptstyle {\\n  font-size: 1em;\\n}\\n.katex .style-wrap {\\n  position: relative;\\n}\\n.katex .vlist {\\n  display: inline-block;\\n}\\n.katex .vlist > span {\\n  display: block;\\n  height: 0;\\n  position: relative;\\n}\\n.katex .vlist > span > span {\\n  display: inline-block;\\n}\\n.katex .vlist .baseline-fix {\\n  display: inline-table;\\n  table-layout: fixed;\\n}\\n.katex .msupsub {\\n  text-align: left;\\n}\\n.katex .mfrac > span > span {\\n  text-align: center;\\n}\\n.katex .mfrac .frac-line {\\n  width: 100%;\\n}\\n.katex .mfrac .frac-line:before {\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  content: \\\"\\\";\\n  display: block;\\n}\\n.katex .mfrac .frac-line:after {\\n  border-bottom-style: solid;\\n  border-bottom-width: 0.04em;\\n  content: \\\"\\\";\\n  display: block;\\n  margin-top: -1px;\\n}\\n.katex .mspace {\\n  display: inline-block;\\n}\\n.katex .mspace.negativethinspace {\\n  margin-left: -0.16667em;\\n}\\n.katex .mspace.thinspace {\\n  width: 0.16667em;\\n}\\n.katex .mspace.negativemediumspace {\\n  margin-left: -0.22222em;\\n}\\n.katex .mspace.mediumspace {\\n  width: 0.22222em;\\n}\\n.katex .mspace.thickspace {\\n  width: 0.27778em;\\n}\\n.katex .mspace.sixmuspace {\\n  width: 0.333333em;\\n}\\n.katex .mspace.eightmuspace {\\n  width: 0.444444em;\\n}\\n.katex .mspace.enspace {\\n  width: 0.5em;\\n}\\n.katex .mspace.twelvemuspace {\\n  width: 0.666667em;\\n}\\n.katex .mspace.quad {\\n  width: 1em;\\n}\\n.katex .mspace.qquad {\\n  width: 2em;\\n}\\n.katex .llap,\\n.katex .rlap {\\n  width: 0;\\n  position: relative;\\n}\\n.katex .llap > .inner,\\n.katex .rlap > .inner {\\n  position: absolute;\\n}\\n.katex .llap > .fix,\\n.katex .rlap > .fix {\\n  display: inline-block;\\n}\\n.katex .llap > .inner {\\n  right: 0;\\n}\\n.katex .rlap > .inner {\\n  left: 0;\\n}\\n.katex .katex-logo .a {\\n  font-size: 0.75em;\\n  margin-left: -0.32em;\\n  position: relative;\\n  top: -0.2em;\\n}\\n.katex .katex-logo .t {\\n  margin-left: -0.23em;\\n}\\n.katex .katex-logo .e {\\n  margin-left: -0.1667em;\\n  position: relative;\\n  top: 0.2155em;\\n}\\n.katex .katex-logo .x {\\n  margin-left: -0.125em;\\n}\\n.katex .rule {\\n  display: inline-block;\\n  border: solid 0;\\n  position: relative;\\n}\\n.katex .overline .overline-line,\\n.katex .underline .underline-line {\\n  width: 100%;\\n}\\n.katex .overline .overline-line:before,\\n.katex .underline .underline-line:before {\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  content: \\\"\\\";\\n  display: block;\\n}\\n.katex .overline .overline-line:after,\\n.katex .underline .underline-line:after {\\n  border-bottom-style: solid;\\n  border-bottom-width: 0.04em;\\n  content: \\\"\\\";\\n  display: block;\\n  margin-top: -1px;\\n}\\n.katex .sqrt > .sqrt-sign {\\n  position: relative;\\n}\\n.katex .sqrt .sqrt-line {\\n  width: 100%;\\n}\\n.katex .sqrt .sqrt-line:before {\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  content: \\\"\\\";\\n  display: block;\\n}\\n.katex .sqrt .sqrt-line:after {\\n  border-bottom-style: solid;\\n  border-bottom-width: 0.04em;\\n  content: \\\"\\\";\\n  display: block;\\n  margin-top: -1px;\\n}\\n.katex .sqrt > .root {\\n  margin-left: 0.27777778em;\\n  margin-right: -0.55555556em;\\n}\\n.katex .sizing,\\n.katex .fontsize-ensurer {\\n  display: inline-block;\\n}\\n.katex .sizing.reset-size1.size1,\\n.katex .fontsize-ensurer.reset-size1.size1 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size1.size2,\\n.katex .fontsize-ensurer.reset-size1.size2 {\\n  font-size: 1.4em;\\n}\\n.katex .sizing.reset-size1.size3,\\n.katex .fontsize-ensurer.reset-size1.size3 {\\n  font-size: 1.6em;\\n}\\n.katex .sizing.reset-size1.size4,\\n.katex .fontsize-ensurer.reset-size1.size4 {\\n  font-size: 1.8em;\\n}\\n.katex .sizing.reset-size1.size5,\\n.katex .fontsize-ensurer.reset-size1.size5 {\\n  font-size: 2em;\\n}\\n.katex .sizing.reset-size1.size6,\\n.katex .fontsize-ensurer.reset-size1.size6 {\\n  font-size: 2.4em;\\n}\\n.katex .sizing.reset-size1.size7,\\n.katex .fontsize-ensurer.reset-size1.size7 {\\n  font-size: 2.88em;\\n}\\n.katex .sizing.reset-size1.size8,\\n.katex .fontsize-ensurer.reset-size1.size8 {\\n  font-size: 3.46em;\\n}\\n.katex .sizing.reset-size1.size9,\\n.katex .fontsize-ensurer.reset-size1.size9 {\\n  font-size: 4.14em;\\n}\\n.katex .sizing.reset-size1.size10,\\n.katex .fontsize-ensurer.reset-size1.size10 {\\n  font-size: 4.98em;\\n}\\n.katex .sizing.reset-size2.size1,\\n.katex .fontsize-ensurer.reset-size2.size1 {\\n  font-size: 0.71428571em;\\n}\\n.katex .sizing.reset-size2.size2,\\n.katex .fontsize-ensurer.reset-size2.size2 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size2.size3,\\n.katex .fontsize-ensurer.reset-size2.size3 {\\n  font-size: 1.14285714em;\\n}\\n.katex .sizing.reset-size2.size4,\\n.katex .fontsize-ensurer.reset-size2.size4 {\\n  font-size: 1.28571429em;\\n}\\n.katex .sizing.reset-size2.size5,\\n.katex .fontsize-ensurer.reset-size2.size5 {\\n  font-size: 1.42857143em;\\n}\\n.katex .sizing.reset-size2.size6,\\n.katex .fontsize-ensurer.reset-size2.size6 {\\n  font-size: 1.71428571em;\\n}\\n.katex .sizing.reset-size2.size7,\\n.katex .fontsize-ensurer.reset-size2.size7 {\\n  font-size: 2.05714286em;\\n}\\n.katex .sizing.reset-size2.size8,\\n.katex .fontsize-ensurer.reset-size2.size8 {\\n  font-size: 2.47142857em;\\n}\\n.katex .sizing.reset-size2.size9,\\n.katex .fontsize-ensurer.reset-size2.size9 {\\n  font-size: 2.95714286em;\\n}\\n.katex .sizing.reset-size2.size10,\\n.katex .fontsize-ensurer.reset-size2.size10 {\\n  font-size: 3.55714286em;\\n}\\n.katex .sizing.reset-size3.size1,\\n.katex .fontsize-ensurer.reset-size3.size1 {\\n  font-size: 0.625em;\\n}\\n.katex .sizing.reset-size3.size2,\\n.katex .fontsize-ensurer.reset-size3.size2 {\\n  font-size: 0.875em;\\n}\\n.katex .sizing.reset-size3.size3,\\n.katex .fontsize-ensurer.reset-size3.size3 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size3.size4,\\n.katex .fontsize-ensurer.reset-size3.size4 {\\n  font-size: 1.125em;\\n}\\n.katex .sizing.reset-size3.size5,\\n.katex .fontsize-ensurer.reset-size3.size5 {\\n  font-size: 1.25em;\\n}\\n.katex .sizing.reset-size3.size6,\\n.katex .fontsize-ensurer.reset-size3.size6 {\\n  font-size: 1.5em;\\n}\\n.katex .sizing.reset-size3.size7,\\n.katex .fontsize-ensurer.reset-size3.size7 {\\n  font-size: 1.8em;\\n}\\n.katex .sizing.reset-size3.size8,\\n.katex .fontsize-ensurer.reset-size3.size8 {\\n  font-size: 2.1625em;\\n}\\n.katex .sizing.reset-size3.size9,\\n.katex .fontsize-ensurer.reset-size3.size9 {\\n  font-size: 2.5875em;\\n}\\n.katex .sizing.reset-size3.size10,\\n.katex .fontsize-ensurer.reset-size3.size10 {\\n  font-size: 3.1125em;\\n}\\n.katex .sizing.reset-size4.size1,\\n.katex .fontsize-ensurer.reset-size4.size1 {\\n  font-size: 0.55555556em;\\n}\\n.katex .sizing.reset-size4.size2,\\n.katex .fontsize-ensurer.reset-size4.size2 {\\n  font-size: 0.77777778em;\\n}\\n.katex .sizing.reset-size4.size3,\\n.katex .fontsize-ensurer.reset-size4.size3 {\\n  font-size: 0.88888889em;\\n}\\n.katex .sizing.reset-size4.size4,\\n.katex .fontsize-ensurer.reset-size4.size4 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size4.size5,\\n.katex .fontsize-ensurer.reset-size4.size5 {\\n  font-size: 1.11111111em;\\n}\\n.katex .sizing.reset-size4.size6,\\n.katex .fontsize-ensurer.reset-size4.size6 {\\n  font-size: 1.33333333em;\\n}\\n.katex .sizing.reset-size4.size7,\\n.katex .fontsize-ensurer.reset-size4.size7 {\\n  font-size: 1.6em;\\n}\\n.katex .sizing.reset-size4.size8,\\n.katex .fontsize-ensurer.reset-size4.size8 {\\n  font-size: 1.92222222em;\\n}\\n.katex .sizing.reset-size4.size9,\\n.katex .fontsize-ensurer.reset-size4.size9 {\\n  font-size: 2.3em;\\n}\\n.katex .sizing.reset-size4.size10,\\n.katex .fontsize-ensurer.reset-size4.size10 {\\n  font-size: 2.76666667em;\\n}\\n.katex .sizing.reset-size5.size1,\\n.katex .fontsize-ensurer.reset-size5.size1 {\\n  font-size: 0.5em;\\n}\\n.katex .sizing.reset-size5.size2,\\n.katex .fontsize-ensurer.reset-size5.size2 {\\n  font-size: 0.7em;\\n}\\n.katex .sizing.reset-size5.size3,\\n.katex .fontsize-ensurer.reset-size5.size3 {\\n  font-size: 0.8em;\\n}\\n.katex .sizing.reset-size5.size4,\\n.katex .fontsize-ensurer.reset-size5.size4 {\\n  font-size: 0.9em;\\n}\\n.katex .sizing.reset-size5.size5,\\n.katex .fontsize-ensurer.reset-size5.size5 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size5.size6,\\n.katex .fontsize-ensurer.reset-size5.size6 {\\n  font-size: 1.2em;\\n}\\n.katex .sizing.reset-size5.size7,\\n.katex .fontsize-ensurer.reset-size5.size7 {\\n  font-size: 1.44em;\\n}\\n.katex .sizing.reset-size5.size8,\\n.katex .fontsize-ensurer.reset-size5.size8 {\\n  font-size: 1.73em;\\n}\\n.katex .sizing.reset-size5.size9,\\n.katex .fontsize-ensurer.reset-size5.size9 {\\n  font-size: 2.07em;\\n}\\n.katex .sizing.reset-size5.size10,\\n.katex .fontsize-ensurer.reset-size5.size10 {\\n  font-size: 2.49em;\\n}\\n.katex .sizing.reset-size6.size1,\\n.katex .fontsize-ensurer.reset-size6.size1 {\\n  font-size: 0.41666667em;\\n}\\n.katex .sizing.reset-size6.size2,\\n.katex .fontsize-ensurer.reset-size6.size2 {\\n  font-size: 0.58333333em;\\n}\\n.katex .sizing.reset-size6.size3,\\n.katex .fontsize-ensurer.reset-size6.size3 {\\n  font-size: 0.66666667em;\\n}\\n.katex .sizing.reset-size6.size4,\\n.katex .fontsize-ensurer.reset-size6.size4 {\\n  font-size: 0.75em;\\n}\\n.katex .sizing.reset-size6.size5,\\n.katex .fontsize-ensurer.reset-size6.size5 {\\n  font-size: 0.83333333em;\\n}\\n.katex .sizing.reset-size6.size6,\\n.katex .fontsize-ensurer.reset-size6.size6 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size6.size7,\\n.katex .fontsize-ensurer.reset-size6.size7 {\\n  font-size: 1.2em;\\n}\\n.katex .sizing.reset-size6.size8,\\n.katex .fontsize-ensurer.reset-size6.size8 {\\n  font-size: 1.44166667em;\\n}\\n.katex .sizing.reset-size6.size9,\\n.katex .fontsize-ensurer.reset-size6.size9 {\\n  font-size: 1.725em;\\n}\\n.katex .sizing.reset-size6.size10,\\n.katex .fontsize-ensurer.reset-size6.size10 {\\n  font-size: 2.075em;\\n}\\n.katex .sizing.reset-size7.size1,\\n.katex .fontsize-ensurer.reset-size7.size1 {\\n  font-size: 0.34722222em;\\n}\\n.katex .sizing.reset-size7.size2,\\n.katex .fontsize-ensurer.reset-size7.size2 {\\n  font-size: 0.48611111em;\\n}\\n.katex .sizing.reset-size7.size3,\\n.katex .fontsize-ensurer.reset-size7.size3 {\\n  font-size: 0.55555556em;\\n}\\n.katex .sizing.reset-size7.size4,\\n.katex .fontsize-ensurer.reset-size7.size4 {\\n  font-size: 0.625em;\\n}\\n.katex .sizing.reset-size7.size5,\\n.katex .fontsize-ensurer.reset-size7.size5 {\\n  font-size: 0.69444444em;\\n}\\n.katex .sizing.reset-size7.size6,\\n.katex .fontsize-ensurer.reset-size7.size6 {\\n  font-size: 0.83333333em;\\n}\\n.katex .sizing.reset-size7.size7,\\n.katex .fontsize-ensurer.reset-size7.size7 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size7.size8,\\n.katex .fontsize-ensurer.reset-size7.size8 {\\n  font-size: 1.20138889em;\\n}\\n.katex .sizing.reset-size7.size9,\\n.katex .fontsize-ensurer.reset-size7.size9 {\\n  font-size: 1.4375em;\\n}\\n.katex .sizing.reset-size7.size10,\\n.katex .fontsize-ensurer.reset-size7.size10 {\\n  font-size: 1.72916667em;\\n}\\n.katex .sizing.reset-size8.size1,\\n.katex .fontsize-ensurer.reset-size8.size1 {\\n  font-size: 0.28901734em;\\n}\\n.katex .sizing.reset-size8.size2,\\n.katex .fontsize-ensurer.reset-size8.size2 {\\n  font-size: 0.40462428em;\\n}\\n.katex .sizing.reset-size8.size3,\\n.katex .fontsize-ensurer.reset-size8.size3 {\\n  font-size: 0.46242775em;\\n}\\n.katex .sizing.reset-size8.size4,\\n.katex .fontsize-ensurer.reset-size8.size4 {\\n  font-size: 0.52023121em;\\n}\\n.katex .sizing.reset-size8.size5,\\n.katex .fontsize-ensurer.reset-size8.size5 {\\n  font-size: 0.57803468em;\\n}\\n.katex .sizing.reset-size8.size6,\\n.katex .fontsize-ensurer.reset-size8.size6 {\\n  font-size: 0.69364162em;\\n}\\n.katex .sizing.reset-size8.size7,\\n.katex .fontsize-ensurer.reset-size8.size7 {\\n  font-size: 0.83236994em;\\n}\\n.katex .sizing.reset-size8.size8,\\n.katex .fontsize-ensurer.reset-size8.size8 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size8.size9,\\n.katex .fontsize-ensurer.reset-size8.size9 {\\n  font-size: 1.19653179em;\\n}\\n.katex .sizing.reset-size8.size10,\\n.katex .fontsize-ensurer.reset-size8.size10 {\\n  font-size: 1.43930636em;\\n}\\n.katex .sizing.reset-size9.size1,\\n.katex .fontsize-ensurer.reset-size9.size1 {\\n  font-size: 0.24154589em;\\n}\\n.katex .sizing.reset-size9.size2,\\n.katex .fontsize-ensurer.reset-size9.size2 {\\n  font-size: 0.33816425em;\\n}\\n.katex .sizing.reset-size9.size3,\\n.katex .fontsize-ensurer.reset-size9.size3 {\\n  font-size: 0.38647343em;\\n}\\n.katex .sizing.reset-size9.size4,\\n.katex .fontsize-ensurer.reset-size9.size4 {\\n  font-size: 0.43478261em;\\n}\\n.katex .sizing.reset-size9.size5,\\n.katex .fontsize-ensurer.reset-size9.size5 {\\n  font-size: 0.48309179em;\\n}\\n.katex .sizing.reset-size9.size6,\\n.katex .fontsize-ensurer.reset-size9.size6 {\\n  font-size: 0.57971014em;\\n}\\n.katex .sizing.reset-size9.size7,\\n.katex .fontsize-ensurer.reset-size9.size7 {\\n  font-size: 0.69565217em;\\n}\\n.katex .sizing.reset-size9.size8,\\n.katex .fontsize-ensurer.reset-size9.size8 {\\n  font-size: 0.83574879em;\\n}\\n.katex .sizing.reset-size9.size9,\\n.katex .fontsize-ensurer.reset-size9.size9 {\\n  font-size: 1em;\\n}\\n.katex .sizing.reset-size9.size10,\\n.katex .fontsize-ensurer.reset-size9.size10 {\\n  font-size: 1.20289855em;\\n}\\n.katex .sizing.reset-size10.size1,\\n.katex .fontsize-ensurer.reset-size10.size1 {\\n  font-size: 0.20080321em;\\n}\\n.katex .sizing.reset-size10.size2,\\n.katex .fontsize-ensurer.reset-size10.size2 {\\n  font-size: 0.2811245em;\\n}\\n.katex .sizing.reset-size10.size3,\\n.katex .fontsize-ensurer.reset-size10.size3 {\\n  font-size: 0.32128514em;\\n}\\n.katex .sizing.reset-size10.size4,\\n.katex .fontsize-ensurer.reset-size10.size4 {\\n  font-size: 0.36144578em;\\n}\\n.katex .sizing.reset-size10.size5,\\n.katex .fontsize-ensurer.reset-size10.size5 {\\n  font-size: 0.40160643em;\\n}\\n.katex .sizing.reset-size10.size6,\\n.katex .fontsize-ensurer.reset-size10.size6 {\\n  font-size: 0.48192771em;\\n}\\n.katex .sizing.reset-size10.size7,\\n.katex .fontsize-ensurer.reset-size10.size7 {\\n  font-size: 0.57831325em;\\n}\\n.katex .sizing.reset-size10.size8,\\n.katex .fontsize-ensurer.reset-size10.size8 {\\n  font-size: 0.69477912em;\\n}\\n.katex .sizing.reset-size10.size9,\\n.katex .fontsize-ensurer.reset-size10.size9 {\\n  font-size: 0.8313253em;\\n}\\n.katex .sizing.reset-size10.size10,\\n.katex .fontsize-ensurer.reset-size10.size10 {\\n  font-size: 1em;\\n}\\n.katex .delimsizing.size1 {\\n  font-family: KaTeX_Size1;\\n}\\n.katex .delimsizing.size2 {\\n  font-family: KaTeX_Size2;\\n}\\n.katex .delimsizing.size3 {\\n  font-family: KaTeX_Size3;\\n}\\n.katex .delimsizing.size4 {\\n  font-family: KaTeX_Size4;\\n}\\n.katex .delimsizing.mult .delim-size1 > span {\\n  font-family: KaTeX_Size1;\\n}\\n.katex .delimsizing.mult .delim-size4 > span {\\n  font-family: KaTeX_Size4;\\n}\\n.katex .nulldelimiter {\\n  display: inline-block;\\n  width: 0.12em;\\n}\\n.katex .op-symbol {\\n  position: relative;\\n}\\n.katex .op-symbol.small-op {\\n  font-family: KaTeX_Size1;\\n}\\n.katex .op-symbol.large-op {\\n  font-family: KaTeX_Size2;\\n}\\n.katex .op-limits > .vlist > span {\\n  text-align: center;\\n}\\n.katex .accent > .vlist > span {\\n  text-align: center;\\n}\\n.katex .accent .accent-body > span {\\n  width: 0;\\n}\\n.katex .accent .accent-body.accent-vec > span {\\n  position: relative;\\n  left: 0.326em;\\n}\\n.katex .mtable .vertical-separator {\\n  display: inline-block;\\n  margin: 0 -0.025em;\\n  border-right: 0.05em solid black;\\n}\\n.katex .mtable .arraycolsep {\\n  display: inline-block;\\n}\\n.katex .mtable .col-align-c > .vlist {\\n  text-align: center;\\n}\\n.katex .mtable .col-align-l > .vlist {\\n  text-align: left;\\n}\\n.katex .mtable .col-align-r > .vlist {\\n  text-align: right;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/katex/dist/katex.css\n// module id = 45\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".research-article img{max-width:100%}.research-article h1{font-size:1.5rem}.research-article h2{font-size:1.25rem}.research-article h3,.research-article h4,.research-article h5,.research-article h6{font-size:1rem}.research-article li,.research-article p,.research-article pre{font-size:.85rem}@media (min-width:768px){.research-article h1{font-size:1.75rem}.research-article h2{font-size:1.5rem}.research-article h3{font-size:1.25rem}.research-article h4,.research-article h5,.research-article h6{font-size:1rem}.research-article li,.research-article p,.research-article pre{font-size:.94rem}}\", \"\", {\"version\":3,\"sources\":[\"F:/Github/newvue/src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue\"],\"names\":[],\"mappings\":\"AACA,sBACE,cAAgB,CACjB,AACD,qBACE,gBAAkB,CACnB,AACD,qBACE,iBAAmB,CACpB,AAUD,oFACE,cAAgB,CACjB,AAOD,+DACE,gBAAmB,CACpB,AACD,yBACA,qBACI,iBAAmB,CACtB,AACD,qBACI,gBAAkB,CACrB,AACD,qBACI,iBAAmB,CACtB,AAOD,+DACI,cAAgB,CACnB,AAOD,+DACI,gBAAmB,CACtB,CACA\",\"file\":\"article.vue\",\"sourcesContent\":[\"\\n.research-article img {\\n  max-width: 100%;\\n}\\n.research-article h1 {\\n  font-size: 1.5rem;\\n}\\n.research-article h2 {\\n  font-size: 1.25rem;\\n}\\n.research-article h3 {\\n  font-size: 1rem;\\n}\\n.research-article h4 {\\n  font-size: 1rem;\\n}\\n.research-article h5 {\\n  font-size: 1rem;\\n}\\n.research-article h6 {\\n  font-size: 1rem;\\n}\\n.research-article p {\\n  font-size: 0.85rem;\\n}\\n.research-article li {\\n  font-size: 0.85rem;\\n}\\n.research-article pre {\\n  font-size: 0.85rem;\\n}\\n@media (min-width: 768px) {\\n.research-article h1 {\\n    font-size: 1.75rem;\\n}\\n.research-article h2 {\\n    font-size: 1.5rem;\\n}\\n.research-article h3 {\\n    font-size: 1.25rem;\\n}\\n.research-article h4 {\\n    font-size: 1rem;\\n}\\n.research-article h5 {\\n    font-size: 1rem;\\n}\\n.research-article h6 {\\n    font-size: 1rem;\\n}\\n.research-article p {\\n    font-size: 0.94rem;\\n}\\n.research-article li {\\n    font-size: 0.94rem;\\n}\\n.research-article pre {\\n    font-size: 0.94rem;\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-22f8fdc1\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue\n// module id = 47\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js??ref--5-2!./katex.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../vue-style-loader/lib/addStylesClient.js\")(\"6c2ccccc\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/katex.css\n// module id = 50\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-22f8fdc1\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./article.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"d734c3a8\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-22f8fdc1\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue\n// module id = 52\n// module chunks = 0","/* eslint no-console:0 */\n/* global katex */\nvar katex = require('../katex');\nconst splitAtDelimiters = require(\"./splitAtDelimiters\");\n\nconst splitWithDelimiters = function(text, delimiters) {\n    let data = [{type: \"text\", data: text}];\n    for (let i = 0; i < delimiters.length; i++) {\n        const delimiter = delimiters[i];\n        data = splitAtDelimiters(\n            data, delimiter.left, delimiter.right,\n            delimiter.display || false);\n    }\n    return data;\n};\n\nconst renderMathInText = function(text, delimiters) {\n    const data = splitWithDelimiters(text, delimiters);\n\n    const fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < data.length; i++) {\n        if (data[i].type === \"text\") {\n            fragment.appendChild(document.createTextNode(data[i].data));\n        } else {\n            const span = document.createElement(\"span\");\n            const math = data[i].data;\n            try {\n                katex.render(math, span, {\n                    displayMode: data[i].display,\n                });\n            } catch (e) {\n                if (!(e instanceof katex.ParseError)) {\n                    throw e;\n                }\n                console.error(\n                    \"KaTeX auto-render: Failed to parse `\" + data[i].data +\n                    \"` with \",\n                    e\n                );\n                fragment.appendChild(document.createTextNode(data[i].rawData));\n                continue;\n            }\n            fragment.appendChild(span);\n        }\n    }\n\n    return fragment;\n};\n\nconst renderElem = function(elem, delimiters, ignoredTags) {\n    for (let i = 0; i < elem.childNodes.length; i++) {\n        const childNode = elem.childNodes[i];\n        if (childNode.nodeType === 3) {\n            // Text node\n            const frag = renderMathInText(childNode.textContent, delimiters);\n            i += frag.childNodes.length - 1;\n            elem.replaceChild(frag, childNode);\n        } else if (childNode.nodeType === 1) {\n            // Element node\n            const shouldRender = ignoredTags.indexOf(\n                childNode.nodeName.toLowerCase()) === -1;\n\n            if (shouldRender) {\n                renderElem(childNode, delimiters, ignoredTags);\n            }\n        }\n        // Otherwise, it's something else, and ignore it.\n    }\n};\n\nconst defaultOptions = {\n    delimiters: [\n        {left: \"$$\", right: \"$$\", display: true},\n        {left: \"\\\\[\", right: \"\\\\]\", display: true},\n        {left: \"\\\\(\", right: \"\\\\)\", display: false},\n        // LaTeX uses this, but it ruins the display of normal `$` in text:\n        // {left: \"$\", right: \"$\", display: false},\n    ],\n\n    ignoredTags: [\n        \"script\", \"noscript\", \"style\", \"textarea\", \"pre\", \"code\",\n    ],\n};\n\nconst extend = function(obj) {\n    // Adapted from underscore.js' `_.extend`. See LICENSE.txt for license.\n    let source;\n    let prop;\n    const length = arguments.length;\n    for (let i = 1; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (Object.prototype.hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n};\n\nconst renderMathInElement = function(elem, options) {\n    if (!elem) {\n        throw new Error(\"No element provided to render\");\n    }\n\n    options = extend({}, defaultOptions, options);\n\n    renderElem(elem, options.delimiters, options.ignoredTags);\n};\n\nmodule.exports = renderMathInElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/contrib/auto-render.js\n// module id = 55\n// module chunks = 0","/* eslint no-constant-condition:0 */\nconst findEndOfMath = function(delimiter, text, startIndex) {\n    // Adapted from\n    // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n    let index = startIndex;\n    let braceLevel = 0;\n\n    const delimLength = delimiter.length;\n\n    while (index < text.length) {\n        const character = text[index];\n\n        if (braceLevel <= 0 &&\n            text.slice(index, index + delimLength) === delimiter) {\n            return index;\n        } else if (character === \"\\\\\") {\n            index++;\n        } else if (character === \"{\") {\n            braceLevel++;\n        } else if (character === \"}\") {\n            braceLevel--;\n        }\n\n        index++;\n    }\n\n    return -1;\n};\n\nconst splitAtDelimiters = function(startData, leftDelim, rightDelim, display) {\n    const finalData = [];\n\n    for (let i = 0; i < startData.length; i++) {\n        if (startData[i].type === \"text\") {\n            const text = startData[i].data;\n\n            let lookingForLeft = true;\n            let currIndex = 0;\n            let nextIndex;\n\n            nextIndex = text.indexOf(leftDelim);\n            if (nextIndex !== -1) {\n                currIndex = nextIndex;\n                finalData.push({\n                    type: \"text\",\n                    data: text.slice(0, currIndex),\n                });\n                lookingForLeft = false;\n            }\n\n            while (true) {\n                if (lookingForLeft) {\n                    nextIndex = text.indexOf(leftDelim, currIndex);\n                    if (nextIndex === -1) {\n                        break;\n                    }\n\n                    finalData.push({\n                        type: \"text\",\n                        data: text.slice(currIndex, nextIndex),\n                    });\n\n                    currIndex = nextIndex;\n                } else {\n                    nextIndex = findEndOfMath(\n                        rightDelim,\n                        text,\n                        currIndex + leftDelim.length);\n                    if (nextIndex === -1) {\n                        break;\n                    }\n\n                    finalData.push({\n                        type: \"math\",\n                        data: text.slice(\n                            currIndex + leftDelim.length,\n                            nextIndex),\n                        rawData: text.slice(\n                            currIndex,\n                            nextIndex + rightDelim.length),\n                        display: display,\n                    });\n\n                    currIndex = nextIndex + rightDelim.length;\n                }\n\n                lookingForLeft = !lookingForLeft;\n            }\n\n            finalData.push({\n                type: \"text\",\n                data: text.slice(currIndex),\n            });\n        } else {\n            finalData.push(startData[i]);\n        }\n    }\n\n    return finalData;\n};\n\nmodule.exports = splitAtDelimiters;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/contrib/splitAtDelimiters.js\n// module id = 56\n// module chunks = 0","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.katex = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* eslint no-console:0 */\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\nvar ParseError = require(\"./src/ParseError\");\nvar Settings = require(\"./src/Settings\");\n\nvar buildTree = require(\"./src/buildTree\");\nvar parseTree = require(\"./src/parseTree\");\nvar utils = require(\"./src/utils\");\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function(expression, baseNode, options) {\n    utils.clearNode(baseNode);\n\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    var node = buildTree(tree, expression, settings).toNode();\n\n    baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n    if (document.compatMode !== \"CSS1Compat\") {\n        typeof console !== \"undefined\" && console.warn(\n            \"Warning: KaTeX doesn't work in quirks mode. Make sure your \" +\n                \"website has a suitable doctype.\");\n\n        render = function() {\n            throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n        };\n    }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function(expression, options) {\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings).toMarkup();\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar generateParseTree = function(expression, options) {\n    var settings = new Settings(options);\n    return parseTree(expression, settings);\n};\n\nmodule.exports = {\n    render: render,\n    renderToString: renderToString,\n    /**\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __parse: generateParseTree,\n    ParseError: ParseError\n};\n\n},{\"./src/ParseError\":6,\"./src/Settings\":8,\"./src/buildTree\":13,\"./src/parseTree\":22,\"./src/utils\":25}],2:[function(require,module,exports){\n/** @flow */\n\n\"use strict\";\n\nfunction getRelocatable(re) {\n  // In the future, this could use a WeakMap instead of an expando.\n  if (!re.__matchAtRelocatable) {\n    // Disjunctions are the lowest-precedence operator, so we can make any\n    // pattern match the empty string by appending `|()` to it:\n    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-patterns\n    var source = re.source + \"|()\";\n\n    // We always make the new regex global.\n    var flags = \"g\" + (re.ignoreCase ? \"i\" : \"\") + (re.multiline ? \"m\" : \"\") + (re.unicode ? \"u\" : \"\")\n    // sticky (/.../y) doesn't make sense in conjunction with our relocation\n    // logic, so we ignore it here.\n    ;\n\n    re.__matchAtRelocatable = new RegExp(source, flags);\n  }\n  return re.__matchAtRelocatable;\n}\n\nfunction matchAt(re, str, pos) {\n  if (re.global || re.sticky) {\n    throw new Error(\"matchAt(...): Only non-global regexes are supported\");\n  }\n  var reloc = getRelocatable(re);\n  reloc.lastIndex = pos;\n  var match = reloc.exec(str);\n  // Last capturing group is our sentinel that indicates whether the regex\n  // matched at the given location.\n  if (match[match.length - 1] == null) {\n    // Original regex matched.\n    match.length = match.length - 1;\n    return match;\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = matchAt;\n},{}],3:[function(require,module,exports){\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\nvar matchAt = require(\"match-at\");\n\nvar ParseError = require(\"./ParseError\");\n\n// The main lexer class\nfunction Lexer(input) {\n    this.input = input;\n    this.pos = 0;\n}\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information (all three parameters) is optional,\n * so it is OK to construct synthetic tokens if appropriate.\n * Not providing available position information may lead to\n * degraded error reporting, though.\n *\n * @param {string}  text   the text of this token\n * @param {number=} start  the start offset, zero-based inclusive\n * @param {number=} end    the end offset, zero-based exclusive\n * @param {Lexer=}  lexer  the lexer which in turn holds the input string\n */\nfunction Token(text, start, end, lexer) {\n    this.text = text;\n    this.start = start;\n    this.end = end;\n    this.lexer = lexer;\n}\n\n/**\n * Given a pair of tokens (this and endToken), compute a “Token” encompassing\n * the whole input range enclosed by these two.\n *\n * @param {Token}  endToken  last token of the range, inclusive\n * @param {string} text      the text of the newly constructed token\n */\nToken.prototype.range = function(endToken, text) {\n    if (endToken.lexer !== this.lexer) {\n        return new Token(text); // sorry, no position information available\n    }\n    return new Token(text, this.start, endToken.end, this.lexer);\n};\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar tokenRegex = new RegExp(\n    \"([ \\r\\n\\t]+)|\" +                                 // whitespace\n    \"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" +  // single codepoint\n    \"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" +               // surrogate pair\n    \"|\\\\\\\\(?:[a-zA-Z]+|[^\\uD800-\\uDFFF])\" +           // function name\n    \")\"\n);\n\n/**\n * This function lexes a single token.\n */\nLexer.prototype.lex = function() {\n    var input = this.input;\n    var pos = this.pos;\n    if (pos === input.length) {\n        return new Token(\"EOF\", pos, pos, this);\n    }\n    var match = matchAt(tokenRegex, input, pos);\n    if (match === null) {\n        throw new ParseError(\n            \"Unexpected character: '\" + input[pos] + \"'\",\n            new Token(input[pos], pos, pos + 1, this));\n    }\n    var text = match[2] || \" \";\n    var start = this.pos;\n    this.pos += match[0].length;\n    var end = this.pos;\n    return new Token(text, start, end, this);\n};\n\nmodule.exports = Lexer;\n\n},{\"./ParseError\":6,\"match-at\":2}],4:[function(require,module,exports){\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n\nvar Lexer = require(\"./Lexer\");\n\nfunction MacroExpander(input, macros) {\n    this.lexer = new Lexer(input);\n    this.macros = macros;\n    this.stack = []; // contains tokens in REVERSE order\n    this.discardedWhiteSpace = [];\n}\n\n/**\n * Recursively expand first token, then return first non-expandable token.\n */\nMacroExpander.prototype.nextToken = function() {\n    for (;;) {\n        if (this.stack.length === 0) {\n            this.stack.push(this.lexer.lex());\n        }\n        var topToken = this.stack.pop();\n        var name = topToken.text;\n        if (!(name.charAt(0) === \"\\\\\" && this.macros.hasOwnProperty(name))) {\n            return topToken;\n        }\n        var expansion = this.macros[name];\n        if (typeof expansion === \"string\") {\n            var bodyLexer = new Lexer(expansion);\n            expansion = [];\n            var tok = bodyLexer.lex();\n            while (tok.text !== \"EOF\") {\n                expansion.push(tok);\n                tok = bodyLexer.lex();\n            }\n            expansion.reverse(); // to fit in with stack using push and pop\n            this.macros[name] = expansion;\n        }\n        this.stack = this.stack.concat(expansion);\n    }\n};\n\nMacroExpander.prototype.get = function(ignoreSpace) {\n    this.discardedWhiteSpace = [];\n    var token = this.nextToken();\n    if (ignoreSpace) {\n        while (token.text === \" \") {\n            this.discardedWhiteSpace.push(token);\n            token = this.nextToken();\n        }\n    }\n    return token;\n};\n\n/**\n * Undo the effect of the preceding call to the get method.\n * A call to this method MUST be immediately preceded and immediately followed\n * by a call to get.  Only used during mode switching, i.e. after one token\n * was got in the old mode but should get got again in a new mode\n * with possibly different whitespace handling.\n */\nMacroExpander.prototype.unget = function(token) {\n    this.stack.push(token);\n    while (this.discardedWhiteSpace.length !== 0) {\n        this.stack.push(this.discardedWhiteSpace.pop());\n    }\n};\n\nmodule.exports = MacroExpander;\n\n},{\"./Lexer\":3}],5:[function(require,module,exports){\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\n/**\n * This is the main options class. It contains the style, size, color, and font\n * of the current parse level. It also contains the style and size of the parent\n * parse level, so size changes can be handled efficiently.\n *\n * Each of the `.with*` and `.reset` functions passes its current style and size\n * as the parentStyle and parentSize of the new options class, so parent\n * handling is taken care of automatically.\n */\nfunction Options(data) {\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size;\n    this.phantom = data.phantom;\n    this.font = data.font;\n\n    if (data.parentStyle === undefined) {\n        this.parentStyle = data.style;\n    } else {\n        this.parentStyle = data.parentStyle;\n    }\n\n    if (data.parentSize === undefined) {\n        this.parentSize = data.size;\n    } else {\n        this.parentSize = data.parentSize;\n    }\n}\n\n/**\n * Returns a new options object with the same properties as \"this\".  Properties\n * from \"extension\" will be copied to the new options object.\n */\nOptions.prototype.extend = function(extension) {\n    var data = {\n        style: this.style,\n        size: this.size,\n        color: this.color,\n        parentStyle: this.style,\n        parentSize: this.size,\n        phantom: this.phantom,\n        font: this.font\n    };\n\n    for (var key in extension) {\n        if (extension.hasOwnProperty(key)) {\n            data[key] = extension[key];\n        }\n    }\n\n    return new Options(data);\n};\n\n/**\n * Create a new options object with the given style.\n */\nOptions.prototype.withStyle = function(style) {\n    return this.extend({\n        style: style\n    });\n};\n\n/**\n * Create a new options object with the given size.\n */\nOptions.prototype.withSize = function(size) {\n    return this.extend({\n        size: size\n    });\n};\n\n/**\n * Create a new options object with the given color.\n */\nOptions.prototype.withColor = function(color) {\n    return this.extend({\n        color: color\n    });\n};\n\n/**\n * Create a new options object with \"phantom\" set to true.\n */\nOptions.prototype.withPhantom = function() {\n    return this.extend({\n        phantom: true\n    });\n};\n\n/**\n * Create a new options objects with the give font.\n */\nOptions.prototype.withFont = function(font) {\n    return this.extend({\n        font: font || this.font\n    });\n};\n\n/**\n * Create a new options object with the same style, size, and color. This is\n * used so that parent style and size changes are handled correctly.\n */\nOptions.prototype.reset = function() {\n    return this.extend({});\n};\n\n/**\n * A map of color names to CSS colors.\n * TODO(emily): Remove this when we have real macros\n */\nvar colorMap = {\n    \"katex-blue\": \"#6495ed\",\n    \"katex-orange\": \"#ffa500\",\n    \"katex-pink\": \"#ff00af\",\n    \"katex-red\": \"#df0030\",\n    \"katex-green\": \"#28ae7b\",\n    \"katex-gray\": \"gray\",\n    \"katex-purple\": \"#9d38bd\",\n    \"katex-blueA\": \"#ccfaff\",\n    \"katex-blueB\": \"#80f6ff\",\n    \"katex-blueC\": \"#63d9ea\",\n    \"katex-blueD\": \"#11accd\",\n    \"katex-blueE\": \"#0c7f99\",\n    \"katex-tealA\": \"#94fff5\",\n    \"katex-tealB\": \"#26edd5\",\n    \"katex-tealC\": \"#01d1c1\",\n    \"katex-tealD\": \"#01a995\",\n    \"katex-tealE\": \"#208170\",\n    \"katex-greenA\": \"#b6ffb0\",\n    \"katex-greenB\": \"#8af281\",\n    \"katex-greenC\": \"#74cf70\",\n    \"katex-greenD\": \"#1fab54\",\n    \"katex-greenE\": \"#0d923f\",\n    \"katex-goldA\": \"#ffd0a9\",\n    \"katex-goldB\": \"#ffbb71\",\n    \"katex-goldC\": \"#ff9c39\",\n    \"katex-goldD\": \"#e07d10\",\n    \"katex-goldE\": \"#a75a05\",\n    \"katex-redA\": \"#fca9a9\",\n    \"katex-redB\": \"#ff8482\",\n    \"katex-redC\": \"#f9685d\",\n    \"katex-redD\": \"#e84d39\",\n    \"katex-redE\": \"#bc2612\",\n    \"katex-maroonA\": \"#ffbde0\",\n    \"katex-maroonB\": \"#ff92c6\",\n    \"katex-maroonC\": \"#ed5fa6\",\n    \"katex-maroonD\": \"#ca337c\",\n    \"katex-maroonE\": \"#9e034e\",\n    \"katex-purpleA\": \"#ddd7ff\",\n    \"katex-purpleB\": \"#c6b9fc\",\n    \"katex-purpleC\": \"#aa87ff\",\n    \"katex-purpleD\": \"#7854ab\",\n    \"katex-purpleE\": \"#543b78\",\n    \"katex-mintA\": \"#f5f9e8\",\n    \"katex-mintB\": \"#edf2df\",\n    \"katex-mintC\": \"#e0e5cc\",\n    \"katex-grayA\": \"#f6f7f7\",\n    \"katex-grayB\": \"#f0f1f2\",\n    \"katex-grayC\": \"#e3e5e6\",\n    \"katex-grayD\": \"#d6d8da\",\n    \"katex-grayE\": \"#babec2\",\n    \"katex-grayF\": \"#888d93\",\n    \"katex-grayG\": \"#626569\",\n    \"katex-grayH\": \"#3b3e40\",\n    \"katex-grayI\": \"#21242c\",\n    \"katex-kaBlue\": \"#314453\",\n    \"katex-kaGreen\": \"#71B307\"\n};\n\n/**\n * Gets the CSS color of the current options object, accounting for the\n * `colorMap`.\n */\nOptions.prototype.getColor = function() {\n    if (this.phantom) {\n        return \"transparent\";\n    } else {\n        return colorMap[this.color] || this.color;\n    }\n};\n\nmodule.exports = Options;\n\n},{}],6:[function(require,module,exports){\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n *\n * @param {string} message  The error message\n * @param {(Token|ParseNode)=} token  An object providing position information\n */\nfunction ParseError(message, token) {\n    var error = \"KaTeX parse error: \" + message;\n    var start;\n    var end;\n\n    if (token && token.lexer && token.start <= token.end) {\n        // If we have the input and a position, make the error a bit fancier\n\n        // Get the input\n        var input = token.lexer.input;\n\n        // Prepend some information\n        start = token.start;\n        end = token.end;\n        if (start === input.length) {\n            error += \" at end of input: \";\n        } else {\n            error += \" at position \" + (start + 1) + \": \";\n        }\n\n        // Underline token in question using combining underscores\n        var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\");\n\n        // Extract some context from the input and add it to the error\n        var left;\n        if (start > 15) {\n            left = \"…\" + input.slice(start - 15, start);\n        } else {\n            left = input.slice(0, start);\n        }\n        var right;\n        if (end + 15 < input.length) {\n            right = input.slice(end, end + 15) + \"…\";\n        } else {\n            right = input.slice(end);\n        }\n        error += left + underlined + right;\n    }\n\n    // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    var self = new Error(error);\n    self.name = \"ParseError\";\n    self.__proto__ = ParseError.prototype;\n\n    self.position = start;\n    return self;\n}\n\n// More hackery\nParseError.prototype.__proto__ = Error.prototype;\n\nmodule.exports = ParseError;\n\n},{}],7:[function(require,module,exports){\n/* eslint no-constant-condition:0 */\nvar functions = require(\"./functions\");\nvar environments = require(\"./environments\");\nvar MacroExpander = require(\"./MacroExpander\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\nvar cjkRegex = require(\"./unicodeRegexes\").cjkRegex;\n\nvar parseData = require(\"./parseData\");\nvar ParseError = require(\"./ParseError\");\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The earlier functions return ParseNodes.\n * The later functions (which are called deeper in the parse) sometimes return\n * ParseFuncOrArgument, which contain a ParseNode as well as some data about\n * whether the parsed object is a function which is missing some arguments, or a\n * standalone object which can be used as an argument to another function.\n */\n\n/**\n * Main Parser class\n */\nfunction Parser(input, settings) {\n    // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n    this.gullet = new MacroExpander(input, settings.macros);\n    // Store the settings for use in parsing\n    this.settings = settings;\n    // Count leftright depth (for \\middle errors)\n    this.leftrightDepth = 0;\n}\n\nvar ParseNode = parseData.ParseNode;\n\n/**\n * An initial function (without its arguments), or an argument to a function.\n * The `result` argument should be a ParseNode.\n */\nfunction ParseFuncOrArgument(result, isFunction, token) {\n    this.result = result;\n    // Is this a function (i.e. is it something defined in functions.js)?\n    this.isFunction = isFunction;\n    this.token = token;\n}\n\n/**\n * Checks a result to make sure it has the right type, and throws an\n * appropriate error otherwise.\n *\n * @param {boolean=} consume whether to consume the expected token,\n *                           defaults to true\n */\nParser.prototype.expect = function(text, consume) {\n    if (this.nextToken.text !== text) {\n        throw new ParseError(\n            \"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\",\n            this.nextToken\n        );\n    }\n    if (consume !== false) {\n        this.consume();\n    }\n};\n\n/**\n * Considers the current look ahead token as consumed,\n * and fetches the one after that as the new look ahead.\n */\nParser.prototype.consume = function() {\n    this.nextToken = this.gullet.get(this.mode === \"math\");\n};\n\nParser.prototype.switchMode = function(newMode) {\n    this.gullet.unget(this.nextToken);\n    this.mode = newMode;\n    this.consume();\n};\n\n/**\n * Main parsing function, which parses an entire input.\n *\n * @return {?Array.<ParseNode>}\n */\nParser.prototype.parse = function() {\n    // Try to parse the input\n    this.mode = \"math\";\n    this.consume();\n    var parse = this.parseInput();\n    return parse;\n};\n\n/**\n * Parses an entire input tree.\n */\nParser.prototype.parseInput = function() {\n    // Parse an expression\n    var expression = this.parseExpression(false);\n    // If we succeeded, make sure there's an EOF at the end\n    this.expect(\"EOF\", false);\n    return expression;\n};\n\nvar endOfExpression = [\"}\", \"\\\\end\", \"\\\\right\", \"&\", \"\\\\\\\\\", \"\\\\cr\"];\n\n/**\n * Parses an \"expression\", which is a list of atoms.\n *\n * @param {boolean} breakOnInfix  Should the parsing stop when we hit infix\n *                  nodes? This happens when functions have higher precendence\n *                  than infix nodes in implicit parses.\n *\n * @param {?string} breakOnTokenText  The text of the token that the expression\n *                  should end with, or `null` if something else should end the\n *                  expression.\n *\n * @return {ParseNode}\n */\nParser.prototype.parseExpression = function(breakOnInfix, breakOnTokenText) {\n    var body = [];\n    // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n    while (true) {\n        var lex = this.nextToken;\n        if (endOfExpression.indexOf(lex.text) !== -1) {\n            break;\n        }\n        if (breakOnTokenText && lex.text === breakOnTokenText) {\n            break;\n        }\n        if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {\n            break;\n        }\n        var atom = this.parseAtom();\n        if (!atom) {\n            if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n                var errorNode = this.handleUnsupportedCmd();\n                body.push(errorNode);\n                continue;\n            }\n\n            break;\n        }\n        body.push(atom);\n    }\n    return this.handleInfixNodes(body);\n};\n\n/**\n * Rewrites infix operators such as \\over with corresponding commands such\n * as \\frac.\n *\n * There can only be one infix operator per group.  If there's more than one\n * then the expression is ambiguous.  This can be resolved by adding {}.\n *\n * @returns {Array}\n */\nParser.prototype.handleInfixNodes = function(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n        var node = body[i];\n        if (node.type === \"infix\") {\n            if (overIndex !== -1) {\n                throw new ParseError(\n                    \"only one infix operator per group\",\n                    node.value.token);\n            }\n            overIndex = i;\n            funcName = node.value.replaceWith;\n        }\n    }\n\n    if (overIndex !== -1) {\n        var numerNode;\n        var denomNode;\n\n        var numerBody = body.slice(0, overIndex);\n        var denomBody = body.slice(overIndex + 1);\n\n        if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n            numerNode = numerBody[0];\n        } else {\n            numerNode = new ParseNode(\"ordgroup\", numerBody, this.mode);\n        }\n\n        if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n            denomNode = denomBody[0];\n        } else {\n            denomNode = new ParseNode(\"ordgroup\", denomBody, this.mode);\n        }\n\n        var value = this.callFunction(\n            funcName, [numerNode, denomNode], null);\n        return [new ParseNode(value.type, value, this.mode)];\n    } else {\n        return body;\n    }\n};\n\n// The greediness of a superscript or subscript\nvar SUPSUB_GREEDINESS = 1;\n\n/**\n * Handle a subscript or superscript with nice errors.\n */\nParser.prototype.handleSupSubscript = function(name) {\n    var symbolToken = this.nextToken;\n    var symbol = symbolToken.text;\n    this.consume();\n    var group = this.parseGroup();\n\n    if (!group) {\n        if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n            return this.handleUnsupportedCmd();\n        } else {\n            throw new ParseError(\n                \"Expected group after '\" + symbol + \"'\",\n                symbolToken\n            );\n        }\n    } else if (group.isFunction) {\n        // ^ and _ have a greediness, so handle interactions with functions'\n        // greediness\n        var funcGreediness = functions[group.result].greediness;\n        if (funcGreediness > SUPSUB_GREEDINESS) {\n            return this.parseFunction(group);\n        } else {\n            throw new ParseError(\n                \"Got function '\" + group.result + \"' with no arguments \" +\n                    \"as \" + name, symbolToken);\n        }\n    } else {\n        return group.result;\n    }\n};\n\n/**\n * Converts the textual input of an unsupported command into a text node\n * contained within a color node whose color is determined by errorColor\n */\nParser.prototype.handleUnsupportedCmd = function() {\n    var text = this.nextToken.text;\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n        textordArray.push(new ParseNode(\"textord\", text[i], \"text\"));\n    }\n\n    var textNode = new ParseNode(\n        \"text\",\n        {\n            body: textordArray,\n            type: \"text\"\n        },\n        this.mode);\n\n    var colorNode = new ParseNode(\n        \"color\",\n        {\n            color: this.settings.errorColor,\n            value: [textNode],\n            type: \"color\"\n        },\n        this.mode);\n\n    this.consume();\n    return colorNode;\n};\n\n/**\n * Parses a group with optional super/subscripts.\n *\n * @return {?ParseNode}\n */\nParser.prototype.parseAtom = function() {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseImplicitGroup();\n\n    // In text mode, we don't have superscripts or subscripts\n    if (this.mode === \"text\") {\n        return base;\n    }\n\n    // Note that base may be empty (i.e. null) at this point.\n\n    var superscript;\n    var subscript;\n    while (true) {\n        // Lex the first token\n        var lex = this.nextToken;\n\n        if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n            // We got a limit control\n            if (!base || base.type !== \"op\") {\n                throw new ParseError(\n                    \"Limit controls must follow a math operator\",\n                    lex);\n            } else {\n                var limits = lex.text === \"\\\\limits\";\n                base.value.limits = limits;\n                base.value.alwaysHandleSupSub = true;\n            }\n            this.consume();\n        } else if (lex.text === \"^\") {\n            // We got a superscript start\n            if (superscript) {\n                throw new ParseError(\"Double superscript\", lex);\n            }\n            superscript = this.handleSupSubscript(\"superscript\");\n        } else if (lex.text === \"_\") {\n            // We got a subscript start\n            if (subscript) {\n                throw new ParseError(\"Double subscript\", lex);\n            }\n            subscript = this.handleSupSubscript(\"subscript\");\n        } else if (lex.text === \"'\") {\n            // We got a prime\n            var prime = new ParseNode(\"textord\", \"\\\\prime\", this.mode);\n\n            // Many primes can be grouped together, so we handle this here\n            var primes = [prime];\n            this.consume();\n            // Keep lexing tokens until we get something that's not a prime\n            while (this.nextToken.text === \"'\") {\n                // For each one, add another prime to the list\n                primes.push(prime);\n                this.consume();\n            }\n            // Put them into an ordgroup as the superscript\n            superscript = new ParseNode(\"ordgroup\", primes, this.mode);\n        } else {\n            // If it wasn't ^, _, or ', stop parsing super/subscripts\n            break;\n        }\n    }\n\n    if (superscript || subscript) {\n        // If we got either a superscript or subscript, create a supsub\n        return new ParseNode(\"supsub\", {\n            base: base,\n            sup: superscript,\n            sub: subscript\n        }, this.mode);\n    } else {\n        // Otherwise return the original body\n        return base;\n    }\n};\n\n// A list of the size-changing functions, for use in parseImplicitGroup\nvar sizeFuncs = [\n    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\",\n    \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"\n];\n\n// A list of the style-changing functions, for use in parseImplicitGroup\nvar styleFuncs = [\n    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"\n];\n\n/**\n * Parses an implicit group, which is a group that starts at the end of a\n * specified, and ends right before a higher explicit group ends, or at EOL. It\n * is used for functions that appear to affect the current style, like \\Large or\n * \\textrm, where instead of keeping a style we just pretend that there is an\n * implicit grouping after it until the end of the group. E.g.\n *   small text {\\Large large text} small text again\n * It is also used for \\left and \\right to get the correct grouping.\n *\n * @return {?ParseNode}\n */\nParser.prototype.parseImplicitGroup = function() {\n    var start = this.parseSymbol();\n\n    if (start == null) {\n        // If we didn't get anything we handle, fall back to parseFunction\n        return this.parseFunction();\n    }\n\n    var func = start.result;\n    var body;\n\n    if (func === \"\\\\left\") {\n        // If we see a left:\n        // Parse the entire left function (including the delimiter)\n        var left = this.parseFunction(start);\n        // Parse out the implicit body\n        ++this.leftrightDepth;\n        body = this.parseExpression(false);\n        --this.leftrightDepth;\n        // Check the next token\n        this.expect(\"\\\\right\", false);\n        var right = this.parseFunction();\n        return new ParseNode(\"leftright\", {\n            body: body,\n            left: left.value.value,\n            right: right.value.value\n        }, this.mode);\n    } else if (func === \"\\\\begin\") {\n        // begin...end is similar to left...right\n        var begin = this.parseFunction(start);\n        var envName = begin.value.name;\n        if (!environments.hasOwnProperty(envName)) {\n            throw new ParseError(\n                \"No such environment: \" + envName, begin.value.nameGroup);\n        }\n        // Build the environment object. Arguments and other information will\n        // be made available to the begin and end methods using properties.\n        var env = environments[envName];\n        var args = this.parseArguments(\"\\\\begin{\" + envName + \"}\", env);\n        var context = {\n            mode: this.mode,\n            envName: envName,\n            parser: this,\n            positions: args.pop()\n        };\n        var result = env.handler(context, args);\n        this.expect(\"\\\\end\", false);\n        var endNameToken = this.nextToken;\n        var end = this.parseFunction();\n        if (end.value.name !== envName) {\n            throw new ParseError(\n                \"Mismatch: \\\\begin{\" + envName + \"} matched \" +\n                \"by \\\\end{\" + end.value.name + \"}\",\n                endNameToken);\n        }\n        result.position = end.position;\n        return result;\n    } else if (utils.contains(sizeFuncs, func)) {\n        // If we see a sizing function, parse out the implict body\n        body = this.parseExpression(false);\n        return new ParseNode(\"sizing\", {\n            // Figure out what size to use based on the list of functions above\n            size: \"size\" + (utils.indexOf(sizeFuncs, func) + 1),\n            value: body\n        }, this.mode);\n    } else if (utils.contains(styleFuncs, func)) {\n        // If we see a styling function, parse out the implict body\n        body = this.parseExpression(true);\n        return new ParseNode(\"styling\", {\n            // Figure out what style to use by pulling out the style from\n            // the function name\n            style: func.slice(1, func.length - 5),\n            value: body\n        }, this.mode);\n    } else {\n        // Defer to parseFunction if it's not a function we handle\n        return this.parseFunction(start);\n    }\n};\n\n/**\n * Parses an entire function, including its base and all of its arguments.\n * The base might either have been parsed already, in which case\n * it is provided as an argument, or it's the next group in the input.\n *\n * @param {ParseFuncOrArgument=} baseGroup optional as described above\n * @return {?ParseNode}\n */\nParser.prototype.parseFunction = function(baseGroup) {\n    if (!baseGroup) {\n        baseGroup = this.parseGroup();\n    }\n\n    if (baseGroup) {\n        if (baseGroup.isFunction) {\n            var func = baseGroup.result;\n            var funcData = functions[func];\n            if (this.mode === \"text\" && !funcData.allowedInText) {\n                throw new ParseError(\n                    \"Can't use function '\" + func + \"' in text mode\",\n                    baseGroup.token);\n            }\n\n            var args = this.parseArguments(func, funcData);\n            var token = baseGroup.token;\n            var result = this.callFunction(func, args, args.pop(), token);\n            return new ParseNode(result.type, result, this.mode);\n        } else {\n            return baseGroup.result;\n        }\n    } else {\n        return null;\n    }\n};\n\n/**\n * Call a function handler with a suitable context and arguments.\n */\nParser.prototype.callFunction = function(name, args, positions, token) {\n    var context = {\n        funcName: name,\n        parser: this,\n        positions: positions,\n        token: token\n    };\n    return functions[name].handler(context, args);\n};\n\n/**\n * Parses the arguments of a function or environment\n *\n * @param {string} func  \"\\name\" or \"\\begin{name}\"\n * @param {{numArgs:number,numOptionalArgs:number|undefined}} funcData\n * @return the array of arguments, with the list of positions as last element\n */\nParser.prototype.parseArguments = function(func, funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n    if (totalArgs === 0) {\n        return [[this.pos]];\n    }\n\n    var baseGreediness = funcData.greediness;\n    var positions = [this.pos];\n    var args = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n        var nextToken = this.nextToken;\n        var argType = funcData.argTypes && funcData.argTypes[i];\n        var arg;\n        if (i < funcData.numOptionalArgs) {\n            if (argType) {\n                arg = this.parseGroupOfType(argType, true);\n            } else {\n                arg = this.parseGroup(true);\n            }\n            if (!arg) {\n                args.push(null);\n                positions.push(this.pos);\n                continue;\n            }\n        } else {\n            if (argType) {\n                arg = this.parseGroupOfType(argType);\n            } else {\n                arg = this.parseGroup();\n            }\n            if (!arg) {\n                if (!this.settings.throwOnError &&\n                    this.nextToken.text[0] === \"\\\\\") {\n                    arg = new ParseFuncOrArgument(\n                        this.handleUnsupportedCmd(this.nextToken.text),\n                        false);\n                } else {\n                    throw new ParseError(\n                        \"Expected group after '\" + func + \"'\", nextToken);\n                }\n            }\n        }\n        var argNode;\n        if (arg.isFunction) {\n            var argGreediness =\n                functions[arg.result].greediness;\n            if (argGreediness > baseGreediness) {\n                argNode = this.parseFunction(arg);\n            } else {\n                throw new ParseError(\n                    \"Got function '\" + arg.result + \"' as \" +\n                    \"argument to '\" + func + \"'\", nextToken);\n            }\n        } else {\n            argNode = arg.result;\n        }\n        args.push(argNode);\n        positions.push(this.pos);\n    }\n\n    args.push(positions);\n\n    return args;\n};\n\n\n/**\n * Parses a group when the mode is changing.\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseGroupOfType = function(innerMode, optional) {\n    var outerMode = this.mode;\n    // Handle `original` argTypes\n    if (innerMode === \"original\") {\n        innerMode = outerMode;\n    }\n\n    if (innerMode === \"color\") {\n        return this.parseColorGroup(optional);\n    }\n    if (innerMode === \"size\") {\n        return this.parseSizeGroup(optional);\n    }\n\n    this.switchMode(innerMode);\n    if (innerMode === \"text\") {\n        // text mode is special because it should ignore the whitespace before\n        // it\n        while (this.nextToken.text === \" \") {\n            this.consume();\n        }\n    }\n    // By the time we get here, innerMode is one of \"text\" or \"math\".\n    // We switch the mode of the parser, recurse, then restore the old mode.\n    var res = this.parseGroup(optional);\n    this.switchMode(outerMode);\n    return res;\n};\n\n/**\n * Parses a group, essentially returning the string formed by the\n * brace-enclosed tokens plus some position information.\n *\n * @param {string} modeName  Used to describe the mode in error messages\n * @param {boolean=} optional  Whether the group is optional or required\n */\nParser.prototype.parseStringGroup = function(modeName, optional) {\n    if (optional && this.nextToken.text !== \"[\") {\n        return null;\n    }\n    var outerMode = this.mode;\n    this.mode = \"text\";\n    this.expect(optional ? \"[\" : \"{\");\n    var str = \"\";\n    var firstToken = this.nextToken;\n    var lastToken = firstToken;\n    while (this.nextToken.text !== (optional ? \"]\" : \"}\")) {\n        if (this.nextToken.text === \"EOF\") {\n            throw new ParseError(\n                \"Unexpected end of input in \" + modeName,\n                firstToken.range(this.nextToken, str));\n        }\n        lastToken = this.nextToken;\n        str += lastToken.text;\n        this.consume();\n    }\n    this.mode = outerMode;\n    this.expect(optional ? \"]\" : \"}\");\n    return firstToken.range(lastToken, str);\n};\n\n/**\n * Parses a regex-delimited group: the largest sequence of tokens\n * whose concatenated strings match `regex`. Returns the string\n * formed by the tokens plus some position information.\n *\n * @param {RegExp} regex\n * @param {string} modeName  Used to describe the mode in error messages\n */\nParser.prototype.parseRegexGroup = function(regex, modeName) {\n    var outerMode = this.mode;\n    this.mode = \"text\";\n    var firstToken = this.nextToken;\n    var lastToken = firstToken;\n    var str = \"\";\n    while (this.nextToken.text !== \"EOF\"\n           && regex.test(str + this.nextToken.text)) {\n        lastToken = this.nextToken;\n        str += lastToken.text;\n        this.consume();\n    }\n    if (str === \"\") {\n        throw new ParseError(\n            \"Invalid \" + modeName + \": '\" + firstToken.text + \"'\",\n            firstToken);\n    }\n    this.mode = outerMode;\n    return firstToken.range(lastToken, str);\n};\n\n/**\n * Parses a color description.\n */\nParser.prototype.parseColorGroup = function(optional) {\n    var res = this.parseStringGroup(\"color\", optional);\n    if (!res) {\n        return null;\n    }\n    var match = (/^(#[a-z0-9]+|[a-z]+)$/i).exec(res.text);\n    if (!match) {\n        throw new ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n    return new ParseFuncOrArgument(\n        new ParseNode(\"color\", match[0], this.mode),\n        false);\n};\n\n/**\n * Parses a size specification, consisting of magnitude and unit.\n */\nParser.prototype.parseSizeGroup = function(optional) {\n    var res;\n    if (!optional && this.nextToken.text !== \"{\") {\n        res = this.parseRegexGroup(\n            /^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2}$/, \"size\");\n    } else {\n        res = this.parseStringGroup(\"size\", optional);\n    }\n    if (!res) {\n        return null;\n    }\n    var match = (/([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/).exec(res.text);\n    if (!match) {\n        throw new ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n    var data = {\n        number: +(match[1] + match[2]), // sign + magnitude, cast to number\n        unit: match[3]\n    };\n    if (data.unit !== \"em\" && data.unit !== \"ex\" && data.unit !== \"mu\") {\n        throw new ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n    return new ParseFuncOrArgument(\n        new ParseNode(\"color\", data, this.mode),\n        false);\n};\n\n/**\n * If the argument is false or absent, this parses an ordinary group,\n * which is either a single nucleus (like \"x\") or an expression\n * in braces (like \"{x+y}\").\n * If the argument is true, it parses either a bracket-delimited expression\n * (like \"[x+y]\") or returns null to indicate the absence of a\n * bracket-enclosed group.\n *\n * @param {boolean=} optional  Whether the group is optional or required\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseGroup = function(optional) {\n    var firstToken = this.nextToken;\n    // Try to parse an open brace\n    if (this.nextToken.text === (optional ? \"[\" : \"{\")) {\n        // If we get a brace, parse an expression\n        this.consume();\n        var expression = this.parseExpression(false, optional ? \"]\" : null);\n        var lastToken = this.nextToken;\n        // Make sure we get a close brace\n        this.expect(optional ? \"]\" : \"}\");\n        if (this.mode === \"text\") {\n            this.formLigatures(expression);\n        }\n        return new ParseFuncOrArgument(\n            new ParseNode(\"ordgroup\", expression, this.mode,\n                          firstToken, lastToken),\n            false);\n    } else {\n        // Otherwise, just return a nucleus, or nothing for an optional group\n        return optional ? null : this.parseSymbol();\n    }\n};\n\n/**\n * Form ligature-like combinations of characters for text mode.\n * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n * The result will simply replace multiple textord nodes with a single\n * character in each value by a single textord node having multiple\n * characters in its value.  The representation is still ASCII source.\n *\n * @param {Array.<ParseNode>} group  the nodes of this group,\n *                                   list will be moified in place\n */\nParser.prototype.formLigatures = function(group) {\n    var i;\n    var n = group.length - 1;\n    for (i = 0; i < n; ++i) {\n        var a = group[i];\n        var v = a.value;\n        if (v === \"-\" && group[i + 1].value === \"-\") {\n            if (i + 1 < n && group[i + 2].value === \"-\") {\n                group.splice(i, 3, new ParseNode(\n                    \"textord\", \"---\", \"text\", a, group[i + 2]));\n                n -= 2;\n            } else {\n                group.splice(i, 2, new ParseNode(\n                    \"textord\", \"--\", \"text\", a, group[i + 1]));\n                n -= 1;\n            }\n        }\n        if ((v === \"'\" || v === \"`\") && group[i + 1].value === v) {\n            group.splice(i, 2, new ParseNode(\n                \"textord\", v + v, \"text\", a, group[i + 1]));\n            n -= 1;\n        }\n    }\n};\n\n/**\n * Parse a single symbol out of the string. Here, we handle both the functions\n * we have defined, as well as the single character symbols\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseSymbol = function() {\n    var nucleus = this.nextToken;\n\n    if (functions[nucleus.text]) {\n        this.consume();\n        // If there exists a function with this name, we return the function and\n        // say that it is a function.\n        return new ParseFuncOrArgument(\n            nucleus.text,\n            true, nucleus);\n    } else if (symbols[this.mode][nucleus.text]) {\n        this.consume();\n        // Otherwise if this is a no-argument function, find the type it\n        // corresponds to in the symbols map\n        return new ParseFuncOrArgument(\n            new ParseNode(symbols[this.mode][nucleus.text].group,\n                          nucleus.text, this.mode, nucleus),\n            false, nucleus);\n    } else if (this.mode === \"text\" && cjkRegex.test(nucleus.text)) {\n        this.consume();\n        return new ParseFuncOrArgument(\n            new ParseNode(\"textord\", nucleus.text, this.mode, nucleus),\n            false, nucleus);\n    } else {\n        return null;\n    }\n};\n\nParser.prototype.ParseNode = ParseNode;\n\nmodule.exports = Parser;\n\n},{\"./MacroExpander\":4,\"./ParseError\":6,\"./environments\":16,\"./functions\":19,\"./parseData\":21,\"./symbols\":23,\"./unicodeRegexes\":24,\"./utils\":25}],8:[function(require,module,exports){\n/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n/**\n * Helper function for getting a default value if the value is undefined\n */\nfunction get(option, defaultValue) {\n    return option === undefined ? defaultValue : option;\n}\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset by default in\n *                 textstyle or displaystyle (default false)\n */\nfunction Settings(options) {\n    // allow null options\n    options = options || {};\n    this.displayMode = get(options.displayMode, false);\n    this.throwOnError = get(options.throwOnError, true);\n    this.errorColor = get(options.errorColor, \"#cc0000\");\n    this.macros = options.macros || {};\n}\n\nmodule.exports = Settings;\n\n},{}],9:[function(require,module,exports){\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\nvar sigmas = require(\"./fontMetrics.js\").sigmas;\n\nvar metrics = [{}, {}, {}];\nvar i;\nfor (var key in sigmas) {\n    if (sigmas.hasOwnProperty(key)) {\n        for (i = 0; i < 3; i++) {\n            metrics[i][key] = sigmas[key][i];\n        }\n    }\n}\nfor (i = 0; i < 3; i++) {\n    metrics[i].emPerEx = sigmas.xHeight[i] / sigmas.quad[i];\n}\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), a cramped flag, and a\n * size multiplier, which gives the size difference between a style and\n * textstyle.\n */\nfunction Style(id, size, multiplier, cramped) {\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n    this.sizeMultiplier = multiplier;\n    this.metrics = metrics[size > 0 ? size - 1 : 0];\n}\n\n/**\n * Get the style of a superscript given a base in the current style.\n */\nStyle.prototype.sup = function() {\n    return styles[sup[this.id]];\n};\n\n/**\n * Get the style of a subscript given a base in the current style.\n */\nStyle.prototype.sub = function() {\n    return styles[sub[this.id]];\n};\n\n/**\n * Get the style of a fraction numerator given the fraction in the current\n * style.\n */\nStyle.prototype.fracNum = function() {\n    return styles[fracNum[this.id]];\n};\n\n/**\n * Get the style of a fraction denominator given the fraction in the current\n * style.\n */\nStyle.prototype.fracDen = function() {\n    return styles[fracDen[this.id]];\n};\n\n/**\n * Get the cramped version of a style (in particular, cramping a cramped style\n * doesn't change the style).\n */\nStyle.prototype.cramp = function() {\n    return styles[cramp[this.id]];\n};\n\n/**\n * HTML class name, like \"displaystyle cramped\"\n */\nStyle.prototype.cls = function() {\n    return sizeNames[this.size] + (this.cramped ? \" cramped\" : \" uncramped\");\n};\n\n/**\n * HTML Reset class name, like \"reset-textstyle\"\n */\nStyle.prototype.reset = function() {\n    return resetNames[this.size];\n};\n\n/**\n * Return if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n */\nStyle.prototype.isTight = function() {\n    return this.size >= 2;\n};\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7;\n\n// String names for the different sizes\nvar sizeNames = [\n    \"displaystyle textstyle\",\n    \"textstyle\",\n    \"scriptstyle\",\n    \"scriptscriptstyle\"\n];\n\n// Reset names for the different sizes\nvar resetNames = [\n    \"reset-textstyle\",\n    \"reset-textstyle\",\n    \"reset-scriptstyle\",\n    \"reset-scriptscriptstyle\"\n];\n\n// Instances of the different styles\nvar styles = [\n    new Style(D, 0, 1.0, false),\n    new Style(Dc, 0, 1.0, true),\n    new Style(T, 1, 1.0, false),\n    new Style(Tc, 1, 1.0, true),\n    new Style(S, 2, 0.7, false),\n    new Style(Sc, 2, 0.7, true),\n    new Style(SS, 3, 0.5, false),\n    new Style(SSc, 3, 0.5, true)\n];\n\n// Lookup tables for switching from one style to another\nvar sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\n\n// We only export some of the styles. Also, we don't export the `Style` class so\n// no more styles can be generated.\nmodule.exports = {\n    DISPLAY: styles[D],\n    TEXT: styles[T],\n    SCRIPT: styles[S],\n    SCRIPTSCRIPT: styles[SS]\n};\n\n},{\"./fontMetrics.js\":17}],10:[function(require,module,exports){\n/* eslint no-console:0 */\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar greekCapitals = [\n    \"\\\\Gamma\",\n    \"\\\\Delta\",\n    \"\\\\Theta\",\n    \"\\\\Lambda\",\n    \"\\\\Xi\",\n    \"\\\\Pi\",\n    \"\\\\Sigma\",\n    \"\\\\Upsilon\",\n    \"\\\\Phi\",\n    \"\\\\Psi\",\n    \"\\\\Omega\"\n];\n\n// The following have to be loaded from Main-Italic font, using class mainit\nvar mainitLetters = [\n    \"\\u0131\",   // dotless i, \\imath\n    \"\\u0237\",   // dotless j, \\jmath\n    \"\\u00a3\"   // \\pounds\n];\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\nvar makeSymbol = function(value, fontFamily, mode, options, classes) {\n    // Replace the value with its replaced value from symbol.js\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var metrics = fontMetrics.getCharacterMetrics(value, fontFamily);\n\n    var symbolNode;\n    if (metrics) {\n        var italic = metrics.italic;\n        if (mode === \"text\") {\n            italic = 0;\n        }\n        symbolNode = new domTree.symbolNode(\n            value, metrics.height, metrics.depth, italic, metrics.skew,\n            classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\n            \"No character metrics for '\" + value + \"' in style '\" +\n                fontFamily + \"'\");\n        symbolNode = new domTree.symbolNode(value, 0, 0, 0, 0, classes);\n    }\n\n    if (options) {\n        if (options.style.isTight()) {\n            symbolNode.classes.push(\"mtight\");\n        }\n        if (options.getColor()) {\n            symbolNode.style.color = options.getColor();\n        }\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\nvar mathsym = function(value, mode, options, classes) {\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text\n    if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n        return makeSymbol(value, \"Main-Regular\", mode, options, classes);\n    } else {\n        return makeSymbol(\n            value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar mathDefault = function(value, mode, options, classes, type) {\n    if (type === \"mathord\") {\n        return mathit(value, mode, options, classes);\n    } else if (type === \"textord\") {\n        return makeSymbol(\n            value, \"Main-Regular\", mode, options, classes.concat([\"mathrm\"]));\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Makes a symbol in the italic math font.\n */\nvar mathit = function(value, mode, options, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n            // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n            // need to use Main-Italic instead\n            utils.contains(mainitLetters, value) ||\n            utils.contains(greekCapitals, value)) {\n        return makeSymbol(\n            value, \"Main-Italic\", mode, options, classes.concat([\"mainit\"]));\n    } else {\n        return makeSymbol(\n            value, \"Math-Italic\", mode, options, classes.concat([\"mathit\"]));\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar makeOrd = function(group, options, type) {\n    var mode = group.mode;\n    var value = group.value;\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var classes = [\"mord\"];\n\n    var font = options.font;\n    if (font) {\n        if (font === \"mathit\" || utils.contains(mainitLetters, value)) {\n            return mathit(value, mode, options, classes);\n        } else {\n            var fontName = fontMap[font].fontName;\n            if (fontMetrics.getCharacterMetrics(value, fontName)) {\n                return makeSymbol(\n                    value, fontName, mode, options, classes.concat([font]));\n            } else {\n                return mathDefault(value, mode, options, classes, type);\n            }\n        }\n    } else {\n        return mathDefault(value, mode, options, classes, type);\n    }\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    if (elem.children) {\n        for (var i = 0; i < elem.children.length; i++) {\n            if (elem.children[i].height > height) {\n                height = elem.children[i].height;\n            }\n            if (elem.children[i].depth > depth) {\n                depth = elem.children[i].depth;\n            }\n            if (elem.children[i].maxFontSize > maxFontSize) {\n                maxFontSize = elem.children[i].maxFontSize;\n            }\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO: Ensure that `options` is always provided (currently some call sites\n * don't pass it).\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\nvar makeSpan = function(classes, children, options) {\n    var span = new domTree.span(classes, children, options);\n\n    sizeElementFromChildren(span);\n\n    return span;\n};\n\n/**\n * Prepends the given children to the given span, updating height, depth, and\n * maxFontSize.\n */\nvar prependChildren = function(span, children) {\n    span.children = children.concat(span.children);\n\n    sizeElementFromChildren(span);\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar makeFragment = function(children) {\n    var fragment = new domTree.documentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n/**\n * Makes an element placed in each of the vlist elements to ensure that each\n * element has the same max font size. To do this, we create a zero-width space\n * with the correct font size.\n */\nvar makeFontSizer = function(options, fontSize) {\n    var fontSizeInner = makeSpan([], [new domTree.symbolNode(\"\\u200b\")]);\n    fontSizeInner.style.fontSize =\n        (fontSize / options.style.sizeMultiplier) + \"em\";\n\n    var fontSizer = makeSpan(\n        [\"fontsize-ensurer\", \"reset-\" + options.size, \"size5\"],\n        [fontSizeInner]);\n\n    return fontSizer;\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * Arguments:\n *  - children: A list of child or kern nodes to be stacked on top of each other\n *              (i.e. the first element will be at the bottom, and the last at\n *              the top). Element nodes are specified as\n *                {type: \"elem\", elem: node}\n *              while kern nodes are specified as\n *                {type: \"kern\", size: size}\n *  - positionType: The method by which the vlist should be positioned. Valid\n *                  values are:\n *                   - \"individualShift\": The children list only contains elem\n *                                        nodes, and each node contains an extra\n *                                        \"shift\" value of how much it should be\n *                                        shifted (note that shifting is always\n *                                        moving downwards). positionData is\n *                                        ignored.\n *                   - \"top\": The positionData specifies the topmost point of\n *                            the vlist (note this is expected to be a height,\n *                            so positive values move up)\n *                   - \"bottom\": The positionData specifies the bottommost point\n *                               of the vlist (note this is expected to be a\n *                               depth, so positive values move down\n *                   - \"shift\": The vlist will be positioned such that its\n *                              baseline is positionData away from the baseline\n *                              of the first child. Positive values move\n *                              downwards.\n *                   - \"firstBaseline\": The vlist will be positioned such that\n *                                      its baseline is aligned with the\n *                                      baseline of the first child.\n *                                      positionData is ignored. (this is\n *                                      equivalent to \"shift\" with\n *                                      positionData=0)\n *  - positionData: Data used in different ways depending on positionType\n *  - options: An Options object\n *\n */\nvar makeVList = function(children, positionType, positionData, options) {\n    var depth;\n    var currPos;\n    var i;\n    if (positionType === \"individualShift\") {\n        var oldChildren = children;\n        children = [oldChildren[0]];\n\n        // Add in kerns to the list of children to get each element to be\n        // shifted to the correct specified shift\n        depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        currPos = depth;\n        for (i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos -\n                oldChildren[i].elem.depth;\n            var size = diff -\n                (oldChildren[i - 1].elem.height +\n                 oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            children.push({type: \"kern\", size: size});\n            children.push(oldChildren[i]);\n        }\n    } else if (positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = positionData;\n        for (i = 0; i < children.length; i++) {\n            if (children[i].type === \"kern\") {\n                bottom -= children[i].size;\n            } else {\n                bottom -= children[i].elem.height + children[i].elem.depth;\n            }\n        }\n        depth = bottom;\n    } else if (positionType === \"bottom\") {\n        depth = -positionData;\n    } else if (positionType === \"shift\") {\n        depth = -children[0].elem.depth - positionData;\n    } else if (positionType === \"firstBaseline\") {\n        depth = -children[0].elem.depth;\n    } else {\n        depth = 0;\n    }\n\n    // Make the fontSizer\n    var maxFontSize = 0;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"elem\") {\n            maxFontSize = Math.max(maxFontSize, children[i].elem.maxFontSize);\n        }\n    }\n    var fontSizer = makeFontSizer(options, maxFontSize);\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    currPos = depth;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"kern\") {\n            currPos += children[i].size;\n        } else {\n            var child = children[i].elem;\n\n            var shift = -child.depth - currPos;\n            currPos += child.height + child.depth;\n\n            var childWrap = makeSpan([], [fontSizer, child]);\n            childWrap.height -= shift;\n            childWrap.depth += shift;\n            childWrap.style.top = shift + \"em\";\n\n            realChildren.push(childWrap);\n        }\n    }\n\n    // Add in an element at the end with no offset to fix the calculation of\n    // baselines in some browsers (namely IE, sometimes safari)\n    var baselineFix = makeSpan(\n        [\"baseline-fix\"], [fontSizer, new domTree.symbolNode(\"\\u200b\")]);\n    realChildren.push(baselineFix);\n\n    var vlist = makeSpan([\"vlist\"], realChildren);\n    // Fix the final height and depth, in case there were kerns at the ends\n    // since the makeSpan calculation won't take that in to account.\n    vlist.height = Math.max(currPos, vlist.height);\n    vlist.depth = Math.max(-depth, vlist.depth);\n    return vlist;\n};\n\n// A table of size -> font size for the different sizing functions\nvar sizingMultiplier = {\n    size1: 0.5,\n    size2: 0.7,\n    size3: 0.8,\n    size4: 0.9,\n    size5: 1.0,\n    size6: 1.2,\n    size7: 1.44,\n    size8: 1.73,\n    size9: 2.07,\n    size10: 2.49\n};\n\n// A map of spacing functions to their attributes, like size and corresponding\n// CSS class\nvar spacingFunctions = {\n    \"\\\\qquad\": {\n        size: \"2em\",\n        className: \"qquad\"\n    },\n    \"\\\\quad\": {\n        size: \"1em\",\n        className: \"quad\"\n    },\n    \"\\\\enspace\": {\n        size: \"0.5em\",\n        className: \"enspace\"\n    },\n    \"\\\\;\": {\n        size: \"0.277778em\",\n        className: \"thickspace\"\n    },\n    \"\\\\:\": {\n        size: \"0.22222em\",\n        className: \"mediumspace\"\n    },\n    \"\\\\,\": {\n        size: \"0.16667em\",\n        className: \"thinspace\"\n    },\n    \"\\\\!\": {\n        size: \"-0.16667em\",\n        className: \"negativethinspace\"\n    }\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\"\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\"\n    },\n    \"textit\": {\n        variant: \"italic\",\n        fontName: \"Main-Italic\"\n    },\n\n    // \"mathit\" is missing because it requires the use of two fonts: Main-Italic\n    // and Math-Italic.  This is handled by a special case in makeOrd which ends\n    // up calling mathit.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\"\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\"\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\"\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\"\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\"\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\"\n    }\n};\n\nmodule.exports = {\n    fontMap: fontMap,\n    makeSymbol: makeSymbol,\n    mathsym: mathsym,\n    makeSpan: makeSpan,\n    makeFragment: makeFragment,\n    makeVList: makeVList,\n    makeOrd: makeOrd,\n    prependChildren: prependChildren,\n    sizingMultiplier: sizingMultiplier,\n    spacingFunctions: spacingFunctions\n};\n\n},{\"./domTree\":15,\"./fontMetrics\":17,\"./symbols\":23,\"./utils\":25}],11:[function(require,module,exports){\n/* eslint no-console:0 */\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupTypes functions are\n * called, to produce a final HTML tree.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar delimiter = require(\"./delimiter\");\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\nvar isSpace = function(node) {\n    return node instanceof domTree.span && node.classes[0] === \"mspace\";\n};\n\n// Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nvar isBin = function(node) {\n    return node && node.classes[0] === \"mbin\";\n};\n\nvar isBinLeftCanceller = function(node, isRealGroup) {\n    // TODO: This code assumes that a node's math class is the first element\n    // of its `classes` array. A later cleanup should ensure this, for\n    // instance by changing the signature of `makeSpan`.\n    if (node) {\n        return utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"],\n                              node.classes[0]);\n    } else {\n        return isRealGroup;\n    }\n};\n\nvar isBinRightCanceller = function(node, isRealGroup) {\n    if (node) {\n        return utils.contains([\"mrel\", \"mclose\", \"mpunct\"], node.classes[0]);\n    } else {\n        return isRealGroup;\n    }\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color).\n */\nvar buildExpression = function(expression, options, isRealGroup) {\n    // Parse expressions into `groups`.\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        var output = buildGroup(group, options);\n        if (output instanceof domTree.documentFragment) {\n            Array.prototype.push.apply(groups, output.children);\n        } else {\n            groups.push(output);\n        }\n    }\n    // At this point `groups` consists entirely of `symbolNode`s and `span`s.\n\n    // Explicit spaces (e.g., \\;, \\,) should be ignored with respect to atom\n    // spacing (e.g., \"add thick space between mord and mrel\"). Since CSS\n    // adjacency rules implement atom spacing, spaces should be invisible to\n    // CSS. So we splice them out of `groups` and into the atoms themselves.\n    var spaces = null;\n    for (i = 0; i < groups.length; i++) {\n        if (isSpace(groups[i])) {\n            spaces = spaces || [];\n            spaces.push(groups[i]);\n            groups.splice(i, 1);\n            i--;\n        } else if (spaces) {\n            if (groups[i] instanceof domTree.symbolNode) {\n                groups[i] = makeSpan([].concat(groups[i].classes), [groups[i]]);\n            }\n            buildCommon.prependChildren(groups[i], spaces);\n            spaces = null;\n        }\n    }\n    if (spaces) {\n        Array.prototype.push.apply(groups, spaces);\n    }\n\n    // Binary operators change to ordinary symbols in some contexts.\n    for (i = 0; i < groups.length; i++) {\n        if (isBin(groups[i])\n            && (isBinLeftCanceller(groups[i - 1], isRealGroup)\n                || isBinRightCanceller(groups[i + 1], isRealGroup))) {\n            groups[i].classes[0] = \"mord\";\n        }\n    }\n\n    return groups;\n};\n\n// Return math atom class (mclass) of a domTree.\nvar getTypeOfDomTree = function(node) {\n    if (node instanceof domTree.documentFragment) {\n        if (node.children.length) {\n            return getTypeOfDomTree(\n                node.children[node.children.length - 1]);\n        }\n    } else {\n        if (utils.contains([\"mord\", \"mop\", \"mbin\", \"mrel\", \"mopen\", \"mclose\",\n            \"mpunct\", \"minner\"], node.classes[0])) {\n            return node.classes[0];\n        }\n    }\n    return null;\n};\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar shouldHandleSupSub = function(group, options) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"op\") {\n        // Operators handle supsubs differently when they have limits\n        // (e.g. `\\displaystyle\\sum_2^3`)\n        return group.value.limits &&\n            (options.style.size === Style.DISPLAY.size ||\n            group.value.alwaysHandleSupSub);\n    } else if (group.type === \"accent\") {\n        return isCharacterBox(group.value.base);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function(group) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"ordgroup\") {\n        if (group.value.length === 1) {\n            return getBaseElem(group.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.value.value.length === 1) {\n            return getBaseElem(group.value.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"font\") {\n        return getBaseElem(group.value.body);\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar isCharacterBox = function(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" ||\n        baseElem.type === \"textord\" ||\n        baseElem.type === \"bin\" ||\n        baseElem.type === \"rel\" ||\n        baseElem.type === \"inner\" ||\n        baseElem.type === \"open\" ||\n        baseElem.type === \"close\" ||\n        baseElem.type === \"punct\";\n};\n\nvar makeNullDelimiter = function(options, classes) {\n    return makeSpan(classes.concat([\n        \"sizing\", \"reset-\" + options.size, \"size5\",\n        options.style.reset(), Style.TEXT.cls(),\n        \"nulldelimiter\"]));\n};\n\n/**\n * This is a map of group types to the function used to handle that type.\n * Simpler types come at the beginning, while complicated types come afterwards.\n */\nvar groupTypes = {};\n\ngroupTypes.mathord = function(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n};\n\ngroupTypes.textord = function(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n};\n\ngroupTypes.bin = function(group, options) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options, [\"mbin\"]);\n};\n\ngroupTypes.rel = function(group, options) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options, [\"mrel\"]);\n};\n\ngroupTypes.open = function(group, options) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options, [\"mopen\"]);\n};\n\ngroupTypes.close = function(group, options) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options, [\"mclose\"]);\n};\n\ngroupTypes.inner = function(group, options) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options, [\"minner\"]);\n};\n\ngroupTypes.punct = function(group, options) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options, [\"mpunct\"]);\n};\n\ngroupTypes.ordgroup = function(group, options) {\n    return makeSpan(\n        [\"mord\", options.style.cls()],\n        buildExpression(group.value, options.reset(), true),\n        options\n    );\n};\n\ngroupTypes.text = function(group, options) {\n    var newOptions = options.withFont(group.value.style);\n    var inner = buildExpression(group.value.body, newOptions, true);\n    for (var i = 0; i < inner.length - 1; i++) {\n        if (inner[i].tryCombine(inner[i + 1])) {\n            inner.splice(i + 1, 1);\n            i--;\n        }\n    }\n    return makeSpan([\"mord\", \"text\", newOptions.style.cls()],\n        inner, newOptions);\n};\n\ngroupTypes.color = function(group, options) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withColor(group.value.color),\n        false\n    );\n\n    // \\color isn't supposed to affect the type of the elements it contains.\n    // To accomplish this, we wrap the results in a fragment, so the inner\n    // elements will be able to directly interact with their neighbors. For\n    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n    return new buildCommon.makeFragment(elements);\n};\n\ngroupTypes.supsub = function(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    if (shouldHandleSupSub(group.value.base, options)) {\n        return groupTypes[group.value.base.type](group, options);\n    }\n\n    var base = buildGroup(group.value.base, options.reset());\n    var supmid;\n    var submid;\n    var sup;\n    var sub;\n\n    var style = options.style;\n    var newOptions;\n\n    if (group.value.sup) {\n        newOptions = options.withStyle(style.sup());\n        sup = buildGroup(group.value.sup, newOptions);\n        supmid = makeSpan([style.reset(), style.sup().cls()],\n            [sup], newOptions);\n    }\n\n    if (group.value.sub) {\n        newOptions = options.withStyle(style.sub());\n        sub = buildGroup(group.value.sub, newOptions);\n        submid = makeSpan([style.reset(), style.sub().cls()],\n            [sub], newOptions);\n    }\n\n    // Rule 18a\n    var supShift;\n    var subShift;\n    if (isCharacterBox(group.value.base)) {\n        supShift = 0;\n        subShift = 0;\n    } else {\n        supShift = base.height - style.metrics.supDrop;\n        subShift = base.depth + style.metrics.subDrop;\n    }\n\n    // Rule 18c\n    var minSupShift;\n    if (style === Style.DISPLAY) {\n        minSupShift = style.metrics.sup1;\n    } else if (style.cramped) {\n        minSupShift = style.metrics.sup3;\n    } else {\n        minSupShift = style.metrics.sup2;\n    }\n\n    // scriptspace is a font-size-independent size, so scale it\n    // appropriately\n    var multiplier = Style.TEXT.sizeMultiplier *\n            style.sizeMultiplier;\n    var scriptspace =\n        (0.5 / fontMetrics.metrics.ptPerEm) / multiplier + \"em\";\n\n    var supsub;\n    if (!group.value.sup) {\n        // Rule 18b\n        subShift = Math.max(\n            subShift, style.metrics.sub1,\n            sub.height - 0.8 * style.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid}\n        ], \"shift\", subShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n\n        // Subscripts shouldn't be shifted by the base's italic correction.\n        // Account for that by shifting the subscript back the appropriate\n        // amount. Note we only do this when the base is a single symbol.\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n    } else if (!group.value.sub) {\n        // Rule 18c, d\n        supShift = Math.max(supShift, minSupShift,\n            sup.depth + 0.25 * style.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: supmid}\n        ], \"shift\", -supShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n    } else {\n        supShift = Math.max(\n            supShift, minSupShift, sup.depth + 0.25 * style.metrics.xHeight);\n        subShift = Math.max(subShift, style.metrics.sub2);\n\n        var ruleWidth = fontMetrics.metrics.defaultRuleThickness;\n\n        // Rule 18e\n        if ((supShift - sup.depth) - (sub.height - subShift) <\n                4 * ruleWidth) {\n            subShift = 4 * ruleWidth - (supShift - sup.depth) + sub.height;\n            var psi = 0.8 * style.metrics.xHeight - (supShift - sup.depth);\n            if (psi > 0) {\n                supShift += psi;\n                subShift -= psi;\n            }\n        }\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid, shift: subShift},\n            {type: \"elem\", elem: supmid, shift: -supShift}\n        ], \"individualShift\", null, options);\n\n        // See comment above about subscripts not being shifted\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n\n        supsub.children[0].style.marginRight = scriptspace;\n        supsub.children[1].style.marginRight = scriptspace;\n    }\n\n    // We ensure to wrap the supsub vlist in a span.msupsub to reset text-align\n    var mclass = getTypeOfDomTree(base) || \"mord\";\n    return makeSpan([mclass],\n        [base, makeSpan([\"msupsub\"], [supsub])],\n        options);\n};\n\ngroupTypes.genfrac = function(group, options) {\n    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n    // Figure out what style this fraction should be in based on the\n    // function used\n    var style = options.style;\n    if (group.value.size === \"display\") {\n        style = Style.DISPLAY;\n    } else if (group.value.size === \"text\") {\n        style = Style.TEXT;\n    }\n\n    var nstyle = style.fracNum();\n    var dstyle = style.fracDen();\n    var newOptions;\n\n    newOptions = options.withStyle(nstyle);\n    var numer = buildGroup(group.value.numer, newOptions);\n    var numerreset = makeSpan([style.reset(), nstyle.cls()],\n        [numer], newOptions);\n\n    newOptions = options.withStyle(dstyle);\n    var denom = buildGroup(group.value.denom, newOptions);\n    var denomreset = makeSpan([style.reset(), dstyle.cls()],\n        [denom], newOptions);\n\n    var ruleWidth;\n    if (group.value.hasBarLine) {\n        ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n            options.style.sizeMultiplier;\n    } else {\n        ruleWidth = 0;\n    }\n\n    // Rule 15b\n    var numShift;\n    var clearance;\n    var denomShift;\n    if (style.size === Style.DISPLAY.size) {\n        numShift = style.metrics.num1;\n        if (ruleWidth > 0) {\n            clearance = 3 * ruleWidth;\n        } else {\n            clearance = 7 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = style.metrics.denom1;\n    } else {\n        if (ruleWidth > 0) {\n            numShift = style.metrics.num2;\n            clearance = ruleWidth;\n        } else {\n            numShift = style.metrics.num3;\n            clearance = 3 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = style.metrics.denom2;\n    }\n\n    var frac;\n    if (ruleWidth === 0) {\n        // Rule 15c\n        var candidateClearance =\n            (numShift - numer.depth) - (denom.height - denomShift);\n        if (candidateClearance < clearance) {\n            numShift += 0.5 * (clearance - candidateClearance);\n            denomShift += 0.5 * (clearance - candidateClearance);\n        }\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift}\n        ], \"individualShift\", null, options);\n    } else {\n        // Rule 15d\n        var axisHeight = style.metrics.axisHeight;\n\n        if ((numShift - numer.depth) - (axisHeight + 0.5 * ruleWidth) <\n                clearance) {\n            numShift +=\n                clearance - ((numShift - numer.depth) -\n                             (axisHeight + 0.5 * ruleWidth));\n        }\n\n        if ((axisHeight - 0.5 * ruleWidth) - (denom.height - denomShift) <\n                clearance) {\n            denomShift +=\n                clearance - ((axisHeight - 0.5 * ruleWidth) -\n                             (denom.height - denomShift));\n        }\n\n        var mid = makeSpan(\n            [options.style.reset(), Style.TEXT.cls(), \"frac-line\"]);\n        // Manually set the height of the line because its height is\n        // created in CSS\n        mid.height = ruleWidth;\n\n        var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: mid,        shift: midShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift}\n        ], \"individualShift\", null, options);\n    }\n\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n    // account for the possible size change here.\n    frac.height *= style.sizeMultiplier / options.style.sizeMultiplier;\n    frac.depth *= style.sizeMultiplier / options.style.sizeMultiplier;\n\n    // Rule 15e\n    var delimSize;\n    if (style.size === Style.DISPLAY.size) {\n        delimSize = style.metrics.delim1;\n    } else {\n        delimSize = style.metrics.delim2;\n    }\n\n    var leftDelim;\n    var rightDelim;\n    if (group.value.leftDelim == null) {\n        leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n        leftDelim = delimiter.customSizedDelim(\n            group.value.leftDelim, delimSize, true,\n            options.withStyle(style), group.mode, [\"mopen\"]);\n    }\n    if (group.value.rightDelim == null) {\n        rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n        rightDelim = delimiter.customSizedDelim(\n            group.value.rightDelim, delimSize, true,\n            options.withStyle(style), group.mode, [\"mclose\"]);\n    }\n\n    return makeSpan(\n        [\"mord\", options.style.reset(), style.cls()],\n        [leftDelim, makeSpan([\"mfrac\"], [frac]), rightDelim],\n        options);\n};\n\nvar calculateSize = function(sizeValue, style) {\n    var x = sizeValue.number;\n    if (sizeValue.unit === \"ex\") {\n        x *= style.metrics.emPerEx;\n    } else if (sizeValue.unit === \"mu\") {\n        x /= 18;\n    }\n    return x;\n};\n\ngroupTypes.array = function(group, options) {\n    var r;\n    var c;\n    var nr = group.value.body.length;\n    var nc = 0;\n    var body = new Array(nr);\n\n    var style = options.style;\n\n    // Horizontal spacing\n    var pt = 1 / fontMetrics.metrics.ptPerEm;\n    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n    // Vertical spacing\n    var baselineskip = 12 * pt; // see size10.clo\n    // Default \\arraystretch from lttab.dtx\n    // TODO(gagern): may get redefined once we have user-defined macros\n    var arraystretch = utils.deflt(group.value.arraystretch, 1);\n    var arrayskip = arraystretch * baselineskip;\n    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n    var arstrutDepth = 0.3 * arrayskip;  // \\@arstrutbox in lttab.dtx\n\n    var totalHeight = 0;\n    for (r = 0; r < group.value.body.length; ++r) {\n        var inrow = group.value.body[r];\n        var height = arstrutHeight; // \\@array adds an \\@arstrut\n        var depth = arstrutDepth;   // to each tow (via the template)\n\n        if (nc < inrow.length) {\n            nc = inrow.length;\n        }\n\n        var outrow = new Array(inrow.length);\n        for (c = 0; c < inrow.length; ++c) {\n            var elt = buildGroup(inrow[c], options);\n            if (depth < elt.depth) {\n                depth = elt.depth;\n            }\n            if (height < elt.height) {\n                height = elt.height;\n            }\n            outrow[c] = elt;\n        }\n\n        var gap = 0;\n        if (group.value.rowGaps[r]) {\n            gap = calculateSize(group.value.rowGaps[r].value, style);\n            if (gap > 0) { // \\@argarraycr\n                gap += arstrutDepth;\n                if (depth < gap) {\n                    depth = gap; // \\@xargarraycr\n                }\n                gap = 0;\n            }\n        }\n\n        outrow.height = height;\n        outrow.depth = depth;\n        totalHeight += height;\n        outrow.pos = totalHeight;\n        totalHeight += depth + gap; // \\@yargarraycr\n        body[r] = outrow;\n    }\n\n    var offset = totalHeight / 2 + style.metrics.axisHeight;\n    var colDescriptions = group.value.cols || [];\n    var cols = [];\n    var colSep;\n    var colDescrNum;\n    for (c = 0, colDescrNum = 0;\n         // Continue while either there are more columns or more column\n         // descriptions, so trailing separators don't get lost.\n         c < nc || colDescrNum < colDescriptions.length;\n         ++c, ++colDescrNum) {\n\n        var colDescr = colDescriptions[colDescrNum] || {};\n\n        var firstSeparator = true;\n        while (colDescr.type === \"separator\") {\n            // If there is more than one separator in a row, add a space\n            // between them.\n            if (!firstSeparator) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width =\n                    fontMetrics.metrics.doubleRuleSep + \"em\";\n                cols.push(colSep);\n            }\n\n            if (colDescr.separator === \"|\") {\n                var separator = makeSpan(\n                    [\"vertical-separator\"],\n                    []);\n                separator.style.height = totalHeight + \"em\";\n                separator.style.verticalAlign =\n                    -(totalHeight - offset) + \"em\";\n\n                cols.push(separator);\n            } else {\n                throw new ParseError(\n                    \"Invalid separator type: \" + colDescr.separator);\n            }\n\n            colDescrNum++;\n            colDescr = colDescriptions[colDescrNum] || {};\n            firstSeparator = false;\n        }\n\n        if (c >= nc) {\n            continue;\n        }\n\n        var sepwidth;\n        if (c > 0 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n\n        var col = [];\n        for (r = 0; r < nr; ++r) {\n            var row = body[r];\n            var elem = row[c];\n            if (!elem) {\n                continue;\n            }\n            var shift = row.pos - offset;\n            elem.depth = row.depth;\n            elem.height = row.height;\n            col.push({type: \"elem\", elem: elem, shift: shift});\n        }\n\n        col = buildCommon.makeVList(col, \"individualShift\", null, options);\n        col = makeSpan(\n            [\"col-align-\" + (colDescr.align || \"c\")],\n            [col]);\n        cols.push(col);\n\n        if (c < nc - 1 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n    }\n    body = makeSpan([\"mtable\"], cols);\n    return makeSpan([\"mord\"], [body], options);\n};\n\ngroupTypes.spacing = function(group, options) {\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n        group.value === \" \" || group.value === \"~\") {\n        // Spaces are generated by adding an actual space. Each of these\n        // things has an entry in the symbols table, so these will be turned\n        // into appropriate outputs.\n        if (group.mode === \"text\") {\n            return buildCommon.makeOrd(group, options, \"textord\");\n        } else {\n            return makeSpan([\"mspace\"],\n                [buildCommon.mathsym(group.value, group.mode, options)],\n                options);\n        }\n    } else {\n        // Other kinds of spaces are of arbitrary width. We use CSS to\n        // generate these.\n        return makeSpan(\n            [\"mspace\",\n                buildCommon.spacingFunctions[group.value].className],\n            [], options);\n    }\n};\n\ngroupTypes.llap = function(group, options) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"mord\", \"llap\", options.style.cls()], [inner, fix], options);\n};\n\ngroupTypes.rlap = function(group, options) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"mord\", \"rlap\", options.style.cls()], [inner, fix], options);\n};\n\ngroupTypes.op = function(group, options) {\n    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n    var supGroup;\n    var subGroup;\n    var hasLimits = false;\n    if (group.type === \"supsub\") {\n        // If we have limits, supsub will pass us its group to handle. Pull\n        // out the superscript and subscript and set the group to the op in\n        // its base.\n        supGroup = group.value.sup;\n        subGroup = group.value.sub;\n        group = group.value.base;\n        hasLimits = true;\n    }\n\n    var style = options.style;\n\n    // Most operators have a large successor symbol, but these don't.\n    var noSuccessor = [\n        \"\\\\smallint\"\n    ];\n\n    var large = false;\n    if (style.size === Style.DISPLAY.size &&\n        group.value.symbol &&\n        !utils.contains(noSuccessor, group.value.body)) {\n\n        // Most symbol operators get larger in displaystyle (rule 13)\n        large = true;\n    }\n\n    var base;\n    var baseShift = 0;\n    var slant = 0;\n    if (group.value.symbol) {\n        // If this is a symbol, create the symbol.\n        var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n        base = buildCommon.makeSymbol(\n            group.value.body, fontName, \"math\", options,\n            [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n        // Shift the symbol so its center lies on the axis (rule 13). It\n        // appears that our fonts have the centers of the symbols already\n        // almost on the axis, so these numbers are very small. Note we\n        // don't actually apply this here, but instead it is used either in\n        // the vlist creation or separately when there are no limits.\n        baseShift = (base.height - base.depth) / 2 -\n            style.metrics.axisHeight * style.sizeMultiplier;\n\n        // The slant of the symbol is just its italic correction.\n        slant = base.italic;\n    } else if (group.value.value) {\n        // If this is a list, compose that list.\n        var inner = buildExpression(group.value.value, options, true);\n\n        base = makeSpan([\"mop\"], inner, options);\n    } else {\n        // Otherwise, this is a text operator. Build the text from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup\n        var output = [];\n        for (var i = 1; i < group.value.body.length; i++) {\n            output.push(buildCommon.mathsym(group.value.body[i], group.mode));\n        }\n        base = makeSpan([\"mop\"], output, options);\n    }\n\n    if (hasLimits) {\n        // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n        // in a new span so it is an inline, and works.\n        base = makeSpan([], [base]);\n\n        var supmid;\n        var supKern;\n        var submid;\n        var subKern;\n        var newOptions;\n        // We manually have to handle the superscripts and subscripts. This,\n        // aside from the kern calculations, is copied from supsub.\n        if (supGroup) {\n            newOptions = options.withStyle(style.sup());\n            var sup = buildGroup(supGroup, newOptions);\n            supmid = makeSpan([style.reset(), style.sup().cls()],\n                [sup], newOptions);\n\n            supKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing1,\n                fontMetrics.metrics.bigOpSpacing3 - sup.depth);\n        }\n\n        if (subGroup) {\n            newOptions = options.withStyle(style.sub());\n            var sub = buildGroup(subGroup, newOptions);\n            submid = makeSpan([style.reset(), style.sub().cls()],\n                [sub], newOptions);\n\n            subKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing2,\n                fontMetrics.metrics.bigOpSpacing4 - sub.height);\n        }\n\n        // Build the final group as a vlist of the possible subscript, base,\n        // and possible superscript.\n        var finalGroup;\n        var top;\n        var bottom;\n        if (!supGroup) {\n            top = base.height - baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base}\n            ], \"top\", top, options);\n\n            // Here, we shift the limits by the slant of the symbol. Note\n            // that we are supposed to shift the limits by 1/2 of the slant,\n            // but since we are centering the limits adding a full slant of\n            // margin will shift by 1/2 that.\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n        } else if (!subGroup) {\n            bottom = base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5}\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[1].style.marginLeft = slant + \"em\";\n        } else if (!supGroup && !subGroup) {\n            // This case probably shouldn't occur (this would mean the\n            // supsub was sending us a group with no superscript or\n            // subscript) but be safe.\n            return base;\n        } else {\n            bottom = fontMetrics.metrics.bigOpSpacing5 +\n                submid.height + submid.depth +\n                subKern +\n                base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5}\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n            finalGroup.children[2].style.marginLeft = slant + \"em\";\n        }\n\n        return makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);\n    } else {\n        if (group.value.symbol) {\n            base.style.top = baseShift + \"em\";\n        }\n\n        return base;\n    }\n};\n\ngroupTypes.mod = function(group, options) {\n    var inner = [];\n\n    if (group.value.modType === \"bmod\") {\n        // “\\nonscript\\mskip-\\medmuskip\\mkern5mu”\n        if (!options.style.isTight()) {\n            inner.push(makeSpan(\n                [\"mspace\", \"negativemediumspace\"], [], options));\n        }\n        inner.push(makeSpan([\"mspace\", \"thickspace\"], [], options));\n    } else if (options.style.size === Style.DISPLAY.size) {\n        inner.push(makeSpan([\"mspace\", \"quad\"], [], options));\n    } else if (group.value.modType === \"mod\") {\n        inner.push(makeSpan([\"mspace\", \"twelvemuspace\"], [], options));\n    } else {\n        inner.push(makeSpan([\"mspace\", \"eightmuspace\"], [], options));\n    }\n\n    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {\n        inner.push(buildCommon.mathsym(\"(\", group.mode));\n    }\n\n    if (group.value.modType !== \"pod\") {\n        var modInner = [\n            buildCommon.mathsym(\"m\", group.mode),\n            buildCommon.mathsym(\"o\", group.mode),\n            buildCommon.mathsym(\"d\", group.mode)];\n        if (group.value.modType === \"bmod\") {\n            inner.push(makeSpan([\"mbin\"], modInner, options));\n            // “\\mkern5mu\\nonscript\\mskip-\\medmuskip”\n            inner.push(makeSpan([\"mspace\", \"thickspace\"], [], options));\n            if (!options.style.isTight()) {\n                inner.push(makeSpan(\n                    [\"mspace\", \"negativemediumspace\"], [], options));\n            }\n        } else {\n            Array.prototype.push.apply(inner, modInner);\n            inner.push(makeSpan([\"mspace\", \"sixmuspace\"], [], options));\n        }\n    }\n\n    if (group.value.value) {\n        Array.prototype.push.apply(inner,\n            buildExpression(group.value.value, options, false));\n    }\n\n    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {\n        inner.push(buildCommon.mathsym(\")\", group.mode));\n    }\n\n    return buildCommon.makeFragment(inner);\n};\n\ngroupTypes.katex = function(group, options) {\n    // The KaTeX logo. The offsets for the K and a were chosen to look\n    // good, but the offsets for the T, E, and X were taken from the\n    // definition of \\TeX in TeX (see TeXbook pg. 356)\n    var k = makeSpan(\n        [\"k\"], [buildCommon.mathsym(\"K\", group.mode)], options);\n    var a = makeSpan(\n        [\"a\"], [buildCommon.mathsym(\"A\", group.mode)], options);\n\n    a.height = (a.height + 0.2) * 0.75;\n    a.depth = (a.height - 0.2) * 0.75;\n\n    var t = makeSpan(\n        [\"t\"], [buildCommon.mathsym(\"T\", group.mode)], options);\n    var e = makeSpan(\n        [\"e\"], [buildCommon.mathsym(\"E\", group.mode)], options);\n\n    e.height = (e.height - 0.2155);\n    e.depth = (e.depth + 0.2155);\n\n    var x = makeSpan(\n        [\"x\"], [buildCommon.mathsym(\"X\", group.mode)], options);\n\n    return makeSpan(\n        [\"mord\", \"katex-logo\"], [k, a, t, e, x], options);\n};\n\ngroupTypes.overline = function(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    var style = options.style;\n\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup(group.value.body,\n            options.withStyle(style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [style.reset(), Style.TEXT.cls(), \"overline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"elem\", elem: innerGroup},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: ruleWidth}\n    ], \"firstBaseline\", null, options);\n\n    return makeSpan([\"mord\", \"overline\"], [vlist], options);\n};\n\ngroupTypes.underline = function(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    var style = options.style;\n\n    // Build the inner group.\n    var innerGroup = buildGroup(group.value.body, options);\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan([style.reset(), Style.TEXT.cls(), \"underline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"kern\", size: ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: innerGroup}\n    ], \"top\", innerGroup.height, options);\n\n    return makeSpan([\"mord\", \"underline\"], [vlist], options);\n};\n\ngroupTypes.sqrt = function(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    var style = options.style;\n\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup(group.value.body, options.withStyle(style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        style.sizeMultiplier;\n\n    var line = makeSpan(\n        [style.reset(), Style.TEXT.cls(), \"sqrt-line\"], [],\n        options);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    var phi = ruleWidth;\n    if (style.id < Style.TEXT.id) {\n        phi = style.metrics.xHeight;\n    }\n\n    // Calculate the clearance between the body and line\n    var lineClearance = ruleWidth + phi / 4;\n\n    var innerHeight = (inner.height + inner.depth) * style.sizeMultiplier;\n    var minDelimiterHeight = innerHeight + lineClearance + ruleWidth;\n\n    // Create a \\surd delimiter of the required minimum size\n    var delim = makeSpan([\"sqrt-sign\"], [\n        delimiter.customSizedDelim(\"\\\\surd\", minDelimiterHeight,\n                                   false, options, group.mode)],\n                         options);\n\n    var delimDepth = (delim.height + delim.depth) - ruleWidth;\n\n    // Adjust the clearance based on the delimiter size\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n        lineClearance =\n            (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    }\n\n    // Shift the delimiter so that its top lines up with the top of the line\n    var delimShift = -(inner.height + lineClearance + ruleWidth) + delim.height;\n    delim.style.top = delimShift + \"em\";\n    delim.height -= delimShift;\n    delim.depth += delimShift;\n\n    // We add a special case here, because even when `inner` is empty, we\n    // still get a line. So, we use a simple heuristic to decide if we\n    // should omit the body entirely. (note this doesn't work for something\n    // like `\\sqrt{\\rlap{x}}`, but if someone is doing that they deserve for\n    // it not to work.\n    var body;\n    if (inner.height === 0 && inner.depth === 0) {\n        body = makeSpan();\n    } else {\n        body = buildCommon.makeVList([\n            {type: \"elem\", elem: inner},\n            {type: \"kern\", size: lineClearance},\n            {type: \"elem\", elem: line},\n            {type: \"kern\", size: ruleWidth}\n        ], \"firstBaseline\", null, options);\n    }\n\n    if (!group.value.index) {\n        return makeSpan([\"mord\", \"sqrt\"], [delim, body], options);\n    } else {\n        // Handle the optional root index\n\n        // The index is always in scriptscript style\n        var newOptions = options.withStyle(Style.SCRIPTSCRIPT);\n        var root = buildGroup(group.value.index, newOptions);\n        var rootWrap = makeSpan(\n            [style.reset(), Style.SCRIPTSCRIPT.cls()],\n            [root],\n            newOptions);\n\n        // Figure out the height and depth of the inner part\n        var innerRootHeight = Math.max(delim.height, body.height);\n        var innerRootDepth = Math.max(delim.depth, body.depth);\n\n        // The amount the index is shifted by. This is taken from the TeX\n        // source, in the definition of `\\r@@t`.\n        var toShift = 0.6 * (innerRootHeight - innerRootDepth);\n\n        // Build a VList with the superscript shifted up correctly\n        var rootVList = buildCommon.makeVList(\n            [{type: \"elem\", elem: rootWrap}],\n            \"shift\", -toShift, options);\n        // Add a class surrounding it so we can add on the appropriate\n        // kerning\n        var rootVListWrap = makeSpan([\"root\"], [rootVList]);\n\n        return makeSpan([\"mord\", \"sqrt\"],\n            [rootVListWrap, delim, body], options);\n    }\n};\n\ngroupTypes.sizing = function(group, options) {\n    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n    // these functions inside of math expressions, so we do some special\n    // handling.\n    var inner = buildExpression(group.value.value,\n            options.withSize(group.value.size), false);\n\n    // Compute the correct maxFontSize.\n    var style = options.style;\n    var fontSize = buildCommon.sizingMultiplier[group.value.size];\n    fontSize = fontSize * style.sizeMultiplier;\n\n    // Add size-resetting classes to the inner list and set maxFontSize\n    // manually. Handle nested size changes.\n    for (var i = 0; i < inner.length; i++) {\n        var pos = utils.indexOf(inner[i].classes, \"sizing\");\n        if (pos < 0) {\n            inner[i].classes.push(\"sizing\", \"reset-\" + options.size,\n                                  group.value.size, style.cls());\n            inner[i].maxFontSize = fontSize;\n        } else if (inner[i].classes[pos + 1] === \"reset-\" + group.value.size) {\n            // This is a nested size change: e.g., inner[i] is the \"b\" in\n            // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n            // but not the new size.\n            inner[i].classes[pos + 1] = \"reset-\" + options.size;\n        }\n    }\n\n    return buildCommon.makeFragment(inner);\n};\n\ngroupTypes.styling = function(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n\n    // Figure out what style we're changing to.\n    var styleMap = {\n        \"display\": Style.DISPLAY,\n        \"text\": Style.TEXT,\n        \"script\": Style.SCRIPT,\n        \"scriptscript\": Style.SCRIPTSCRIPT\n    };\n\n    var newStyle = styleMap[group.value.style];\n    var newOptions = options.withStyle(newStyle);\n\n    // Build the inner expression in the new style.\n    var inner = buildExpression(\n        group.value.value, newOptions, false);\n\n    // Add style-resetting classes to the inner list. Handle nested changes.\n    for (var i = 0; i < inner.length; i++) {\n        var pos = utils.indexOf(inner[i].classes, newStyle.reset());\n        if (pos < 0) {\n            inner[i].classes.push(options.style.reset(), newStyle.cls());\n        } else {\n            // This is a nested style change, as `\\textstyle a\\scriptstyle b`.\n            // Only override the old style (the reset class).\n            inner[i].classes[pos] = options.style.reset();\n        }\n    }\n\n    return new buildCommon.makeFragment(inner);\n};\n\ngroupTypes.font = function(group, options) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font));\n};\n\ngroupTypes.delimsizing = function(group, options) {\n    var delim = group.value.value;\n\n    if (delim === \".\") {\n        // Empty delimiters still count as elements, even though they don't\n        // show anything.\n        return makeSpan([group.value.mclass]);\n    }\n\n    // Use delimiter.sizedDelim to generate the delimiter.\n    return delimiter.sizedDelim(\n            delim, group.value.size, options, group.mode,\n            [group.value.mclass]);\n};\n\ngroupTypes.leftright = function(group, options) {\n    // Build the inner expression\n    var inner = buildExpression(group.value.body, options.reset(), true);\n\n    var innerHeight = 0;\n    var innerDepth = 0;\n    var hadMiddle = false;\n\n    // Calculate its height and depth\n    for (var i = 0; i < inner.length; i++) {\n        if (inner[i].isMiddle) {\n            hadMiddle = true;\n        } else {\n            innerHeight = Math.max(inner[i].height, innerHeight);\n            innerDepth = Math.max(inner[i].depth, innerDepth);\n        }\n    }\n\n    var style = options.style;\n\n    // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n    innerHeight *= style.sizeMultiplier;\n    innerDepth *= style.sizeMultiplier;\n\n    var leftDelim;\n    if (group.value.left === \".\") {\n        // Empty delimiters in \\left and \\right make null delimiter spaces.\n        leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n        // Otherwise, use leftRightDelim to generate the correct sized\n        // delimiter.\n        leftDelim = delimiter.leftRightDelim(\n            group.value.left, innerHeight, innerDepth, options,\n            group.mode, [\"mopen\"]);\n    }\n    // Add it to the beginning of the expression\n    inner.unshift(leftDelim);\n\n    // Handle middle delimiters\n    if (hadMiddle) {\n        for (i = 1; i < inner.length; i++) {\n            if (inner[i].isMiddle) {\n                // Apply the options that were active when \\middle was called\n                inner[i] = delimiter.leftRightDelim(\n                    inner[i].isMiddle.value, innerHeight, innerDepth,\n                    inner[i].isMiddle.options, group.mode, []);\n            }\n        }\n    }\n\n    var rightDelim;\n    // Same for the right delimiter\n    if (group.value.right === \".\") {\n        rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n        rightDelim = delimiter.leftRightDelim(\n            group.value.right, innerHeight, innerDepth, options,\n            group.mode, [\"mclose\"]);\n    }\n    // Add it to the end of the expression.\n    inner.push(rightDelim);\n\n    return makeSpan(\n        [\"minner\", style.cls()], inner, options);\n};\n\ngroupTypes.middle = function(group, options) {\n    var middleDelim;\n    if (group.value.value === \".\") {\n        middleDelim = makeNullDelimiter(options, []);\n    } else {\n        middleDelim = delimiter.sizedDelim(\n            group.value.value, 1, options,\n            group.mode, []);\n        middleDelim.isMiddle = {value: group.value.value, options: options};\n    }\n    return middleDelim;\n};\n\ngroupTypes.rule = function(group, options) {\n    // Make an empty span for the rule\n    var rule = makeSpan([\"mord\", \"rule\"], [], options);\n    var style = options.style;\n\n    // Calculate the shift, width, and height of the rule, and account for units\n    var shift = 0;\n    if (group.value.shift) {\n        shift = calculateSize(group.value.shift, style);\n    }\n\n    var width = calculateSize(group.value.width, style);\n    var height = calculateSize(group.value.height, style);\n\n    // The sizes of rules are absolute, so make it larger if we are in a\n    // smaller style.\n    shift /= style.sizeMultiplier;\n    width /= style.sizeMultiplier;\n    height /= style.sizeMultiplier;\n\n    // Style the rule to the right size\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\";\n\n    // Record the height and width\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift;\n\n    return rule;\n};\n\ngroupTypes.kern = function(group, options) {\n    // Make an empty span for the rule\n    var rule = makeSpan([\"mord\", \"rule\"], [], options);\n    var style = options.style;\n\n    var dimension = 0;\n    if (group.value.dimension) {\n        dimension = calculateSize(group.value.dimension, style);\n    }\n\n    dimension /= style.sizeMultiplier;\n\n    rule.style.marginLeft = dimension + \"em\";\n\n    return rule;\n};\n\ngroupTypes.accent = function(group, options) {\n    // Accents are handled in the TeXbook pg. 443, rule 12.\n    var base = group.value.base;\n    var style = options.style;\n\n    var supsubGroup;\n    if (group.type === \"supsub\") {\n        // If our base is a character box, and we have superscripts and\n        // subscripts, the supsub will defer to us. In particular, we want\n        // to attach the superscripts and subscripts to the inner body (so\n        // that the position of the superscripts and subscripts won't be\n        // affected by the height of the accent). We accomplish this by\n        // sticking the base of the accent into the base of the supsub, and\n        // rendering that, while keeping track of where the accent is.\n\n        // The supsub group is the group that was passed in\n        var supsub = group;\n        // The real accent group is the base of the supsub group\n        group = supsub.value.base;\n        // The character box is the base of the accent group\n        base = group.value.base;\n        // Stick the character box into the base of the supsub group\n        supsub.value.base = base;\n\n        // Rerender the supsub group with its new base, and store that\n        // result.\n        supsubGroup = buildGroup(\n            supsub, options.reset());\n    }\n\n    // Build the base group\n    var body = buildGroup(\n        base, options.withStyle(style.cramp()));\n\n    // Calculate the skew of the accent. This is based on the line \"If the\n    // nucleus is not a single character, let s = 0; otherwise set s to the\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\n    // Note that our skew metrics are just the kern between each character\n    // and the skewchar.\n    var skew;\n    if (isCharacterBox(base)) {\n        // If the base is a character box, then we want the skew of the\n        // innermost character. To do that, we find the innermost character:\n        var baseChar = getBaseElem(base);\n        // Then, we render its group to get the symbol inside it\n        var baseGroup = buildGroup(\n            baseChar, options.withStyle(style.cramp()));\n        // Finally, we pull the skew off of the symbol.\n        skew = baseGroup.skew;\n        // Note that we now throw away baseGroup, because the layers we\n        // removed with getBaseElem might contain things like \\color which\n        // we can't get rid of.\n        // TODO(emily): Find a better way to get the skew\n    } else {\n        skew = 0;\n    }\n\n    // calculate the amount of space between the body and the accent\n    var clearance = Math.min(\n        body.height,\n        style.metrics.xHeight);\n\n    // Build the accent\n    var accent = buildCommon.makeSymbol(\n        group.value.accent, \"Main-Regular\", \"math\", options);\n    // Remove the italic correction of the accent, because it only serves to\n    // shift the accent over to a place we don't want.\n    accent.italic = 0;\n\n    // The \\vec character that the fonts use is a combining character, and\n    // thus shows up much too far to the left. To account for this, we add a\n    // specific class which shifts the accent over to where we want it.\n    // TODO(emily): Fix this in a better way, like by changing the font\n    var vecClass = group.value.accent === \"\\\\vec\" ? \"accent-vec\" : null;\n\n    var accentBody = makeSpan([\"accent-body\", vecClass], [\n        makeSpan([], [accent])]);\n\n    accentBody = buildCommon.makeVList([\n        {type: \"elem\", elem: body},\n        {type: \"kern\", size: -clearance},\n        {type: \"elem\", elem: accentBody}\n    ], \"firstBaseline\", null, options);\n\n    // Shift the accent over by the skew. Note we shift by twice the skew\n    // because we are centering the accent, so by adding 2*skew to the left,\n    // we shift it to the right by 1*skew.\n    accentBody.children[1].style.marginLeft = 2 * skew + \"em\";\n\n    var accentWrap = makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n    if (supsubGroup) {\n        // Here, we replace the \"base\" child of the supsub with our newly\n        // generated accent.\n        supsubGroup.children[0] = accentWrap;\n\n        // Since we don't rerun the height calculation after replacing the\n        // accent, we manually recalculate height.\n        supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height);\n\n        // Accents should always be ords, even when their innards are not.\n        supsubGroup.classes[0] = \"mord\";\n\n        return supsubGroup;\n    } else {\n        return accentWrap;\n    }\n};\n\ngroupTypes.phantom = function(group, options) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withPhantom(),\n        false\n    );\n\n    // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n    return new buildCommon.makeFragment(elements);\n};\n\ngroupTypes.mclass = function(group, options) {\n    var elements = buildExpression(group.value.value, options, true);\n\n    return makeSpan([group.value.mclass], elements, options);\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildGroup = function(group, options) {\n    if (!group) {\n        return makeSpan();\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        var groupNode = groupTypes[group.type](group, options);\n        var multiplier;\n\n        // If the style changed between the parent and the current group,\n        // account for the size difference\n        if (options.style !== options.parentStyle) {\n            multiplier = options.style.sizeMultiplier /\n                    options.parentStyle.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (options.size !== options.parentSize) {\n            multiplier = buildCommon.sizingMultiplier[options.size] /\n                    buildCommon.sizingMultiplier[options.parentSize];\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nvar buildHTML = function(tree, options) {\n    // buildExpression is destructive, so we need to make a clone\n    // of the incoming tree so that it isn't accidentally changed\n    tree = JSON.parse(JSON.stringify(tree));\n\n    // Build the expression contained in the tree\n    var expression = buildExpression(tree, options, true);\n    var body = makeSpan([\"base\", options.style.cls()], expression, options);\n\n    // Add struts, which ensure that the top of the HTML element falls at the\n    // height of the expression, and the bottom of the HTML element falls at the\n    // depth of the expression.\n    var topStrut = makeSpan([\"strut\"]);\n    var bottomStrut = makeSpan([\"strut\", \"bottom\"]);\n\n    topStrut.style.height = body.height + \"em\";\n    bottomStrut.style.height = (body.height + body.depth) + \"em\";\n    // We'd like to use `vertical-align: top` but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead staying in the\n    // normal place) so we use an absolute value for vertical-align instead\n    bottomStrut.style.verticalAlign = -body.depth + \"em\";\n\n    // Wrap the struts and body together\n    var htmlNode = makeSpan([\"katex-html\"], [topStrut, bottomStrut, body]);\n\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    return htmlNode;\n};\n\nmodule.exports = buildHTML;\n\n},{\"./ParseError\":6,\"./Style\":9,\"./buildCommon\":10,\"./delimiter\":14,\"./domTree\":15,\"./fontMetrics\":17,\"./utils\":25}],12:[function(require,module,exports){\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\nvar buildCommon = require(\"./buildCommon\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar mathMLTree = require(\"./mathMLTree\");\nvar ParseError = require(\"./ParseError\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\nvar fontMap = buildCommon.fontMap;\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar makeText = function(text, mode) {\n    if (symbols[mode][text] && symbols[mode][text].replace) {\n        text = symbols[mode][text].replace;\n    }\n\n    return new mathMLTree.TextNode(text);\n};\n\n/**\n * Returns the math variant as a string or null if none is required.\n */\nvar getVariant = function(group, options) {\n    var font = options.font;\n    if (!font) {\n        return null;\n    }\n\n    var mode = group.mode;\n    if (font === \"mathit\") {\n        return \"italic\";\n    }\n\n    var value = group.value;\n    if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], value)) {\n        return null;\n    }\n\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var fontName = fontMap[font].fontName;\n    if (fontMetrics.getCharacterMetrics(value, fontName)) {\n        return fontMap[options.font].variant;\n    }\n\n    return null;\n};\n\n/**\n * Functions for handling the different types of groups found in the parse\n * tree. Each function should take a parse group and return a MathML node.\n */\nvar groupTypes = {};\n\ngroupTypes.mathord = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mi\",\n        [makeText(group.value, group.mode)]);\n\n    var variant = getVariant(group, options);\n    if (variant) {\n        node.setAttribute(\"mathvariant\", variant);\n    }\n    return node;\n};\n\ngroupTypes.textord = function(group, options) {\n    var text = makeText(group.value, group.mode);\n\n    var variant = getVariant(group, options) || \"normal\";\n\n    var node;\n    if (/[0-9]/.test(group.value)) {\n        // TODO(kevinb) merge adjacent <mn> nodes\n        // do it as a post processing step\n        node = new mathMLTree.MathNode(\"mn\", [text]);\n        if (options.font) {\n            node.setAttribute(\"mathvariant\", variant);\n        }\n    } else {\n        node = new mathMLTree.MathNode(\"mi\", [text]);\n        node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n};\n\ngroupTypes.bin = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.rel = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.open = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.close = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.inner = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.punct = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    node.setAttribute(\"separator\", \"true\");\n\n    return node;\n};\n\ngroupTypes.ordgroup = function(group, options) {\n    var inner = buildExpression(group.value, options);\n\n    var node = new mathMLTree.MathNode(\"mrow\", inner);\n\n    return node;\n};\n\ngroupTypes.text = function(group, options) {\n    var inner = buildExpression(group.value.body, options);\n\n    var node = new mathMLTree.MathNode(\"mtext\", inner);\n\n    return node;\n};\n\ngroupTypes.color = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    node.setAttribute(\"mathcolor\", group.value.color);\n\n    return node;\n};\n\ngroupTypes.supsub = function(group, options) {\n    var children = [buildGroup(group.value.base, options)];\n\n    if (group.value.sub) {\n        children.push(buildGroup(group.value.sub, options));\n    }\n\n    if (group.value.sup) {\n        children.push(buildGroup(group.value.sup, options));\n    }\n\n    var nodeType;\n    if (!group.value.sub) {\n        nodeType = \"msup\";\n    } else if (!group.value.sup) {\n        nodeType = \"msub\";\n    } else {\n        nodeType = \"msubsup\";\n    }\n\n    var node = new mathMLTree.MathNode(nodeType, children);\n\n    return node;\n};\n\ngroupTypes.genfrac = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mfrac\",\n        [buildGroup(group.value.numer, options),\n            buildGroup(group.value.denom, options)]);\n\n    if (!group.value.hasBarLine) {\n        node.setAttribute(\"linethickness\", \"0px\");\n    }\n\n    if (group.value.leftDelim != null || group.value.rightDelim != null) {\n        var withDelims = [];\n\n        if (group.value.leftDelim != null) {\n            var leftOp = new mathMLTree.MathNode(\n                \"mo\", [new mathMLTree.TextNode(group.value.leftDelim)]);\n\n            leftOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(leftOp);\n        }\n\n        withDelims.push(node);\n\n        if (group.value.rightDelim != null) {\n            var rightOp = new mathMLTree.MathNode(\n                \"mo\", [new mathMLTree.TextNode(group.value.rightDelim)]);\n\n            rightOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(rightOp);\n        }\n\n        var outerNode = new mathMLTree.MathNode(\"mrow\", withDelims);\n\n        return outerNode;\n    }\n\n    return node;\n};\n\ngroupTypes.array = function(group, options) {\n    return new mathMLTree.MathNode(\n        \"mtable\", group.value.body.map(function(row) {\n            return new mathMLTree.MathNode(\n                \"mtr\", row.map(function(cell) {\n                    return new mathMLTree.MathNode(\n                        \"mtd\", [buildGroup(cell, options)]);\n                }));\n        }));\n};\n\ngroupTypes.sqrt = function(group, options) {\n    var node;\n    if (group.value.index) {\n        node = new mathMLTree.MathNode(\n            \"mroot\", [\n                buildGroup(group.value.body, options),\n                buildGroup(group.value.index, options)\n            ]);\n    } else {\n        node = new mathMLTree.MathNode(\n            \"msqrt\", [buildGroup(group.value.body, options)]);\n    }\n\n    return node;\n};\n\ngroupTypes.leftright = function(group, options) {\n    var inner = buildExpression(group.value.body, options);\n\n    if (group.value.left !== \".\") {\n        var leftNode = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.left, group.mode)]);\n\n        leftNode.setAttribute(\"fence\", \"true\");\n\n        inner.unshift(leftNode);\n    }\n\n    if (group.value.right !== \".\") {\n        var rightNode = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.right, group.mode)]);\n\n        rightNode.setAttribute(\"fence\", \"true\");\n\n        inner.push(rightNode);\n    }\n\n    var outerNode = new mathMLTree.MathNode(\"mrow\", inner);\n\n    return outerNode;\n};\n\ngroupTypes.middle = function(group, options) {\n    var middleNode = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value.middle, group.mode)]);\n    middleNode.setAttribute(\"fence\", \"true\");\n    return middleNode;\n};\n\ngroupTypes.accent = function(group, options) {\n    var accentNode = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value.accent, group.mode)]);\n\n    var node = new mathMLTree.MathNode(\n        \"mover\",\n        [buildGroup(group.value.base, options),\n            accentNode]);\n\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\ngroupTypes.spacing = function(group) {\n    var node;\n\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n        group.value === \" \" || group.value === \"~\") {\n        node = new mathMLTree.MathNode(\n            \"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else {\n        node = new mathMLTree.MathNode(\"mspace\");\n\n        node.setAttribute(\n            \"width\", buildCommon.spacingFunctions[group.value].size);\n    }\n\n    return node;\n};\n\ngroupTypes.op = function(group, options) {\n    var node;\n\n    // TODO(emily): handle big operators using the `largeop` attribute\n\n    if (group.value.symbol) {\n        // This is a symbol. Just add the symbol.\n        node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.body, group.mode)]);\n    } else if (group.value.value) {\n        // This is an operator with children. Add them.\n        node = new mathMLTree.MathNode(\n            \"mo\", buildExpression(group.value.value, options));\n    } else {\n        // This is a text operator. Add all of the characters from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup.\n        node = new mathMLTree.MathNode(\n            \"mi\", [new mathMLTree.TextNode(group.value.body.slice(1))]);\n    }\n\n    return node;\n};\n\ngroupTypes.mod = function(group, options) {\n    var inner = [];\n\n    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {\n        inner.push(new mathMLTree.MathNode(\n            \"mo\", [makeText(\"(\", group.mode)]));\n    }\n    if (group.value.modType !== \"pod\") {\n        inner.push(new mathMLTree.MathNode(\n            \"mo\", [makeText(\"mod\", group.mode)]));\n    }\n    if (group.value.value) {\n        var space = new mathMLTree.MathNode(\"mspace\");\n        space.setAttribute(\"width\", \"0.333333em\");\n        inner.push(space);\n        inner = inner.concat(buildExpression(group.value.value, options));\n    }\n    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {\n        inner.push(new mathMLTree.MathNode(\n            \"mo\", [makeText(\")\", group.mode)]));\n    }\n\n    return new mathMLTree.MathNode(\"mo\", inner);\n};\n\ngroupTypes.katex = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mtext\", [new mathMLTree.TextNode(\"KaTeX\")]);\n\n    return node;\n};\n\ngroupTypes.font = function(group, options) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font));\n};\n\ngroupTypes.delimsizing = function(group) {\n    var children = [];\n\n    if (group.value.value !== \".\") {\n        children.push(makeText(group.value.value, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.value.mclass === \"mopen\" ||\n        group.value.mclass === \"mclose\") {\n        // Only some of the delimsizing functions act as fences, and they\n        // return \"mopen\" or \"mclose\" mclass.\n        node.setAttribute(\"fence\", \"true\");\n    } else {\n        // Explicitly disable fencing if it's not a fence, to override the\n        // defaults.\n        node.setAttribute(\"fence\", \"false\");\n    }\n\n    return node;\n};\n\ngroupTypes.styling = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    var styleAttributes = {\n        \"display\": [\"0\", \"true\"],\n        \"text\": [\"0\", \"false\"],\n        \"script\": [\"1\", \"false\"],\n        \"scriptscript\": [\"2\", \"false\"]\n    };\n\n    var attr = styleAttributes[group.value.style];\n\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n\n    return node;\n};\n\ngroupTypes.sizing = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n    node.setAttribute(\n        \"mathsize\", buildCommon.sizingMultiplier[group.value.size] + \"em\");\n\n    return node;\n};\n\ngroupTypes.overline = function(group, options) {\n    var operator = new mathMLTree.MathNode(\n        \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n\n    var node = new mathMLTree.MathNode(\n        \"mover\",\n        [buildGroup(group.value.body, options),\n            operator]);\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\ngroupTypes.underline = function(group, options) {\n    var operator = new mathMLTree.MathNode(\n        \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n\n    var node = new mathMLTree.MathNode(\n        \"munder\",\n        [buildGroup(group.value.body, options),\n            operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n\n    return node;\n};\n\ngroupTypes.rule = function(group) {\n    // TODO(emily): Figure out if there's an actual way to draw black boxes\n    // in MathML.\n    var node = new mathMLTree.MathNode(\"mrow\");\n\n    return node;\n};\n\ngroupTypes.kern = function(group) {\n    // TODO(kevin): Figure out if there's a way to add space in MathML\n    var node = new mathMLTree.MathNode(\"mrow\");\n\n    return node;\n};\n\ngroupTypes.llap = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mpadded\", [buildGroup(group.value.body, options)]);\n\n    node.setAttribute(\"lspace\", \"-1width\");\n    node.setAttribute(\"width\", \"0px\");\n\n    return node;\n};\n\ngroupTypes.rlap = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mpadded\", [buildGroup(group.value.body, options)]);\n\n    node.setAttribute(\"width\", \"0px\");\n\n    return node;\n};\n\ngroupTypes.phantom = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n};\n\ngroupTypes.mclass = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n    return new mathMLTree.MathNode(\"mstyle\", inner);\n};\n\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes. A little simpler than the HTML version because we don't do any\n * previous-node handling.\n */\nvar buildExpression = function(expression, options) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options));\n    }\n    return groups;\n};\n\n/**\n * Takes a group from the parser and calls the appropriate groupTypes function\n * on it to produce a MathML node.\n */\nvar buildGroup = function(group, options) {\n    if (!group) {\n        return new mathMLTree.MathNode(\"mrow\");\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        return groupTypes[group.type](group, options);\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\nvar buildMathML = function(tree, texExpression, options) {\n    var expression = buildExpression(tree, options);\n\n    // Wrap up the expression in an mrow so it is presented in the semantics\n    // tag correctly.\n    var wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n\n    // Build a TeX annotation of the source\n    var annotation = new mathMLTree.MathNode(\n        \"annotation\", [new mathMLTree.TextNode(texExpression)]);\n\n    annotation.setAttribute(\"encoding\", \"application/x-tex\");\n\n    var semantics = new mathMLTree.MathNode(\n        \"semantics\", [wrapper, annotation]);\n\n    var math = new mathMLTree.MathNode(\"math\", [semantics]);\n\n    // You can't style <math> nodes, so we wrap the node in a span.\n    return makeSpan([\"katex-mathml\"], [math]);\n};\n\nmodule.exports = buildMathML;\n\n},{\"./ParseError\":6,\"./buildCommon\":10,\"./fontMetrics\":17,\"./mathMLTree\":20,\"./symbols\":23,\"./utils\":25}],13:[function(require,module,exports){\nvar buildHTML = require(\"./buildHTML\");\nvar buildMathML = require(\"./buildMathML\");\nvar buildCommon = require(\"./buildCommon\");\nvar Options = require(\"./Options\");\nvar Settings = require(\"./Settings\");\nvar Style = require(\"./Style\");\n\nvar makeSpan = buildCommon.makeSpan;\n\nvar buildTree = function(tree, expression, settings) {\n    settings = settings || new Settings({});\n\n    var startStyle = Style.TEXT;\n    if (settings.displayMode) {\n        startStyle = Style.DISPLAY;\n    }\n\n    // Setup the default options\n    var options = new Options({\n        style: startStyle,\n        size: \"size5\"\n    });\n\n    // `buildHTML` sometimes messes with the parse tree (like turning bins ->\n    // ords), so we build the MathML version first.\n    var mathMLNode = buildMathML(tree, expression, options);\n    var htmlNode = buildHTML(tree, options);\n\n    var katexNode = makeSpan([\"katex\"], [\n        mathMLNode, htmlNode\n    ]);\n\n    if (settings.displayMode) {\n        return makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\nmodule.exports = buildTree;\n\n},{\"./Options\":5,\"./Settings\":8,\"./Style\":9,\"./buildCommon\":10,\"./buildHTML\":11,\"./buildMathML\":12}],14:[function(require,module,exports){\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar getMetrics = function(symbol, font) {\n    if (symbols.math[symbol] && symbols.math[symbol].replace) {\n        return fontMetrics.getCharacterMetrics(\n            symbols.math[symbol].replace, font);\n    } else {\n        return fontMetrics.getCharacterMetrics(\n            symbol, font);\n    }\n};\n\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\nvar mathrmSize = function(value, size, mode, options) {\n    return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\",\n        mode, options);\n};\n\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\nvar styleWrap = function(delim, toStyle, options, classes) {\n    classes = classes || [];\n    var span = makeSpan(\n        classes.concat([\"style-wrap\", options.style.reset(), toStyle.cls()]),\n        [delim], options);\n\n    var multiplier = toStyle.sizeMultiplier / options.style.sizeMultiplier;\n\n    span.height *= multiplier;\n    span.depth *= multiplier;\n    span.maxFontSize = toStyle.sizeMultiplier;\n\n    return span;\n};\n\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\nvar makeSmallDelim = function(delim, style, center, options, mode, classes) {\n    var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n\n    var span = styleWrap(text, style, options, classes);\n\n    if (center) {\n        var shift =\n            (1 - options.style.sizeMultiplier / style.sizeMultiplier) *\n            options.style.metrics.axisHeight;\n\n        span.style.top = shift + \"em\";\n        span.height -= shift;\n        span.depth += shift;\n    }\n\n    return span;\n};\n\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\nvar makeLargeDelim = function(delim, size, center, options, mode, classes) {\n    var inner = mathrmSize(delim, size, mode, options);\n\n    var span = styleWrap(\n        makeSpan([\"delimsizing\", \"size\" + size], [inner], options),\n        Style.TEXT, options, classes);\n\n    if (center) {\n        var shift = (1 - options.style.sizeMultiplier) *\n            options.style.metrics.axisHeight;\n\n        span.style.top = shift + \"em\";\n        span.height -= shift;\n        span.depth += shift;\n    }\n\n    return span;\n};\n\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\nvar makeInner = function(symbol, font, mode) {\n    var sizeClass;\n    // Apply the correct CSS class to choose the right font.\n    if (font === \"Size1-Regular\") {\n        sizeClass = \"delim-size1\";\n    } else if (font === \"Size4-Regular\") {\n        sizeClass = \"delim-size4\";\n    }\n\n    var inner = makeSpan(\n        [\"delimsizinginner\", sizeClass],\n        [makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]);\n\n    // Since this will be passed into `makeVList` in the end, wrap the element\n    // in the appropriate tag that VList uses.\n    return {type: \"elem\", elem: inner};\n};\n\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\nvar makeStackedDelim = function(delim, heightTotal, center, options, mode,\n                                classes) {\n    // There are four parts, the top, an optional middle, a repeated part, and a\n    // bottom.\n    var top;\n    var middle;\n    var repeat;\n    var bottom;\n    top = repeat = bottom = delim;\n    middle = null;\n    // Also keep track of what font the delimiters are in\n    var font = \"Size1-Regular\";\n\n    // We set the parts and font based on the symbol. Note that we use\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n    // repeats of the arrows\n    if (delim === \"\\\\uparrow\") {\n        repeat = bottom = \"\\u23d0\";\n    } else if (delim === \"\\\\Uparrow\") {\n        repeat = bottom = \"\\u2016\";\n    } else if (delim === \"\\\\downarrow\") {\n        top = repeat = \"\\u23d0\";\n    } else if (delim === \"\\\\Downarrow\") {\n        top = repeat = \"\\u2016\";\n    } else if (delim === \"\\\\updownarrow\") {\n        top = \"\\\\uparrow\";\n        repeat = \"\\u23d0\";\n        bottom = \"\\\\downarrow\";\n    } else if (delim === \"\\\\Updownarrow\") {\n        top = \"\\\\Uparrow\";\n        repeat = \"\\u2016\";\n        bottom = \"\\\\Downarrow\";\n    } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n        top = \"\\u23a1\";\n        repeat = \"\\u23a2\";\n        bottom = \"\\u23a3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n        top = \"\\u23a4\";\n        repeat = \"\\u23a5\";\n        bottom = \"\\u23a6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lfloor\") {\n        repeat = top = \"\\u23a2\";\n        bottom = \"\\u23a3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lceil\") {\n        top = \"\\u23a1\";\n        repeat = bottom = \"\\u23a2\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rfloor\") {\n        repeat = top = \"\\u23a5\";\n        bottom = \"\\u23a6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rceil\") {\n        top = \"\\u23a4\";\n        repeat = bottom = \"\\u23a5\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"(\") {\n        top = \"\\u239b\";\n        repeat = \"\\u239c\";\n        bottom = \"\\u239d\";\n        font = \"Size4-Regular\";\n    } else if (delim === \")\") {\n        top = \"\\u239e\";\n        repeat = \"\\u239f\";\n        bottom = \"\\u23a0\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n        top = \"\\u23a7\";\n        middle = \"\\u23a8\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n        top = \"\\u23ab\";\n        middle = \"\\u23ac\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lgroup\") {\n        top = \"\\u23a7\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rgroup\") {\n        top = \"\\u23ab\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lmoustache\") {\n        top = \"\\u23a7\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rmoustache\") {\n        top = \"\\u23ab\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\surd\") {\n        top = \"\\ue001\";\n        bottom = \"\\u23b7\";\n        repeat = \"\\ue000\";\n        font = \"Size4-Regular\";\n    }\n\n    // Get the metrics of the four sections\n    var topMetrics = getMetrics(top, font);\n    var topHeightTotal = topMetrics.height + topMetrics.depth;\n    var repeatMetrics = getMetrics(repeat, font);\n    var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n    var bottomMetrics = getMetrics(bottom, font);\n    var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n    var middleHeightTotal = 0;\n    var middleFactor = 1;\n    if (middle !== null) {\n        var middleMetrics = getMetrics(middle, font);\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n        middleFactor = 2; // repeat symmetrically above and below middle\n    }\n\n    // Calcuate the minimal height that the delimiter can have.\n    // It is at least the size of the top, bottom, and optional middle combined.\n    var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\n\n    // Compute the number of copies of the repeat symbol we will need\n    var repeatCount = Math.ceil(\n        (heightTotal - minHeight) / (middleFactor * repeatHeightTotal));\n\n    // Compute the total height of the delimiter including all the symbols\n    var realHeightTotal =\n        minHeight + repeatCount * middleFactor * repeatHeightTotal;\n\n    // The center of the delimiter is placed at the center of the axis. Note\n    // that in this context, \"center\" means that the delimiter should be\n    // centered around the axis in the current style, while normally it is\n    // centered around the axis in textstyle.\n    var axisHeight = options.style.metrics.axisHeight;\n    if (center) {\n        axisHeight *= options.style.sizeMultiplier;\n    }\n    // Calculate the depth\n    var depth = realHeightTotal / 2 - axisHeight;\n\n    // Now, we start building the pieces that will go into the vlist\n\n    // Keep a list of the inner pieces\n    var inners = [];\n\n    // Add the bottom symbol\n    inners.push(makeInner(bottom, font, mode));\n\n    var i;\n    if (middle === null) {\n        // Add that many symbols\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    } else {\n        // When there is a middle bit, we need the middle part and two repeated\n        // sections\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n        inners.push(makeInner(middle, font, mode));\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    }\n\n    // Add the top symbol\n    inners.push(makeInner(top, font, mode));\n\n    // Finally, build the vlist\n    var inner = buildCommon.makeVList(inners, \"bottom\", depth, options);\n\n    return styleWrap(\n        makeSpan([\"delimsizing\", \"mult\"], [inner], options),\n        Style.TEXT, options, classes);\n};\n\n// There are three kinds of delimiters, delimiters that stack when they become\n// too large\nvar stackLargeDelimiters = [\n    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",\n    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",\n    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",\n    \"\\\\surd\"\n];\n\n// delimiters that always stack\nvar stackAlwaysDelimiters = [\n    \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\",\n    \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\",\n    \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\",\n    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",\n    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\"\n];\n\n// and delimiters that never stack\nvar stackNeverDelimiters = [\n    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"\n];\n\n// Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\nvar makeSizedDelim = function(delim, size, options, mode, classes) {\n    // < and > turn into \\langle and \\rangle in delimiters\n    if (delim === \"<\" || delim === \"\\\\lt\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Sized delimiters are never centered.\n    if (utils.contains(stackLargeDelimiters, delim) ||\n        utils.contains(stackNeverDelimiters, delim)) {\n        return makeLargeDelim(delim, size, false, options, mode, classes);\n    } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n        return makeStackedDelim(\n            delim, sizeToMaxHeight[size], false, options, mode, classes);\n    } else {\n        throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n    }\n};\n\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"large\", size: 1},\n    {type: \"large\", size: 2},\n    {type: \"large\", size: 3},\n    {type: \"large\", size: 4}\n];\n\n// Delimiters that always stack try the small delimiters first, then stack\nvar stackAlwaysDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"stack\"}\n];\n\n// Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\nvar stackLargeDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"large\", size: 1},\n    {type: \"large\", size: 2},\n    {type: \"large\", size: 3},\n    {type: \"large\", size: 4},\n    {type: \"stack\"}\n];\n\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n */\nvar delimTypeToFont = function(type) {\n    if (type.type === \"small\") {\n        return \"Main-Regular\";\n    } else if (type.type === \"large\") {\n        return \"Size\" + type.size + \"-Regular\";\n    } else if (type.type === \"stack\") {\n        return \"Size4-Regular\";\n    }\n};\n\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\nvar traverseSequence = function(delim, height, sequence, options) {\n    // Here, we choose the index we should start at in the sequences. In smaller\n    // sizes (which correspond to larger numbers in style.size) we start earlier\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n    var start = Math.min(2, 3 - options.style.size);\n    for (var i = start; i < sequence.length; i++) {\n        if (sequence[i].type === \"stack\") {\n            // This is always the last delimiter, so we just break the loop now.\n            break;\n        }\n\n        var metrics = getMetrics(delim, delimTypeToFont(sequence[i]));\n        var heightDepth = metrics.height + metrics.depth;\n\n        // Small delimiters are scaled down versions of the same font, so we\n        // account for the style change size.\n\n        if (sequence[i].type === \"small\") {\n            heightDepth *= sequence[i].style.sizeMultiplier;\n        }\n\n        // Check if the delimiter at this size works for the given height.\n        if (heightDepth > height) {\n            return sequence[i];\n        }\n    }\n\n    // If we reached the end of the sequence, return the last sequence element.\n    return sequence[sequence.length - 1];\n};\n\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\nvar makeCustomSizedDelim = function(delim, height, center, options, mode,\n                                    classes) {\n    if (delim === \"<\" || delim === \"\\\\lt\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Decide what sequence to use\n    var sequence;\n    if (utils.contains(stackNeverDelimiters, delim)) {\n        sequence = stackNeverDelimiterSequence;\n    } else if (utils.contains(stackLargeDelimiters, delim)) {\n        sequence = stackLargeDelimiterSequence;\n    } else {\n        sequence = stackAlwaysDelimiterSequence;\n    }\n\n    // Look through the sequence\n    var delimType = traverseSequence(delim, height, sequence, options);\n\n    // Depending on the sequence element we decided on, call the appropriate\n    // function.\n    if (delimType.type === \"small\") {\n        return makeSmallDelim(delim, delimType.style, center, options, mode,\n                              classes);\n    } else if (delimType.type === \"large\") {\n        return makeLargeDelim(delim, delimType.size, center, options, mode,\n                              classes);\n    } else if (delimType.type === \"stack\") {\n        return makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\nvar makeLeftRightDelim = function(delim, height, depth, options, mode,\n                                  classes) {\n    // We always center \\left/\\right delimiters, so the axis is always shifted\n    var axisHeight =\n        options.style.metrics.axisHeight * options.style.sizeMultiplier;\n\n    // Taken from TeX source, tex.web, function make_left_right\n    var delimiterFactor = 901;\n    var delimiterExtend = 5.0 / fontMetrics.metrics.ptPerEm;\n\n    var maxDistFromAxis = Math.max(\n        height - axisHeight, depth + axisHeight);\n\n    var totalHeight = Math.max(\n        // In real TeX, calculations are done using integral values which are\n        // 65536 per pt, or 655360 per em. So, the division here truncates in\n        // TeX but doesn't here, producing different results. If we wanted to\n        // exactly match TeX's calculation, we could do\n        //   Math.floor(655360 * maxDistFromAxis / 500) *\n        //    delimiterFactor / 655360\n        // (To see the difference, compare\n        //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n        // in TeX and KaTeX)\n        maxDistFromAxis / 500 * delimiterFactor,\n        2 * maxDistFromAxis - delimiterExtend);\n\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n    // height\n    return makeCustomSizedDelim(delim, totalHeight, true, options, mode,\n                                classes);\n};\n\nmodule.exports = {\n    sizedDelim: makeSizedDelim,\n    customSizedDelim: makeCustomSizedDelim,\n    leftRightDelim: makeLeftRightDelim\n};\n\n},{\"./ParseError\":6,\"./Style\":9,\"./buildCommon\":10,\"./fontMetrics\":17,\"./symbols\":23,\"./utils\":25}],15:[function(require,module,exports){\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n */\nvar unicodeRegexes = require(\"./unicodeRegexes\");\nvar utils = require(\"./utils\");\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove null or empty classes.\n */\nvar createClass = function(classes) {\n    classes = classes.slice();\n    for (var i = classes.length - 1; i >= 0; i--) {\n        if (!classes[i]) {\n            classes.splice(i, 1);\n        }\n    }\n\n    return classes.join(\" \");\n};\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n */\nfunction span(classes, children, options) {\n    this.classes = classes || [];\n    this.children = children || [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n    this.attributes = {};\n    if (options) {\n        if (options.style.isTight()) {\n            this.classes.push(\"mtight\");\n        }\n        if (options.getColor()) {\n            this.style.color = options.getColor();\n        }\n    }\n}\n\n/**\n * Sets an arbitrary attribute on the span. Warning: use this wisely. Not all\n * browsers support attributes the same, and having too many custom attributes\n * is probably bad.\n */\nspan.prototype.setAttribute = function(attribute, value) {\n    this.attributes[attribute] = value;\n};\n\nspan.prototype.tryCombine = function(sibling) {\n    return false;\n};\n\n/**\n * Convert the span into an HTML node\n */\nspan.prototype.toNode = function() {\n    var span = document.createElement(\"span\");\n\n    // Apply the class\n    span.className = createClass(this.classes);\n\n    // Apply inline styles\n    for (var style in this.style) {\n        if (Object.prototype.hasOwnProperty.call(this.style, style)) {\n            span.style[style] = this.style[style];\n        }\n    }\n\n    // Apply attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            span.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    // Append the children, also as HTML nodes\n    for (var i = 0; i < this.children.length; i++) {\n        span.appendChild(this.children[i].toNode());\n    }\n\n    return span;\n};\n\n/**\n * Convert the span into an HTML markup string\n */\nspan.prototype.toMarkup = function() {\n    var markup = \"<span\";\n\n    // Add the class\n    if (this.classes.length) {\n        markup += \" class=\\\"\";\n        markup += utils.escape(createClass(this.classes));\n        markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    // Add the styles, after hyphenation\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n        }\n    }\n\n    if (styles) {\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            markup += \" \" + attr + \"=\\\"\";\n            markup += utils.escape(this.attributes[attr]);\n            markup += \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    // Add the markup of the children, also as markup\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</span>\";\n\n    return markup;\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. Thus, it only\n * contains children and doesn't have any HTML properties. It also keeps track\n * of a height, depth, and maxFontSize.\n */\nfunction documentFragment(children) {\n    this.children = children || [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n}\n\n/**\n * Convert the fragment into a node\n */\ndocumentFragment.prototype.toNode = function() {\n    // Create a fragment\n    var frag = document.createDocumentFragment();\n\n    // Append the children\n    for (var i = 0; i < this.children.length; i++) {\n        frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n};\n\n/**\n * Convert the fragment into HTML markup\n */\ndocumentFragment.prototype.toMarkup = function() {\n    var markup = \"\";\n\n    // Simply concatenate the markup for the children together\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n};\n\nvar iCombinations = {\n    'î': '\\u0131\\u0302',\n    'ï': '\\u0131\\u0308',\n    'í': '\\u0131\\u0301',\n    // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n    'ì': '\\u0131\\u0300'\n};\n\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\nfunction symbolNode(value, height, depth, italic, skew, classes, style) {\n    this.value = value || \"\";\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0;\n\n    // Mark CJK characters with specific classes so that we can specify which\n    // fonts to use.  This allows us to render these characters with a serif\n    // font in situations where the browser would either default to a sans serif\n    // or render a placeholder character.\n    if (unicodeRegexes.cjkRegex.test(value)) {\n        // I couldn't find any fonts that contained Hangul as well as all of\n        // the other characters we wanted to test there for it gets its own\n        // CSS class.\n        if (unicodeRegexes.hangulRegex.test(value)) {\n            this.classes.push('hangul_fallback');\n        } else {\n            this.classes.push('cjk_fallback');\n        }\n    }\n\n    if (/[îïíì]/.test(this.value)) {    // add ī when we add Extended Latin\n        this.value = iCombinations[this.value];\n    }\n}\n\nsymbolNode.prototype.tryCombine = function(sibling) {\n    if (!sibling\n        || !(sibling instanceof symbolNode)\n        || this.italic > 0\n        || createClass(this.classes) !== createClass(sibling.classes)\n        || this.skew !== sibling.skew\n        || this.maxFontSize !== sibling.maxFontSize) {\n        return false;\n    }\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)\n            && this.style[style] !== sibling.style[style]) {\n            return false;\n        }\n    }\n    for (style in sibling.style) {\n        if (sibling.style.hasOwnProperty(style)\n            && this.style[style] !== sibling.style[style]) {\n            return false;\n        }\n    }\n    this.value += sibling.value;\n    this.height = Math.max(this.height, sibling.height);\n    this.depth = Math.max(this.depth, sibling.depth);\n    this.italic = sibling.italic;\n    return true;\n};\n\n/**\n * Creates a text node or span from a symbol node. Note that a span is only\n * created if it is needed.\n */\nsymbolNode.prototype.toNode = function() {\n    var node = document.createTextNode(this.value);\n    var span = null;\n\n    if (this.italic > 0) {\n        span = document.createElement(\"span\");\n        span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n        span = span || document.createElement(\"span\");\n        span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            span = span || document.createElement(\"span\");\n            span.style[style] = this.style[style];\n        }\n    }\n\n    if (span) {\n        span.appendChild(node);\n        return span;\n    } else {\n        return node;\n    }\n};\n\n/**\n * Creates markup for a symbol node.\n */\nsymbolNode.prototype.toMarkup = function() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n        needsSpan = true;\n        markup += \" class=\\\"\";\n        markup += utils.escape(createClass(this.classes));\n        markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n        styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n        }\n    }\n\n    if (styles) {\n        needsSpan = true;\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.value);\n    if (needsSpan) {\n        markup += \">\";\n        markup += escaped;\n        markup += \"</span>\";\n        return markup;\n    } else {\n        return escaped;\n    }\n};\n\nmodule.exports = {\n    span: span,\n    documentFragment: documentFragment,\n    symbolNode: symbolNode\n};\n\n},{\"./unicodeRegexes\":24,\"./utils\":25}],16:[function(require,module,exports){\n/* eslint no-constant-condition:0 */\nvar parseData = require(\"./parseData\");\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar ParseNode = parseData.ParseNode;\n\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.\n */\nfunction parseArray(parser, result) {\n    var row = [];\n    var body = [row];\n    var rowGaps = [];\n    while (true) {\n        var cell = parser.parseExpression(false, null);\n        row.push(new ParseNode(\"ordgroup\", cell, parser.mode));\n        var next = parser.nextToken.text;\n        if (next === \"&\") {\n            parser.consume();\n        } else if (next === \"\\\\end\") {\n            break;\n        } else if (next === \"\\\\\\\\\" || next === \"\\\\cr\") {\n            var cr = parser.parseFunction();\n            rowGaps.push(cr.value.size);\n            row = [];\n            body.push(row);\n        } else {\n            throw new ParseError(\"Expected & or \\\\\\\\ or \\\\end\",\n                                 parser.nextToken);\n        }\n    }\n    result.body = body;\n    result.rowGaps = rowGaps;\n    return new ParseNode(result.type, result, parser.mode);\n}\n\n/*\n * An environment definition is very similar to a function definition:\n * it is declared with a name or a list of names, a set of properties\n * and a handler containing the actual implementation.\n *\n * The properties include:\n *  - numArgs: The number of arguments after the \\begin{name} function.\n *  - argTypes: (optional) Just like for a function\n *  - allowedInText: (optional) Whether or not the environment is allowed inside\n *                   text mode (default false) (not enforced yet)\n *  - numOptionalArgs: (optional) Just like for a function\n * A bare number instead of that object indicates the numArgs value.\n *\n * The handler function will receive two arguments\n *  - context: information and references provided by the parser\n *  - args: an array of arguments passed to \\begin{name}\n * The context contains the following properties:\n *  - envName: the name of the environment, one of the listed names.\n *  - parser: the parser object\n *  - lexer: the lexer object\n *  - positions: the positions associated with these arguments from args.\n * The handler must return a ParseResult.\n */\n\nfunction defineEnvironment(names, props, handler) {\n    if (typeof names === \"string\") {\n        names = [names];\n    }\n    if (typeof props === \"number\") {\n        props = { numArgs: props };\n    }\n    // Set default values of environments\n    var data = {\n        numArgs: props.numArgs || 0,\n        argTypes: props.argTypes,\n        greediness: 1,\n        allowedInText: !!props.allowedInText,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        handler: handler\n    };\n    for (var i = 0; i < names.length; ++i) {\n        module.exports[names[i]] = data;\n    }\n}\n\n// Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\ndefineEnvironment(\"array\", {\n    numArgs: 1\n}, function(context, args) {\n    var colalign = args[0];\n    colalign = colalign.value.map ? colalign.value : [colalign];\n    var cols = colalign.map(function(node) {\n        var ca = node.value;\n        if (\"lcr\".indexOf(ca) !== -1) {\n            return {\n                type: \"align\",\n                align: ca\n            };\n        } else if (ca === \"|\") {\n            return {\n                type: \"separator\",\n                separator: \"|\"\n            };\n        }\n        throw new ParseError(\n            \"Unknown column alignment: \" + node.value,\n            node);\n    });\n    var res = {\n        type: \"array\",\n        cols: cols,\n        hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n    };\n    res = parseArray(context.parser, res);\n    return res;\n});\n\n// The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\ndefineEnvironment([\n    \"matrix\",\n    \"pmatrix\",\n    \"bmatrix\",\n    \"Bmatrix\",\n    \"vmatrix\",\n    \"Vmatrix\"\n], {\n}, function(context) {\n    var delimiters = {\n        \"matrix\": null,\n        \"pmatrix\": [\"(\", \")\"],\n        \"bmatrix\": [\"[\", \"]\"],\n        \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n        \"vmatrix\": [\"|\", \"|\"],\n        \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName];\n    var res = {\n        type: \"array\",\n        hskipBeforeAndAfter: false // \\hskip -\\arraycolsep in amsmath\n    };\n    res = parseArray(context.parser, res);\n    if (delimiters) {\n        res = new ParseNode(\"leftright\", {\n            body: [res],\n            left: delimiters[0],\n            right: delimiters[1]\n        }, context.mode);\n    }\n    return res;\n});\n\n// A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\ndefineEnvironment(\"cases\", {\n}, function(context) {\n    var res = {\n        type: \"array\",\n        arraystretch: 1.2,\n        cols: [{\n            type: \"align\",\n            align: \"l\",\n            pregap: 0,\n            // TODO(kevinb) get the current style.\n            // For now we use the metrics for TEXT style which is what we were\n            // doing before.  Before attempting to get the current style we\n            // should look at TeX's behavior especially for \\over and matrices.\n            postgap: Style.TEXT.metrics.quad\n        }, {\n            type: \"align\",\n            align: \"l\",\n            pregap: 0,\n            postgap: 0\n        }]\n    };\n    res = parseArray(context.parser, res);\n    res = new ParseNode(\"leftright\", {\n        body: [res],\n        left: \"\\\\{\",\n        right: \".\"\n    }, context.mode);\n    return res;\n});\n\n// An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\ndefineEnvironment(\"aligned\", {\n}, function(context) {\n    var res = {\n        type: \"array\",\n        cols: []\n    };\n    res = parseArray(context.parser, res);\n    var emptyGroup = new ParseNode(\"ordgroup\", [], context.mode);\n    var numCols = 0;\n    res.value.body.forEach(function(row) {\n        var i;\n        for (i = 1; i < row.length; i += 2) {\n            row[i].value.unshift(emptyGroup);\n        }\n        if (numCols < row.length) {\n            numCols = row.length;\n        }\n    });\n    for (var i = 0; i < numCols; ++i) {\n        var align = \"r\";\n        var pregap = 0;\n        if (i % 2 === 1) {\n            align = \"l\";\n        } else if (i > 0) {\n            pregap = 2; // one \\qquad between columns\n        }\n        res.value.cols[i] = {\n            type: \"align\",\n            align: align,\n            pregap: pregap,\n            postgap: 0\n        };\n    }\n    return res;\n});\n\n},{\"./ParseError\":6,\"./Style\":9,\"./parseData\":21}],17:[function(require,module,exports){\n/* eslint no-unused-vars:0 */\n\nvar Style = require(\"./Style\");\nvar cjkRegex = require(\"./unicodeRegexes\").cjkRegex;\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle, scriptstyle, and scriptscriptstyle.  These are provided in the\n// the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the folllowing script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmas = {\n    slant: [0.250, 0.250, 0.250],       // sigma1\n    space: [0.000, 0.000, 0.000],       // sigma2\n    stretch: [0.000, 0.000, 0.000],     // sigma3\n    shrink: [0.000, 0.000, 0.000],      // sigma4\n    xHeight: [0.431, 0.431, 0.431],     // sigma5\n    quad: [1.000, 1.171, 1.472],        // sigma6\n    extraSpace: [0.000, 0.000, 0.000],  // sigma7\n    num1: [0.677, 0.732, 0.925],        // sigma8\n    num2: [0.394, 0.384, 0.387],        // sigma9\n    num3: [0.444, 0.471, 0.504],        // sigma10\n    denom1: [0.686, 0.752, 1.025],      // sigma11\n    denom2: [0.345, 0.344, 0.532],      // sigma12\n    sup1: [0.413, 0.503, 0.504],        // sigma13\n    sup2: [0.363, 0.431, 0.404],        // sigma14\n    sup3: [0.289, 0.286, 0.294],        // sigma15\n    sub1: [0.150, 0.143, 0.200],        // sigma16\n    sub2: [0.247, 0.286, 0.400],        // sigma17\n    supDrop: [0.386, 0.353, 0.494],     // sigma18\n    subDrop: [0.050, 0.071, 0.100],     // sigma19\n    delim1: [2.390, 1.700, 1.980],      // sigma20\n    delim2: [1.010, 1.157, 1.420],      // sigma21\n    axisHeight: [0.250, 0.250, 0.250]  // sigma22\n};\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 441.\nvar xi1 = 0;\nvar xi2 = 0;\nvar xi3 = 0;\nvar xi4 = 0;\nvar xi5 = 0.431;\nvar xi6 = 1;\nvar xi7 = 0;\nvar xi8 = 0.04;\nvar xi9 = 0.111;\nvar xi10 = 0.166;\nvar xi11 = 0.2;\nvar xi12 = 0.6;\nvar xi13 = 0.1;\n\n// This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\nvar ptPerEm = 10.0;\n\n// The space between adjacent `|` columns in an array definition. From\n// `\\showthe\\doublerulesep` in LaTeX.\nvar doubleRuleSep = 2.0 / ptPerEm;\n\n/**\n * This is just a mapping from common names to real metrics\n */\nvar metrics = {\n    defaultRuleThickness: xi8,\n    bigOpSpacing1: xi9,\n    bigOpSpacing2: xi10,\n    bigOpSpacing3: xi11,\n    bigOpSpacing4: xi12,\n    bigOpSpacing5: xi13,\n    ptPerEm: ptPerEm,\n    doubleRuleSep: doubleRuleSep\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\nvar metricMap = require(\"./fontMetricsData\");\n\n// These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\nvar extraCharacterMap = {\n    // Latin-1\n    'À': 'A',\n    'Á': 'A',\n    'Â': 'A',\n    'Ã': 'A',\n    'Ä': 'A',\n    'Å': 'A',\n    'Æ': 'A',\n    'Ç': 'C',\n    'È': 'E',\n    'É': 'E',\n    'Ê': 'E',\n    'Ë': 'E',\n    'Ì': 'I',\n    'Í': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ð': 'D',\n    'Ñ': 'N',\n    'Ò': 'O',\n    'Ó': 'O',\n    'Ô': 'O',\n    'Õ': 'O',\n    'Ö': 'O',\n    'Ø': 'O',\n    'Ù': 'U',\n    'Ú': 'U',\n    'Û': 'U',\n    'Ü': 'U',\n    'Ý': 'Y',\n    'Þ': 'o',\n    'ß': 'B',\n    'à': 'a',\n    'á': 'a',\n    'â': 'a',\n    'ã': 'a',\n    'ä': 'a',\n    'å': 'a',\n    'æ': 'a',\n    'ç': 'c',\n    'è': 'e',\n    'é': 'e',\n    'ê': 'e',\n    'ë': 'e',\n    'ì': 'i',\n    'í': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ð': 'd',\n    'ñ': 'n',\n    'ò': 'o',\n    'ó': 'o',\n    'ô': 'o',\n    'õ': 'o',\n    'ö': 'o',\n    'ø': 'o',\n    'ù': 'u',\n    'ú': 'u',\n    'û': 'u',\n    'ü': 'u',\n    'ý': 'y',\n    'þ': 'o',\n    'ÿ': 'y',\n\n    // Cyrillic\n    'А': 'A',\n    'Б': 'B',\n    'В': 'B',\n    'Г': 'F',\n    'Д': 'A',\n    'Е': 'E',\n    'Ж': 'K',\n    'З': '3',\n    'И': 'N',\n    'Й': 'N',\n    'К': 'K',\n    'Л': 'N',\n    'М': 'M',\n    'Н': 'H',\n    'О': 'O',\n    'П': 'N',\n    'Р': 'P',\n    'С': 'C',\n    'Т': 'T',\n    'У': 'y',\n    'Ф': 'O',\n    'Х': 'X',\n    'Ц': 'U',\n    'Ч': 'h',\n    'Ш': 'W',\n    'Щ': 'W',\n    'Ъ': 'B',\n    'Ы': 'X',\n    'Ь': 'B',\n    'Э': '3',\n    'Ю': 'X',\n    'Я': 'R',\n    'а': 'a',\n    'б': 'b',\n    'в': 'a',\n    'г': 'r',\n    'д': 'y',\n    'е': 'e',\n    'ж': 'm',\n    'з': 'e',\n    'и': 'n',\n    'й': 'n',\n    'к': 'n',\n    'л': 'n',\n    'м': 'm',\n    'н': 'n',\n    'о': 'o',\n    'п': 'n',\n    'р': 'p',\n    'с': 'c',\n    'т': 'o',\n    'у': 'y',\n    'ф': 'b',\n    'х': 'x',\n    'ц': 'n',\n    'ч': 'n',\n    'ш': 'w',\n    'щ': 'w',\n    'ъ': 'a',\n    'ы': 'm',\n    'ь': 'a',\n    'э': 'e',\n    'ю': 'm',\n    'я': 'r'\n};\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a style.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nvar getCharacterMetrics = function(character, style) {\n    var ch = character.charCodeAt(0);\n    if (character[0] in extraCharacterMap) {\n        ch = extraCharacterMap[character[0]].charCodeAt(0);\n    } else if (cjkRegex.test(character[0])) {\n        ch = 'M'.charCodeAt(0);\n    }\n    var metrics = metricMap[style][ch];\n    if (metrics) {\n        return {\n            depth: metrics[0],\n            height: metrics[1],\n            italic: metrics[2],\n            skew: metrics[3],\n            width: metrics[4]\n        };\n    }\n};\n\nmodule.exports = {\n    metrics: metrics,\n    sigmas: sigmas,\n    getCharacterMetrics: getCharacterMetrics\n};\n\n},{\"./Style\":9,\"./fontMetricsData\":18,\"./unicodeRegexes\":24}],18:[function(require,module,exports){\nmodule.exports = {\n    \"AMS-Regular\": {\n        \"65\": [0, 0.68889, 0, 0],\n        \"66\": [0, 0.68889, 0, 0],\n        \"67\": [0, 0.68889, 0, 0],\n        \"68\": [0, 0.68889, 0, 0],\n        \"69\": [0, 0.68889, 0, 0],\n        \"70\": [0, 0.68889, 0, 0],\n        \"71\": [0, 0.68889, 0, 0],\n        \"72\": [0, 0.68889, 0, 0],\n        \"73\": [0, 0.68889, 0, 0],\n        \"74\": [0.16667, 0.68889, 0, 0],\n        \"75\": [0, 0.68889, 0, 0],\n        \"76\": [0, 0.68889, 0, 0],\n        \"77\": [0, 0.68889, 0, 0],\n        \"78\": [0, 0.68889, 0, 0],\n        \"79\": [0.16667, 0.68889, 0, 0],\n        \"80\": [0, 0.68889, 0, 0],\n        \"81\": [0.16667, 0.68889, 0, 0],\n        \"82\": [0, 0.68889, 0, 0],\n        \"83\": [0, 0.68889, 0, 0],\n        \"84\": [0, 0.68889, 0, 0],\n        \"85\": [0, 0.68889, 0, 0],\n        \"86\": [0, 0.68889, 0, 0],\n        \"87\": [0, 0.68889, 0, 0],\n        \"88\": [0, 0.68889, 0, 0],\n        \"89\": [0, 0.68889, 0, 0],\n        \"90\": [0, 0.68889, 0, 0],\n        \"107\": [0, 0.68889, 0, 0],\n        \"165\": [0, 0.675, 0.025, 0],\n        \"174\": [0.15559, 0.69224, 0, 0],\n        \"240\": [0, 0.68889, 0, 0],\n        \"295\": [0, 0.68889, 0, 0],\n        \"710\": [0, 0.825, 0, 0],\n        \"732\": [0, 0.9, 0, 0],\n        \"770\": [0, 0.825, 0, 0],\n        \"771\": [0, 0.9, 0, 0],\n        \"989\": [0.08167, 0.58167, 0, 0],\n        \"1008\": [0, 0.43056, 0.04028, 0],\n        \"8245\": [0, 0.54986, 0, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n        \"8487\": [0, 0.68889, 0, 0],\n        \"8498\": [0, 0.68889, 0, 0],\n        \"8502\": [0, 0.68889, 0, 0],\n        \"8503\": [0, 0.68889, 0, 0],\n        \"8504\": [0, 0.68889, 0, 0],\n        \"8513\": [0, 0.68889, 0, 0],\n        \"8592\": [-0.03598, 0.46402, 0, 0],\n        \"8594\": [-0.03598, 0.46402, 0, 0],\n        \"8602\": [-0.13313, 0.36687, 0, 0],\n        \"8603\": [-0.13313, 0.36687, 0, 0],\n        \"8606\": [0.01354, 0.52239, 0, 0],\n        \"8608\": [0.01354, 0.52239, 0, 0],\n        \"8610\": [0.01354, 0.52239, 0, 0],\n        \"8611\": [0.01354, 0.52239, 0, 0],\n        \"8619\": [0, 0.54986, 0, 0],\n        \"8620\": [0, 0.54986, 0, 0],\n        \"8621\": [-0.13313, 0.37788, 0, 0],\n        \"8622\": [-0.13313, 0.36687, 0, 0],\n        \"8624\": [0, 0.69224, 0, 0],\n        \"8625\": [0, 0.69224, 0, 0],\n        \"8630\": [0, 0.43056, 0, 0],\n        \"8631\": [0, 0.43056, 0, 0],\n        \"8634\": [0.08198, 0.58198, 0, 0],\n        \"8635\": [0.08198, 0.58198, 0, 0],\n        \"8638\": [0.19444, 0.69224, 0, 0],\n        \"8639\": [0.19444, 0.69224, 0, 0],\n        \"8642\": [0.19444, 0.69224, 0, 0],\n        \"8643\": [0.19444, 0.69224, 0, 0],\n        \"8644\": [0.1808, 0.675, 0, 0],\n        \"8646\": [0.1808, 0.675, 0, 0],\n        \"8647\": [0.1808, 0.675, 0, 0],\n        \"8648\": [0.19444, 0.69224, 0, 0],\n        \"8649\": [0.1808, 0.675, 0, 0],\n        \"8650\": [0.19444, 0.69224, 0, 0],\n        \"8651\": [0.01354, 0.52239, 0, 0],\n        \"8652\": [0.01354, 0.52239, 0, 0],\n        \"8653\": [-0.13313, 0.36687, 0, 0],\n        \"8654\": [-0.13313, 0.36687, 0, 0],\n        \"8655\": [-0.13313, 0.36687, 0, 0],\n        \"8666\": [0.13667, 0.63667, 0, 0],\n        \"8667\": [0.13667, 0.63667, 0, 0],\n        \"8669\": [-0.13313, 0.37788, 0, 0],\n        \"8672\": [-0.064, 0.437, 0, 0],\n        \"8674\": [-0.064, 0.437, 0, 0],\n        \"8705\": [0, 0.825, 0, 0],\n        \"8708\": [0, 0.68889, 0, 0],\n        \"8709\": [0.08167, 0.58167, 0, 0],\n        \"8717\": [0, 0.43056, 0, 0],\n        \"8722\": [-0.03598, 0.46402, 0, 0],\n        \"8724\": [0.08198, 0.69224, 0, 0],\n        \"8726\": [0.08167, 0.58167, 0, 0],\n        \"8733\": [0, 0.69224, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8737\": [0, 0.69224, 0, 0],\n        \"8738\": [0.03517, 0.52239, 0, 0],\n        \"8739\": [0.08167, 0.58167, 0, 0],\n        \"8740\": [0.25142, 0.74111, 0, 0],\n        \"8741\": [0.08167, 0.58167, 0, 0],\n        \"8742\": [0.25142, 0.74111, 0, 0],\n        \"8756\": [0, 0.69224, 0, 0],\n        \"8757\": [0, 0.69224, 0, 0],\n        \"8764\": [-0.13313, 0.36687, 0, 0],\n        \"8765\": [-0.13313, 0.37788, 0, 0],\n        \"8769\": [-0.13313, 0.36687, 0, 0],\n        \"8770\": [-0.03625, 0.46375, 0, 0],\n        \"8774\": [0.30274, 0.79383, 0, 0],\n        \"8776\": [-0.01688, 0.48312, 0, 0],\n        \"8778\": [0.08167, 0.58167, 0, 0],\n        \"8782\": [0.06062, 0.54986, 0, 0],\n        \"8783\": [0.06062, 0.54986, 0, 0],\n        \"8785\": [0.08198, 0.58198, 0, 0],\n        \"8786\": [0.08198, 0.58198, 0, 0],\n        \"8787\": [0.08198, 0.58198, 0, 0],\n        \"8790\": [0, 0.69224, 0, 0],\n        \"8791\": [0.22958, 0.72958, 0, 0],\n        \"8796\": [0.08198, 0.91667, 0, 0],\n        \"8806\": [0.25583, 0.75583, 0, 0],\n        \"8807\": [0.25583, 0.75583, 0, 0],\n        \"8808\": [0.25142, 0.75726, 0, 0],\n        \"8809\": [0.25142, 0.75726, 0, 0],\n        \"8812\": [0.25583, 0.75583, 0, 0],\n        \"8814\": [0.20576, 0.70576, 0, 0],\n        \"8815\": [0.20576, 0.70576, 0, 0],\n        \"8816\": [0.30274, 0.79383, 0, 0],\n        \"8817\": [0.30274, 0.79383, 0, 0],\n        \"8818\": [0.22958, 0.72958, 0, 0],\n        \"8819\": [0.22958, 0.72958, 0, 0],\n        \"8822\": [0.1808, 0.675, 0, 0],\n        \"8823\": [0.1808, 0.675, 0, 0],\n        \"8828\": [0.13667, 0.63667, 0, 0],\n        \"8829\": [0.13667, 0.63667, 0, 0],\n        \"8830\": [0.22958, 0.72958, 0, 0],\n        \"8831\": [0.22958, 0.72958, 0, 0],\n        \"8832\": [0.20576, 0.70576, 0, 0],\n        \"8833\": [0.20576, 0.70576, 0, 0],\n        \"8840\": [0.30274, 0.79383, 0, 0],\n        \"8841\": [0.30274, 0.79383, 0, 0],\n        \"8842\": [0.13597, 0.63597, 0, 0],\n        \"8843\": [0.13597, 0.63597, 0, 0],\n        \"8847\": [0.03517, 0.54986, 0, 0],\n        \"8848\": [0.03517, 0.54986, 0, 0],\n        \"8858\": [0.08198, 0.58198, 0, 0],\n        \"8859\": [0.08198, 0.58198, 0, 0],\n        \"8861\": [0.08198, 0.58198, 0, 0],\n        \"8862\": [0, 0.675, 0, 0],\n        \"8863\": [0, 0.675, 0, 0],\n        \"8864\": [0, 0.675, 0, 0],\n        \"8865\": [0, 0.675, 0, 0],\n        \"8872\": [0, 0.69224, 0, 0],\n        \"8873\": [0, 0.69224, 0, 0],\n        \"8874\": [0, 0.69224, 0, 0],\n        \"8876\": [0, 0.68889, 0, 0],\n        \"8877\": [0, 0.68889, 0, 0],\n        \"8878\": [0, 0.68889, 0, 0],\n        \"8879\": [0, 0.68889, 0, 0],\n        \"8882\": [0.03517, 0.54986, 0, 0],\n        \"8883\": [0.03517, 0.54986, 0, 0],\n        \"8884\": [0.13667, 0.63667, 0, 0],\n        \"8885\": [0.13667, 0.63667, 0, 0],\n        \"8888\": [0, 0.54986, 0, 0],\n        \"8890\": [0.19444, 0.43056, 0, 0],\n        \"8891\": [0.19444, 0.69224, 0, 0],\n        \"8892\": [0.19444, 0.69224, 0, 0],\n        \"8901\": [0, 0.54986, 0, 0],\n        \"8903\": [0.08167, 0.58167, 0, 0],\n        \"8905\": [0.08167, 0.58167, 0, 0],\n        \"8906\": [0.08167, 0.58167, 0, 0],\n        \"8907\": [0, 0.69224, 0, 0],\n        \"8908\": [0, 0.69224, 0, 0],\n        \"8909\": [-0.03598, 0.46402, 0, 0],\n        \"8910\": [0, 0.54986, 0, 0],\n        \"8911\": [0, 0.54986, 0, 0],\n        \"8912\": [0.03517, 0.54986, 0, 0],\n        \"8913\": [0.03517, 0.54986, 0, 0],\n        \"8914\": [0, 0.54986, 0, 0],\n        \"8915\": [0, 0.54986, 0, 0],\n        \"8916\": [0, 0.69224, 0, 0],\n        \"8918\": [0.0391, 0.5391, 0, 0],\n        \"8919\": [0.0391, 0.5391, 0, 0],\n        \"8920\": [0.03517, 0.54986, 0, 0],\n        \"8921\": [0.03517, 0.54986, 0, 0],\n        \"8922\": [0.38569, 0.88569, 0, 0],\n        \"8923\": [0.38569, 0.88569, 0, 0],\n        \"8926\": [0.13667, 0.63667, 0, 0],\n        \"8927\": [0.13667, 0.63667, 0, 0],\n        \"8928\": [0.30274, 0.79383, 0, 0],\n        \"8929\": [0.30274, 0.79383, 0, 0],\n        \"8934\": [0.23222, 0.74111, 0, 0],\n        \"8935\": [0.23222, 0.74111, 0, 0],\n        \"8936\": [0.23222, 0.74111, 0, 0],\n        \"8937\": [0.23222, 0.74111, 0, 0],\n        \"8938\": [0.20576, 0.70576, 0, 0],\n        \"8939\": [0.20576, 0.70576, 0, 0],\n        \"8940\": [0.30274, 0.79383, 0, 0],\n        \"8941\": [0.30274, 0.79383, 0, 0],\n        \"8994\": [0.19444, 0.69224, 0, 0],\n        \"8995\": [0.19444, 0.69224, 0, 0],\n        \"9416\": [0.15559, 0.69224, 0, 0],\n        \"9484\": [0, 0.69224, 0, 0],\n        \"9488\": [0, 0.69224, 0, 0],\n        \"9492\": [0, 0.37788, 0, 0],\n        \"9496\": [0, 0.37788, 0, 0],\n        \"9585\": [0.19444, 0.68889, 0, 0],\n        \"9586\": [0.19444, 0.74111, 0, 0],\n        \"9632\": [0, 0.675, 0, 0],\n        \"9633\": [0, 0.675, 0, 0],\n        \"9650\": [0, 0.54986, 0, 0],\n        \"9651\": [0, 0.54986, 0, 0],\n        \"9654\": [0.03517, 0.54986, 0, 0],\n        \"9660\": [0, 0.54986, 0, 0],\n        \"9661\": [0, 0.54986, 0, 0],\n        \"9664\": [0.03517, 0.54986, 0, 0],\n        \"9674\": [0.11111, 0.69224, 0, 0],\n        \"9733\": [0.19444, 0.69224, 0, 0],\n        \"10003\": [0, 0.69224, 0, 0],\n        \"10016\": [0, 0.69224, 0, 0],\n        \"10731\": [0.11111, 0.69224, 0, 0],\n        \"10846\": [0.19444, 0.75583, 0, 0],\n        \"10877\": [0.13667, 0.63667, 0, 0],\n        \"10878\": [0.13667, 0.63667, 0, 0],\n        \"10885\": [0.25583, 0.75583, 0, 0],\n        \"10886\": [0.25583, 0.75583, 0, 0],\n        \"10887\": [0.13597, 0.63597, 0, 0],\n        \"10888\": [0.13597, 0.63597, 0, 0],\n        \"10889\": [0.26167, 0.75726, 0, 0],\n        \"10890\": [0.26167, 0.75726, 0, 0],\n        \"10891\": [0.48256, 0.98256, 0, 0],\n        \"10892\": [0.48256, 0.98256, 0, 0],\n        \"10901\": [0.13667, 0.63667, 0, 0],\n        \"10902\": [0.13667, 0.63667, 0, 0],\n        \"10933\": [0.25142, 0.75726, 0, 0],\n        \"10934\": [0.25142, 0.75726, 0, 0],\n        \"10935\": [0.26167, 0.75726, 0, 0],\n        \"10936\": [0.26167, 0.75726, 0, 0],\n        \"10937\": [0.26167, 0.75726, 0, 0],\n        \"10938\": [0.26167, 0.75726, 0, 0],\n        \"10949\": [0.25583, 0.75583, 0, 0],\n        \"10950\": [0.25583, 0.75583, 0, 0],\n        \"10955\": [0.28481, 0.79383, 0, 0],\n        \"10956\": [0.28481, 0.79383, 0, 0],\n        \"57350\": [0.08167, 0.58167, 0, 0],\n        \"57351\": [0.08167, 0.58167, 0, 0],\n        \"57352\": [0.08167, 0.58167, 0, 0],\n        \"57353\": [0, 0.43056, 0.04028, 0],\n        \"57356\": [0.25142, 0.75726, 0, 0],\n        \"57357\": [0.25142, 0.75726, 0, 0],\n        \"57358\": [0.41951, 0.91951, 0, 0],\n        \"57359\": [0.30274, 0.79383, 0, 0],\n        \"57360\": [0.30274, 0.79383, 0, 0],\n        \"57361\": [0.41951, 0.91951, 0, 0],\n        \"57366\": [0.25142, 0.75726, 0, 0],\n        \"57367\": [0.25142, 0.75726, 0, 0],\n        \"57368\": [0.25142, 0.75726, 0, 0],\n        \"57369\": [0.25142, 0.75726, 0, 0],\n        \"57370\": [0.13597, 0.63597, 0, 0],\n        \"57371\": [0.13597, 0.63597, 0, 0]\n    },\n    \"Caligraphic-Regular\": {\n        \"48\": [0, 0.43056, 0, 0],\n        \"49\": [0, 0.43056, 0, 0],\n        \"50\": [0, 0.43056, 0, 0],\n        \"51\": [0.19444, 0.43056, 0, 0],\n        \"52\": [0.19444, 0.43056, 0, 0],\n        \"53\": [0.19444, 0.43056, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0.19444, 0.43056, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0.19444, 0.43056, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.19445],\n        \"66\": [0, 0.68333, 0.03041, 0.13889],\n        \"67\": [0, 0.68333, 0.05834, 0.13889],\n        \"68\": [0, 0.68333, 0.02778, 0.08334],\n        \"69\": [0, 0.68333, 0.08944, 0.11111],\n        \"70\": [0, 0.68333, 0.09931, 0.11111],\n        \"71\": [0.09722, 0.68333, 0.0593, 0.11111],\n        \"72\": [0, 0.68333, 0.00965, 0.11111],\n        \"73\": [0, 0.68333, 0.07382, 0],\n        \"74\": [0.09722, 0.68333, 0.18472, 0.16667],\n        \"75\": [0, 0.68333, 0.01445, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.13889],\n        \"77\": [0, 0.68333, 0, 0.13889],\n        \"78\": [0, 0.68333, 0.14736, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.11111],\n        \"80\": [0, 0.68333, 0.08222, 0.08334],\n        \"81\": [0.09722, 0.68333, 0, 0.11111],\n        \"82\": [0, 0.68333, 0, 0.08334],\n        \"83\": [0, 0.68333, 0.075, 0.13889],\n        \"84\": [0, 0.68333, 0.25417, 0],\n        \"85\": [0, 0.68333, 0.09931, 0.08334],\n        \"86\": [0, 0.68333, 0.08222, 0],\n        \"87\": [0, 0.68333, 0.08222, 0.08334],\n        \"88\": [0, 0.68333, 0.14643, 0.13889],\n        \"89\": [0.09722, 0.68333, 0.08222, 0.08334],\n        \"90\": [0, 0.68333, 0.07944, 0.13889]\n    },\n    \"Fraktur-Regular\": {\n        \"33\": [0, 0.69141, 0, 0],\n        \"34\": [0, 0.69141, 0, 0],\n        \"38\": [0, 0.69141, 0, 0],\n        \"39\": [0, 0.69141, 0, 0],\n        \"40\": [0.24982, 0.74947, 0, 0],\n        \"41\": [0.24982, 0.74947, 0, 0],\n        \"42\": [0, 0.62119, 0, 0],\n        \"43\": [0.08319, 0.58283, 0, 0],\n        \"44\": [0, 0.10803, 0, 0],\n        \"45\": [0.08319, 0.58283, 0, 0],\n        \"46\": [0, 0.10803, 0, 0],\n        \"47\": [0.24982, 0.74947, 0, 0],\n        \"48\": [0, 0.47534, 0, 0],\n        \"49\": [0, 0.47534, 0, 0],\n        \"50\": [0, 0.47534, 0, 0],\n        \"51\": [0.18906, 0.47534, 0, 0],\n        \"52\": [0.18906, 0.47534, 0, 0],\n        \"53\": [0.18906, 0.47534, 0, 0],\n        \"54\": [0, 0.69141, 0, 0],\n        \"55\": [0.18906, 0.47534, 0, 0],\n        \"56\": [0, 0.69141, 0, 0],\n        \"57\": [0.18906, 0.47534, 0, 0],\n        \"58\": [0, 0.47534, 0, 0],\n        \"59\": [0.12604, 0.47534, 0, 0],\n        \"61\": [-0.13099, 0.36866, 0, 0],\n        \"63\": [0, 0.69141, 0, 0],\n        \"65\": [0, 0.69141, 0, 0],\n        \"66\": [0, 0.69141, 0, 0],\n        \"67\": [0, 0.69141, 0, 0],\n        \"68\": [0, 0.69141, 0, 0],\n        \"69\": [0, 0.69141, 0, 0],\n        \"70\": [0.12604, 0.69141, 0, 0],\n        \"71\": [0, 0.69141, 0, 0],\n        \"72\": [0.06302, 0.69141, 0, 0],\n        \"73\": [0, 0.69141, 0, 0],\n        \"74\": [0.12604, 0.69141, 0, 0],\n        \"75\": [0, 0.69141, 0, 0],\n        \"76\": [0, 0.69141, 0, 0],\n        \"77\": [0, 0.69141, 0, 0],\n        \"78\": [0, 0.69141, 0, 0],\n        \"79\": [0, 0.69141, 0, 0],\n        \"80\": [0.18906, 0.69141, 0, 0],\n        \"81\": [0.03781, 0.69141, 0, 0],\n        \"82\": [0, 0.69141, 0, 0],\n        \"83\": [0, 0.69141, 0, 0],\n        \"84\": [0, 0.69141, 0, 0],\n        \"85\": [0, 0.69141, 0, 0],\n        \"86\": [0, 0.69141, 0, 0],\n        \"87\": [0, 0.69141, 0, 0],\n        \"88\": [0, 0.69141, 0, 0],\n        \"89\": [0.18906, 0.69141, 0, 0],\n        \"90\": [0.12604, 0.69141, 0, 0],\n        \"91\": [0.24982, 0.74947, 0, 0],\n        \"93\": [0.24982, 0.74947, 0, 0],\n        \"94\": [0, 0.69141, 0, 0],\n        \"97\": [0, 0.47534, 0, 0],\n        \"98\": [0, 0.69141, 0, 0],\n        \"99\": [0, 0.47534, 0, 0],\n        \"100\": [0, 0.62119, 0, 0],\n        \"101\": [0, 0.47534, 0, 0],\n        \"102\": [0.18906, 0.69141, 0, 0],\n        \"103\": [0.18906, 0.47534, 0, 0],\n        \"104\": [0.18906, 0.69141, 0, 0],\n        \"105\": [0, 0.69141, 0, 0],\n        \"106\": [0, 0.69141, 0, 0],\n        \"107\": [0, 0.69141, 0, 0],\n        \"108\": [0, 0.69141, 0, 0],\n        \"109\": [0, 0.47534, 0, 0],\n        \"110\": [0, 0.47534, 0, 0],\n        \"111\": [0, 0.47534, 0, 0],\n        \"112\": [0.18906, 0.52396, 0, 0],\n        \"113\": [0.18906, 0.47534, 0, 0],\n        \"114\": [0, 0.47534, 0, 0],\n        \"115\": [0, 0.47534, 0, 0],\n        \"116\": [0, 0.62119, 0, 0],\n        \"117\": [0, 0.47534, 0, 0],\n        \"118\": [0, 0.52396, 0, 0],\n        \"119\": [0, 0.52396, 0, 0],\n        \"120\": [0.18906, 0.47534, 0, 0],\n        \"121\": [0.18906, 0.47534, 0, 0],\n        \"122\": [0.18906, 0.47534, 0, 0],\n        \"8216\": [0, 0.69141, 0, 0],\n        \"8217\": [0, 0.69141, 0, 0],\n        \"58112\": [0, 0.62119, 0, 0],\n        \"58113\": [0, 0.62119, 0, 0],\n        \"58114\": [0.18906, 0.69141, 0, 0],\n        \"58115\": [0.18906, 0.69141, 0, 0],\n        \"58116\": [0.18906, 0.47534, 0, 0],\n        \"58117\": [0, 0.69141, 0, 0],\n        \"58118\": [0, 0.62119, 0, 0],\n        \"58119\": [0, 0.47534, 0, 0]\n    },\n    \"Main-Bold\": {\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.13333, 0.63333, 0, 0],\n        \"44\": [0.19444, 0.15556, 0, 0],\n        \"45\": [0, 0.44444, 0, 0],\n        \"46\": [0, 0.15556, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.64444, 0, 0],\n        \"49\": [0, 0.64444, 0, 0],\n        \"50\": [0, 0.64444, 0, 0],\n        \"51\": [0, 0.64444, 0, 0],\n        \"52\": [0, 0.64444, 0, 0],\n        \"53\": [0, 0.64444, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0, 0.64444, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0, 0.64444, 0, 0],\n        \"58\": [0, 0.44444, 0, 0],\n        \"59\": [0.19444, 0.44444, 0, 0],\n        \"60\": [0.08556, 0.58556, 0, 0],\n        \"61\": [-0.10889, 0.39111, 0, 0],\n        \"62\": [0.08556, 0.58556, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.68611, 0, 0],\n        \"66\": [0, 0.68611, 0, 0],\n        \"67\": [0, 0.68611, 0, 0],\n        \"68\": [0, 0.68611, 0, 0],\n        \"69\": [0, 0.68611, 0, 0],\n        \"70\": [0, 0.68611, 0, 0],\n        \"71\": [0, 0.68611, 0, 0],\n        \"72\": [0, 0.68611, 0, 0],\n        \"73\": [0, 0.68611, 0, 0],\n        \"74\": [0, 0.68611, 0, 0],\n        \"75\": [0, 0.68611, 0, 0],\n        \"76\": [0, 0.68611, 0, 0],\n        \"77\": [0, 0.68611, 0, 0],\n        \"78\": [0, 0.68611, 0, 0],\n        \"79\": [0, 0.68611, 0, 0],\n        \"80\": [0, 0.68611, 0, 0],\n        \"81\": [0.19444, 0.68611, 0, 0],\n        \"82\": [0, 0.68611, 0, 0],\n        \"83\": [0, 0.68611, 0, 0],\n        \"84\": [0, 0.68611, 0, 0],\n        \"85\": [0, 0.68611, 0, 0],\n        \"86\": [0, 0.68611, 0.01597, 0],\n        \"87\": [0, 0.68611, 0.01597, 0],\n        \"88\": [0, 0.68611, 0, 0],\n        \"89\": [0, 0.68611, 0.02875, 0],\n        \"90\": [0, 0.68611, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"92\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.31, 0.13444, 0.03194, 0],\n        \"96\": [0, 0.69444, 0, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0, 0.69444, 0.10903, 0],\n        \"103\": [0.19444, 0.44444, 0.01597, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.69444, 0, 0],\n        \"106\": [0.19444, 0.69444, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0, 0],\n        \"114\": [0, 0.44444, 0, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.63492, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.01597, 0],\n        \"119\": [0, 0.44444, 0.01597, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.01597, 0],\n        \"122\": [0, 0.44444, 0, 0],\n        \"123\": [0.25, 0.75, 0, 0],\n        \"124\": [0.25, 0.75, 0, 0],\n        \"125\": [0.25, 0.75, 0, 0],\n        \"126\": [0.35, 0.34444, 0, 0],\n        \"168\": [0, 0.69444, 0, 0],\n        \"172\": [0, 0.44444, 0, 0],\n        \"175\": [0, 0.59611, 0, 0],\n        \"176\": [0, 0.69444, 0, 0],\n        \"177\": [0.13333, 0.63333, 0, 0],\n        \"180\": [0, 0.69444, 0, 0],\n        \"215\": [0.13333, 0.63333, 0, 0],\n        \"247\": [0.13333, 0.63333, 0, 0],\n        \"305\": [0, 0.44444, 0, 0],\n        \"567\": [0.19444, 0.44444, 0, 0],\n        \"710\": [0, 0.69444, 0, 0],\n        \"711\": [0, 0.63194, 0, 0],\n        \"713\": [0, 0.59611, 0, 0],\n        \"714\": [0, 0.69444, 0, 0],\n        \"715\": [0, 0.69444, 0, 0],\n        \"728\": [0, 0.69444, 0, 0],\n        \"729\": [0, 0.69444, 0, 0],\n        \"730\": [0, 0.69444, 0, 0],\n        \"732\": [0, 0.69444, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.69444, 0, 0],\n        \"772\": [0, 0.59611, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.69444, 0, 0],\n        \"776\": [0, 0.69444, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.63194, 0, 0],\n        \"824\": [0.19444, 0.69444, 0, 0],\n        \"915\": [0, 0.68611, 0, 0],\n        \"916\": [0, 0.68611, 0, 0],\n        \"920\": [0, 0.68611, 0, 0],\n        \"923\": [0, 0.68611, 0, 0],\n        \"926\": [0, 0.68611, 0, 0],\n        \"928\": [0, 0.68611, 0, 0],\n        \"931\": [0, 0.68611, 0, 0],\n        \"933\": [0, 0.68611, 0, 0],\n        \"934\": [0, 0.68611, 0, 0],\n        \"936\": [0, 0.68611, 0, 0],\n        \"937\": [0, 0.68611, 0, 0],\n        \"8211\": [0, 0.44444, 0.03194, 0],\n        \"8212\": [0, 0.44444, 0.03194, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n        \"8224\": [0.19444, 0.69444, 0, 0],\n        \"8225\": [0.19444, 0.69444, 0, 0],\n        \"8242\": [0, 0.55556, 0, 0],\n        \"8407\": [0, 0.72444, 0.15486, 0],\n        \"8463\": [0, 0.69444, 0, 0],\n        \"8465\": [0, 0.69444, 0, 0],\n        \"8467\": [0, 0.69444, 0, 0],\n        \"8472\": [0.19444, 0.44444, 0, 0],\n        \"8476\": [0, 0.69444, 0, 0],\n        \"8501\": [0, 0.69444, 0, 0],\n        \"8592\": [-0.10889, 0.39111, 0, 0],\n        \"8593\": [0.19444, 0.69444, 0, 0],\n        \"8594\": [-0.10889, 0.39111, 0, 0],\n        \"8595\": [0.19444, 0.69444, 0, 0],\n        \"8596\": [-0.10889, 0.39111, 0, 0],\n        \"8597\": [0.25, 0.75, 0, 0],\n        \"8598\": [0.19444, 0.69444, 0, 0],\n        \"8599\": [0.19444, 0.69444, 0, 0],\n        \"8600\": [0.19444, 0.69444, 0, 0],\n        \"8601\": [0.19444, 0.69444, 0, 0],\n        \"8636\": [-0.10889, 0.39111, 0, 0],\n        \"8637\": [-0.10889, 0.39111, 0, 0],\n        \"8640\": [-0.10889, 0.39111, 0, 0],\n        \"8641\": [-0.10889, 0.39111, 0, 0],\n        \"8656\": [-0.10889, 0.39111, 0, 0],\n        \"8657\": [0.19444, 0.69444, 0, 0],\n        \"8658\": [-0.10889, 0.39111, 0, 0],\n        \"8659\": [0.19444, 0.69444, 0, 0],\n        \"8660\": [-0.10889, 0.39111, 0, 0],\n        \"8661\": [0.25, 0.75, 0, 0],\n        \"8704\": [0, 0.69444, 0, 0],\n        \"8706\": [0, 0.69444, 0.06389, 0],\n        \"8707\": [0, 0.69444, 0, 0],\n        \"8709\": [0.05556, 0.75, 0, 0],\n        \"8711\": [0, 0.68611, 0, 0],\n        \"8712\": [0.08556, 0.58556, 0, 0],\n        \"8715\": [0.08556, 0.58556, 0, 0],\n        \"8722\": [0.13333, 0.63333, 0, 0],\n        \"8723\": [0.13333, 0.63333, 0, 0],\n        \"8725\": [0.25, 0.75, 0, 0],\n        \"8726\": [0.25, 0.75, 0, 0],\n        \"8727\": [-0.02778, 0.47222, 0, 0],\n        \"8728\": [-0.02639, 0.47361, 0, 0],\n        \"8729\": [-0.02639, 0.47361, 0, 0],\n        \"8730\": [0.18, 0.82, 0, 0],\n        \"8733\": [0, 0.44444, 0, 0],\n        \"8734\": [0, 0.44444, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8739\": [0.25, 0.75, 0, 0],\n        \"8741\": [0.25, 0.75, 0, 0],\n        \"8743\": [0, 0.55556, 0, 0],\n        \"8744\": [0, 0.55556, 0, 0],\n        \"8745\": [0, 0.55556, 0, 0],\n        \"8746\": [0, 0.55556, 0, 0],\n        \"8747\": [0.19444, 0.69444, 0.12778, 0],\n        \"8764\": [-0.10889, 0.39111, 0, 0],\n        \"8768\": [0.19444, 0.69444, 0, 0],\n        \"8771\": [0.00222, 0.50222, 0, 0],\n        \"8776\": [0.02444, 0.52444, 0, 0],\n        \"8781\": [0.00222, 0.50222, 0, 0],\n        \"8801\": [0.00222, 0.50222, 0, 0],\n        \"8804\": [0.19667, 0.69667, 0, 0],\n        \"8805\": [0.19667, 0.69667, 0, 0],\n        \"8810\": [0.08556, 0.58556, 0, 0],\n        \"8811\": [0.08556, 0.58556, 0, 0],\n        \"8826\": [0.08556, 0.58556, 0, 0],\n        \"8827\": [0.08556, 0.58556, 0, 0],\n        \"8834\": [0.08556, 0.58556, 0, 0],\n        \"8835\": [0.08556, 0.58556, 0, 0],\n        \"8838\": [0.19667, 0.69667, 0, 0],\n        \"8839\": [0.19667, 0.69667, 0, 0],\n        \"8846\": [0, 0.55556, 0, 0],\n        \"8849\": [0.19667, 0.69667, 0, 0],\n        \"8850\": [0.19667, 0.69667, 0, 0],\n        \"8851\": [0, 0.55556, 0, 0],\n        \"8852\": [0, 0.55556, 0, 0],\n        \"8853\": [0.13333, 0.63333, 0, 0],\n        \"8854\": [0.13333, 0.63333, 0, 0],\n        \"8855\": [0.13333, 0.63333, 0, 0],\n        \"8856\": [0.13333, 0.63333, 0, 0],\n        \"8857\": [0.13333, 0.63333, 0, 0],\n        \"8866\": [0, 0.69444, 0, 0],\n        \"8867\": [0, 0.69444, 0, 0],\n        \"8868\": [0, 0.69444, 0, 0],\n        \"8869\": [0, 0.69444, 0, 0],\n        \"8900\": [-0.02639, 0.47361, 0, 0],\n        \"8901\": [-0.02639, 0.47361, 0, 0],\n        \"8902\": [-0.02778, 0.47222, 0, 0],\n        \"8968\": [0.25, 0.75, 0, 0],\n        \"8969\": [0.25, 0.75, 0, 0],\n        \"8970\": [0.25, 0.75, 0, 0],\n        \"8971\": [0.25, 0.75, 0, 0],\n        \"8994\": [-0.13889, 0.36111, 0, 0],\n        \"8995\": [-0.13889, 0.36111, 0, 0],\n        \"9651\": [0.19444, 0.69444, 0, 0],\n        \"9657\": [-0.02778, 0.47222, 0, 0],\n        \"9661\": [0.19444, 0.69444, 0, 0],\n        \"9667\": [-0.02778, 0.47222, 0, 0],\n        \"9711\": [0.19444, 0.69444, 0, 0],\n        \"9824\": [0.12963, 0.69444, 0, 0],\n        \"9825\": [0.12963, 0.69444, 0, 0],\n        \"9826\": [0.12963, 0.69444, 0, 0],\n        \"9827\": [0.12963, 0.69444, 0, 0],\n        \"9837\": [0, 0.75, 0, 0],\n        \"9838\": [0.19444, 0.69444, 0, 0],\n        \"9839\": [0.19444, 0.69444, 0, 0],\n        \"10216\": [0.25, 0.75, 0, 0],\n        \"10217\": [0.25, 0.75, 0, 0],\n        \"10815\": [0, 0.68611, 0, 0],\n        \"10927\": [0.19667, 0.69667, 0, 0],\n        \"10928\": [0.19667, 0.69667, 0, 0]\n    },\n    \"Main-Italic\": {\n        \"33\": [0, 0.69444, 0.12417, 0],\n        \"34\": [0, 0.69444, 0.06961, 0],\n        \"35\": [0.19444, 0.69444, 0.06616, 0],\n        \"37\": [0.05556, 0.75, 0.13639, 0],\n        \"38\": [0, 0.69444, 0.09694, 0],\n        \"39\": [0, 0.69444, 0.12417, 0],\n        \"40\": [0.25, 0.75, 0.16194, 0],\n        \"41\": [0.25, 0.75, 0.03694, 0],\n        \"42\": [0, 0.75, 0.14917, 0],\n        \"43\": [0.05667, 0.56167, 0.03694, 0],\n        \"44\": [0.19444, 0.10556, 0, 0],\n        \"45\": [0, 0.43056, 0.02826, 0],\n        \"46\": [0, 0.10556, 0, 0],\n        \"47\": [0.25, 0.75, 0.16194, 0],\n        \"48\": [0, 0.64444, 0.13556, 0],\n        \"49\": [0, 0.64444, 0.13556, 0],\n        \"50\": [0, 0.64444, 0.13556, 0],\n        \"51\": [0, 0.64444, 0.13556, 0],\n        \"52\": [0.19444, 0.64444, 0.13556, 0],\n        \"53\": [0, 0.64444, 0.13556, 0],\n        \"54\": [0, 0.64444, 0.13556, 0],\n        \"55\": [0.19444, 0.64444, 0.13556, 0],\n        \"56\": [0, 0.64444, 0.13556, 0],\n        \"57\": [0, 0.64444, 0.13556, 0],\n        \"58\": [0, 0.43056, 0.0582, 0],\n        \"59\": [0.19444, 0.43056, 0.0582, 0],\n        \"61\": [-0.13313, 0.36687, 0.06616, 0],\n        \"63\": [0, 0.69444, 0.1225, 0],\n        \"64\": [0, 0.69444, 0.09597, 0],\n        \"65\": [0, 0.68333, 0, 0],\n        \"66\": [0, 0.68333, 0.10257, 0],\n        \"67\": [0, 0.68333, 0.14528, 0],\n        \"68\": [0, 0.68333, 0.09403, 0],\n        \"69\": [0, 0.68333, 0.12028, 0],\n        \"70\": [0, 0.68333, 0.13305, 0],\n        \"71\": [0, 0.68333, 0.08722, 0],\n        \"72\": [0, 0.68333, 0.16389, 0],\n        \"73\": [0, 0.68333, 0.15806, 0],\n        \"74\": [0, 0.68333, 0.14028, 0],\n        \"75\": [0, 0.68333, 0.14528, 0],\n        \"76\": [0, 0.68333, 0, 0],\n        \"77\": [0, 0.68333, 0.16389, 0],\n        \"78\": [0, 0.68333, 0.16389, 0],\n        \"79\": [0, 0.68333, 0.09403, 0],\n        \"80\": [0, 0.68333, 0.10257, 0],\n        \"81\": [0.19444, 0.68333, 0.09403, 0],\n        \"82\": [0, 0.68333, 0.03868, 0],\n        \"83\": [0, 0.68333, 0.11972, 0],\n        \"84\": [0, 0.68333, 0.13305, 0],\n        \"85\": [0, 0.68333, 0.16389, 0],\n        \"86\": [0, 0.68333, 0.18361, 0],\n        \"87\": [0, 0.68333, 0.18361, 0],\n        \"88\": [0, 0.68333, 0.15806, 0],\n        \"89\": [0, 0.68333, 0.19383, 0],\n        \"90\": [0, 0.68333, 0.14528, 0],\n        \"91\": [0.25, 0.75, 0.1875, 0],\n        \"93\": [0.25, 0.75, 0.10528, 0],\n        \"94\": [0, 0.69444, 0.06646, 0],\n        \"95\": [0.31, 0.12056, 0.09208, 0],\n        \"97\": [0, 0.43056, 0.07671, 0],\n        \"98\": [0, 0.69444, 0.06312, 0],\n        \"99\": [0, 0.43056, 0.05653, 0],\n        \"100\": [0, 0.69444, 0.10333, 0],\n        \"101\": [0, 0.43056, 0.07514, 0],\n        \"102\": [0.19444, 0.69444, 0.21194, 0],\n        \"103\": [0.19444, 0.43056, 0.08847, 0],\n        \"104\": [0, 0.69444, 0.07671, 0],\n        \"105\": [0, 0.65536, 0.1019, 0],\n        \"106\": [0.19444, 0.65536, 0.14467, 0],\n        \"107\": [0, 0.69444, 0.10764, 0],\n        \"108\": [0, 0.69444, 0.10333, 0],\n        \"109\": [0, 0.43056, 0.07671, 0],\n        \"110\": [0, 0.43056, 0.07671, 0],\n        \"111\": [0, 0.43056, 0.06312, 0],\n        \"112\": [0.19444, 0.43056, 0.06312, 0],\n        \"113\": [0.19444, 0.43056, 0.08847, 0],\n        \"114\": [0, 0.43056, 0.10764, 0],\n        \"115\": [0, 0.43056, 0.08208, 0],\n        \"116\": [0, 0.61508, 0.09486, 0],\n        \"117\": [0, 0.43056, 0.07671, 0],\n        \"118\": [0, 0.43056, 0.10764, 0],\n        \"119\": [0, 0.43056, 0.10764, 0],\n        \"120\": [0, 0.43056, 0.12042, 0],\n        \"121\": [0.19444, 0.43056, 0.08847, 0],\n        \"122\": [0, 0.43056, 0.12292, 0],\n        \"126\": [0.35, 0.31786, 0.11585, 0],\n        \"163\": [0, 0.69444, 0, 0],\n        \"305\": [0, 0.43056, 0, 0.02778],\n        \"567\": [0.19444, 0.43056, 0, 0.08334],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0.09694, 0],\n        \"770\": [0, 0.69444, 0.06646, 0],\n        \"771\": [0, 0.66786, 0.11585, 0],\n        \"772\": [0, 0.56167, 0.10333, 0],\n        \"774\": [0, 0.69444, 0.10806, 0],\n        \"775\": [0, 0.66786, 0.11752, 0],\n        \"776\": [0, 0.66786, 0.10474, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0.1225, 0],\n        \"780\": [0, 0.62847, 0.08295, 0],\n        \"915\": [0, 0.68333, 0.13305, 0],\n        \"916\": [0, 0.68333, 0, 0],\n        \"920\": [0, 0.68333, 0.09403, 0],\n        \"923\": [0, 0.68333, 0, 0],\n        \"926\": [0, 0.68333, 0.15294, 0],\n        \"928\": [0, 0.68333, 0.16389, 0],\n        \"931\": [0, 0.68333, 0.12028, 0],\n        \"933\": [0, 0.68333, 0.11111, 0],\n        \"934\": [0, 0.68333, 0.05986, 0],\n        \"936\": [0, 0.68333, 0.11111, 0],\n        \"937\": [0, 0.68333, 0.10257, 0],\n        \"8211\": [0, 0.43056, 0.09208, 0],\n        \"8212\": [0, 0.43056, 0.09208, 0],\n        \"8216\": [0, 0.69444, 0.12417, 0],\n        \"8217\": [0, 0.69444, 0.12417, 0],\n        \"8220\": [0, 0.69444, 0.1685, 0],\n        \"8221\": [0, 0.69444, 0.06961, 0],\n        \"8463\": [0, 0.68889, 0, 0]\n    },\n    \"Main-Regular\": {\n        \"32\": [0, 0, 0, 0],\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.08333, 0.58333, 0, 0],\n        \"44\": [0.19444, 0.10556, 0, 0],\n        \"45\": [0, 0.43056, 0, 0],\n        \"46\": [0, 0.10556, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.64444, 0, 0],\n        \"49\": [0, 0.64444, 0, 0],\n        \"50\": [0, 0.64444, 0, 0],\n        \"51\": [0, 0.64444, 0, 0],\n        \"52\": [0, 0.64444, 0, 0],\n        \"53\": [0, 0.64444, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0, 0.64444, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0, 0.64444, 0, 0],\n        \"58\": [0, 0.43056, 0, 0],\n        \"59\": [0.19444, 0.43056, 0, 0],\n        \"60\": [0.0391, 0.5391, 0, 0],\n        \"61\": [-0.13313, 0.36687, 0, 0],\n        \"62\": [0.0391, 0.5391, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.68333, 0, 0],\n        \"66\": [0, 0.68333, 0, 0],\n        \"67\": [0, 0.68333, 0, 0],\n        \"68\": [0, 0.68333, 0, 0],\n        \"69\": [0, 0.68333, 0, 0],\n        \"70\": [0, 0.68333, 0, 0],\n        \"71\": [0, 0.68333, 0, 0],\n        \"72\": [0, 0.68333, 0, 0],\n        \"73\": [0, 0.68333, 0, 0],\n        \"74\": [0, 0.68333, 0, 0],\n        \"75\": [0, 0.68333, 0, 0],\n        \"76\": [0, 0.68333, 0, 0],\n        \"77\": [0, 0.68333, 0, 0],\n        \"78\": [0, 0.68333, 0, 0],\n        \"79\": [0, 0.68333, 0, 0],\n        \"80\": [0, 0.68333, 0, 0],\n        \"81\": [0.19444, 0.68333, 0, 0],\n        \"82\": [0, 0.68333, 0, 0],\n        \"83\": [0, 0.68333, 0, 0],\n        \"84\": [0, 0.68333, 0, 0],\n        \"85\": [0, 0.68333, 0, 0],\n        \"86\": [0, 0.68333, 0.01389, 0],\n        \"87\": [0, 0.68333, 0.01389, 0],\n        \"88\": [0, 0.68333, 0, 0],\n        \"89\": [0, 0.68333, 0.025, 0],\n        \"90\": [0, 0.68333, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"92\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.31, 0.12056, 0.02778, 0],\n        \"96\": [0, 0.69444, 0, 0],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.43056, 0, 0],\n        \"102\": [0, 0.69444, 0.07778, 0],\n        \"103\": [0.19444, 0.43056, 0.01389, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.66786, 0, 0],\n        \"106\": [0.19444, 0.66786, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0],\n        \"112\": [0.19444, 0.43056, 0, 0],\n        \"113\": [0.19444, 0.43056, 0, 0],\n        \"114\": [0, 0.43056, 0, 0],\n        \"115\": [0, 0.43056, 0, 0],\n        \"116\": [0, 0.61508, 0, 0],\n        \"117\": [0, 0.43056, 0, 0],\n        \"118\": [0, 0.43056, 0.01389, 0],\n        \"119\": [0, 0.43056, 0.01389, 0],\n        \"120\": [0, 0.43056, 0, 0],\n        \"121\": [0.19444, 0.43056, 0.01389, 0],\n        \"122\": [0, 0.43056, 0, 0],\n        \"123\": [0.25, 0.75, 0, 0],\n        \"124\": [0.25, 0.75, 0, 0],\n        \"125\": [0.25, 0.75, 0, 0],\n        \"126\": [0.35, 0.31786, 0, 0],\n        \"160\": [0, 0, 0, 0],\n        \"168\": [0, 0.66786, 0, 0],\n        \"172\": [0, 0.43056, 0, 0],\n        \"175\": [0, 0.56778, 0, 0],\n        \"176\": [0, 0.69444, 0, 0],\n        \"177\": [0.08333, 0.58333, 0, 0],\n        \"180\": [0, 0.69444, 0, 0],\n        \"215\": [0.08333, 0.58333, 0, 0],\n        \"247\": [0.08333, 0.58333, 0, 0],\n        \"305\": [0, 0.43056, 0, 0],\n        \"567\": [0.19444, 0.43056, 0, 0],\n        \"710\": [0, 0.69444, 0, 0],\n        \"711\": [0, 0.62847, 0, 0],\n        \"713\": [0, 0.56778, 0, 0],\n        \"714\": [0, 0.69444, 0, 0],\n        \"715\": [0, 0.69444, 0, 0],\n        \"728\": [0, 0.69444, 0, 0],\n        \"729\": [0, 0.66786, 0, 0],\n        \"730\": [0, 0.69444, 0, 0],\n        \"732\": [0, 0.66786, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.66786, 0, 0],\n        \"772\": [0, 0.56778, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.66786, 0, 0],\n        \"776\": [0, 0.66786, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.62847, 0, 0],\n        \"824\": [0.19444, 0.69444, 0, 0],\n        \"915\": [0, 0.68333, 0, 0],\n        \"916\": [0, 0.68333, 0, 0],\n        \"920\": [0, 0.68333, 0, 0],\n        \"923\": [0, 0.68333, 0, 0],\n        \"926\": [0, 0.68333, 0, 0],\n        \"928\": [0, 0.68333, 0, 0],\n        \"931\": [0, 0.68333, 0, 0],\n        \"933\": [0, 0.68333, 0, 0],\n        \"934\": [0, 0.68333, 0, 0],\n        \"936\": [0, 0.68333, 0, 0],\n        \"937\": [0, 0.68333, 0, 0],\n        \"8211\": [0, 0.43056, 0.02778, 0],\n        \"8212\": [0, 0.43056, 0.02778, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n        \"8224\": [0.19444, 0.69444, 0, 0],\n        \"8225\": [0.19444, 0.69444, 0, 0],\n        \"8230\": [0, 0.12, 0, 0],\n        \"8242\": [0, 0.55556, 0, 0],\n        \"8407\": [0, 0.71444, 0.15382, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n        \"8465\": [0, 0.69444, 0, 0],\n        \"8467\": [0, 0.69444, 0, 0.11111],\n        \"8472\": [0.19444, 0.43056, 0, 0.11111],\n        \"8476\": [0, 0.69444, 0, 0],\n        \"8501\": [0, 0.69444, 0, 0],\n        \"8592\": [-0.13313, 0.36687, 0, 0],\n        \"8593\": [0.19444, 0.69444, 0, 0],\n        \"8594\": [-0.13313, 0.36687, 0, 0],\n        \"8595\": [0.19444, 0.69444, 0, 0],\n        \"8596\": [-0.13313, 0.36687, 0, 0],\n        \"8597\": [0.25, 0.75, 0, 0],\n        \"8598\": [0.19444, 0.69444, 0, 0],\n        \"8599\": [0.19444, 0.69444, 0, 0],\n        \"8600\": [0.19444, 0.69444, 0, 0],\n        \"8601\": [0.19444, 0.69444, 0, 0],\n        \"8614\": [0.011, 0.511, 0, 0],\n        \"8617\": [0.011, 0.511, 0, 0],\n        \"8618\": [0.011, 0.511, 0, 0],\n        \"8636\": [-0.13313, 0.36687, 0, 0],\n        \"8637\": [-0.13313, 0.36687, 0, 0],\n        \"8640\": [-0.13313, 0.36687, 0, 0],\n        \"8641\": [-0.13313, 0.36687, 0, 0],\n        \"8652\": [0.011, 0.671, 0, 0],\n        \"8656\": [-0.13313, 0.36687, 0, 0],\n        \"8657\": [0.19444, 0.69444, 0, 0],\n        \"8658\": [-0.13313, 0.36687, 0, 0],\n        \"8659\": [0.19444, 0.69444, 0, 0],\n        \"8660\": [-0.13313, 0.36687, 0, 0],\n        \"8661\": [0.25, 0.75, 0, 0],\n        \"8704\": [0, 0.69444, 0, 0],\n        \"8706\": [0, 0.69444, 0.05556, 0.08334],\n        \"8707\": [0, 0.69444, 0, 0],\n        \"8709\": [0.05556, 0.75, 0, 0],\n        \"8711\": [0, 0.68333, 0, 0],\n        \"8712\": [0.0391, 0.5391, 0, 0],\n        \"8715\": [0.0391, 0.5391, 0, 0],\n        \"8722\": [0.08333, 0.58333, 0, 0],\n        \"8723\": [0.08333, 0.58333, 0, 0],\n        \"8725\": [0.25, 0.75, 0, 0],\n        \"8726\": [0.25, 0.75, 0, 0],\n        \"8727\": [-0.03472, 0.46528, 0, 0],\n        \"8728\": [-0.05555, 0.44445, 0, 0],\n        \"8729\": [-0.05555, 0.44445, 0, 0],\n        \"8730\": [0.2, 0.8, 0, 0],\n        \"8733\": [0, 0.43056, 0, 0],\n        \"8734\": [0, 0.43056, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8739\": [0.25, 0.75, 0, 0],\n        \"8741\": [0.25, 0.75, 0, 0],\n        \"8743\": [0, 0.55556, 0, 0],\n        \"8744\": [0, 0.55556, 0, 0],\n        \"8745\": [0, 0.55556, 0, 0],\n        \"8746\": [0, 0.55556, 0, 0],\n        \"8747\": [0.19444, 0.69444, 0.11111, 0],\n        \"8764\": [-0.13313, 0.36687, 0, 0],\n        \"8768\": [0.19444, 0.69444, 0, 0],\n        \"8771\": [-0.03625, 0.46375, 0, 0],\n        \"8773\": [-0.022, 0.589, 0, 0],\n        \"8776\": [-0.01688, 0.48312, 0, 0],\n        \"8781\": [-0.03625, 0.46375, 0, 0],\n        \"8784\": [-0.133, 0.67, 0, 0],\n        \"8800\": [0.215, 0.716, 0, 0],\n        \"8801\": [-0.03625, 0.46375, 0, 0],\n        \"8804\": [0.13597, 0.63597, 0, 0],\n        \"8805\": [0.13597, 0.63597, 0, 0],\n        \"8810\": [0.0391, 0.5391, 0, 0],\n        \"8811\": [0.0391, 0.5391, 0, 0],\n        \"8826\": [0.0391, 0.5391, 0, 0],\n        \"8827\": [0.0391, 0.5391, 0, 0],\n        \"8834\": [0.0391, 0.5391, 0, 0],\n        \"8835\": [0.0391, 0.5391, 0, 0],\n        \"8838\": [0.13597, 0.63597, 0, 0],\n        \"8839\": [0.13597, 0.63597, 0, 0],\n        \"8846\": [0, 0.55556, 0, 0],\n        \"8849\": [0.13597, 0.63597, 0, 0],\n        \"8850\": [0.13597, 0.63597, 0, 0],\n        \"8851\": [0, 0.55556, 0, 0],\n        \"8852\": [0, 0.55556, 0, 0],\n        \"8853\": [0.08333, 0.58333, 0, 0],\n        \"8854\": [0.08333, 0.58333, 0, 0],\n        \"8855\": [0.08333, 0.58333, 0, 0],\n        \"8856\": [0.08333, 0.58333, 0, 0],\n        \"8857\": [0.08333, 0.58333, 0, 0],\n        \"8866\": [0, 0.69444, 0, 0],\n        \"8867\": [0, 0.69444, 0, 0],\n        \"8868\": [0, 0.69444, 0, 0],\n        \"8869\": [0, 0.69444, 0, 0],\n        \"8872\": [0.249, 0.75, 0, 0],\n        \"8900\": [-0.05555, 0.44445, 0, 0],\n        \"8901\": [-0.05555, 0.44445, 0, 0],\n        \"8902\": [-0.03472, 0.46528, 0, 0],\n        \"8904\": [0.005, 0.505, 0, 0],\n        \"8942\": [0.03, 0.9, 0, 0],\n        \"8943\": [-0.19, 0.31, 0, 0],\n        \"8945\": [-0.1, 0.82, 0, 0],\n        \"8968\": [0.25, 0.75, 0, 0],\n        \"8969\": [0.25, 0.75, 0, 0],\n        \"8970\": [0.25, 0.75, 0, 0],\n        \"8971\": [0.25, 0.75, 0, 0],\n        \"8994\": [-0.14236, 0.35764, 0, 0],\n        \"8995\": [-0.14236, 0.35764, 0, 0],\n        \"9136\": [0.244, 0.744, 0, 0],\n        \"9137\": [0.244, 0.744, 0, 0],\n        \"9651\": [0.19444, 0.69444, 0, 0],\n        \"9657\": [-0.03472, 0.46528, 0, 0],\n        \"9661\": [0.19444, 0.69444, 0, 0],\n        \"9667\": [-0.03472, 0.46528, 0, 0],\n        \"9711\": [0.19444, 0.69444, 0, 0],\n        \"9824\": [0.12963, 0.69444, 0, 0],\n        \"9825\": [0.12963, 0.69444, 0, 0],\n        \"9826\": [0.12963, 0.69444, 0, 0],\n        \"9827\": [0.12963, 0.69444, 0, 0],\n        \"9837\": [0, 0.75, 0, 0],\n        \"9838\": [0.19444, 0.69444, 0, 0],\n        \"9839\": [0.19444, 0.69444, 0, 0],\n        \"10216\": [0.25, 0.75, 0, 0],\n        \"10217\": [0.25, 0.75, 0, 0],\n        \"10222\": [0.244, 0.744, 0, 0],\n        \"10223\": [0.244, 0.744, 0, 0],\n        \"10229\": [0.011, 0.511, 0, 0],\n        \"10230\": [0.011, 0.511, 0, 0],\n        \"10231\": [0.011, 0.511, 0, 0],\n        \"10232\": [0.024, 0.525, 0, 0],\n        \"10233\": [0.024, 0.525, 0, 0],\n        \"10234\": [0.024, 0.525, 0, 0],\n        \"10236\": [0.011, 0.511, 0, 0],\n        \"10815\": [0, 0.68333, 0, 0],\n        \"10927\": [0.13597, 0.63597, 0, 0],\n        \"10928\": [0.13597, 0.63597, 0, 0]\n    },\n    \"Math-BoldItalic\": {\n        \"47\": [0.19444, 0.69444, 0, 0],\n        \"65\": [0, 0.68611, 0, 0],\n        \"66\": [0, 0.68611, 0.04835, 0],\n        \"67\": [0, 0.68611, 0.06979, 0],\n        \"68\": [0, 0.68611, 0.03194, 0],\n        \"69\": [0, 0.68611, 0.05451, 0],\n        \"70\": [0, 0.68611, 0.15972, 0],\n        \"71\": [0, 0.68611, 0, 0],\n        \"72\": [0, 0.68611, 0.08229, 0],\n        \"73\": [0, 0.68611, 0.07778, 0],\n        \"74\": [0, 0.68611, 0.10069, 0],\n        \"75\": [0, 0.68611, 0.06979, 0],\n        \"76\": [0, 0.68611, 0, 0],\n        \"77\": [0, 0.68611, 0.11424, 0],\n        \"78\": [0, 0.68611, 0.11424, 0],\n        \"79\": [0, 0.68611, 0.03194, 0],\n        \"80\": [0, 0.68611, 0.15972, 0],\n        \"81\": [0.19444, 0.68611, 0, 0],\n        \"82\": [0, 0.68611, 0.00421, 0],\n        \"83\": [0, 0.68611, 0.05382, 0],\n        \"84\": [0, 0.68611, 0.15972, 0],\n        \"85\": [0, 0.68611, 0.11424, 0],\n        \"86\": [0, 0.68611, 0.25555, 0],\n        \"87\": [0, 0.68611, 0.15972, 0],\n        \"88\": [0, 0.68611, 0.07778, 0],\n        \"89\": [0, 0.68611, 0.25555, 0],\n        \"90\": [0, 0.68611, 0.06979, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0.19444, 0.69444, 0.11042, 0],\n        \"103\": [0.19444, 0.44444, 0.03704, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.69326, 0, 0],\n        \"106\": [0.19444, 0.69326, 0.0622, 0],\n        \"107\": [0, 0.69444, 0.01852, 0],\n        \"108\": [0, 0.69444, 0.0088, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0.03704, 0],\n        \"114\": [0, 0.44444, 0.03194, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.63492, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.03704, 0],\n        \"119\": [0, 0.44444, 0.02778, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.03704, 0],\n        \"122\": [0, 0.44444, 0.04213, 0],\n        \"915\": [0, 0.68611, 0.15972, 0],\n        \"916\": [0, 0.68611, 0, 0],\n        \"920\": [0, 0.68611, 0.03194, 0],\n        \"923\": [0, 0.68611, 0, 0],\n        \"926\": [0, 0.68611, 0.07458, 0],\n        \"928\": [0, 0.68611, 0.08229, 0],\n        \"931\": [0, 0.68611, 0.05451, 0],\n        \"933\": [0, 0.68611, 0.15972, 0],\n        \"934\": [0, 0.68611, 0, 0],\n        \"936\": [0, 0.68611, 0.11653, 0],\n        \"937\": [0, 0.68611, 0.04835, 0],\n        \"945\": [0, 0.44444, 0, 0],\n        \"946\": [0.19444, 0.69444, 0.03403, 0],\n        \"947\": [0.19444, 0.44444, 0.06389, 0],\n        \"948\": [0, 0.69444, 0.03819, 0],\n        \"949\": [0, 0.44444, 0, 0],\n        \"950\": [0.19444, 0.69444, 0.06215, 0],\n        \"951\": [0.19444, 0.44444, 0.03704, 0],\n        \"952\": [0, 0.69444, 0.03194, 0],\n        \"953\": [0, 0.44444, 0, 0],\n        \"954\": [0, 0.44444, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.44444, 0, 0],\n        \"957\": [0, 0.44444, 0.06898, 0],\n        \"958\": [0.19444, 0.69444, 0.03021, 0],\n        \"959\": [0, 0.44444, 0, 0],\n        \"960\": [0, 0.44444, 0.03704, 0],\n        \"961\": [0.19444, 0.44444, 0, 0],\n        \"962\": [0.09722, 0.44444, 0.07917, 0],\n        \"963\": [0, 0.44444, 0.03704, 0],\n        \"964\": [0, 0.44444, 0.13472, 0],\n        \"965\": [0, 0.44444, 0.03704, 0],\n        \"966\": [0.19444, 0.44444, 0, 0],\n        \"967\": [0.19444, 0.44444, 0, 0],\n        \"968\": [0.19444, 0.69444, 0.03704, 0],\n        \"969\": [0, 0.44444, 0.03704, 0],\n        \"977\": [0, 0.69444, 0, 0],\n        \"981\": [0.19444, 0.69444, 0, 0],\n        \"982\": [0, 0.44444, 0.03194, 0],\n        \"1009\": [0.19444, 0.44444, 0, 0],\n        \"1013\": [0, 0.44444, 0, 0]\n    },\n    \"Math-Italic\": {\n        \"47\": [0.19444, 0.69444, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.13889],\n        \"66\": [0, 0.68333, 0.05017, 0.08334],\n        \"67\": [0, 0.68333, 0.07153, 0.08334],\n        \"68\": [0, 0.68333, 0.02778, 0.05556],\n        \"69\": [0, 0.68333, 0.05764, 0.08334],\n        \"70\": [0, 0.68333, 0.13889, 0.08334],\n        \"71\": [0, 0.68333, 0, 0.08334],\n        \"72\": [0, 0.68333, 0.08125, 0.05556],\n        \"73\": [0, 0.68333, 0.07847, 0.11111],\n        \"74\": [0, 0.68333, 0.09618, 0.16667],\n        \"75\": [0, 0.68333, 0.07153, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.02778],\n        \"77\": [0, 0.68333, 0.10903, 0.08334],\n        \"78\": [0, 0.68333, 0.10903, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.08334],\n        \"80\": [0, 0.68333, 0.13889, 0.08334],\n        \"81\": [0.19444, 0.68333, 0, 0.08334],\n        \"82\": [0, 0.68333, 0.00773, 0.08334],\n        \"83\": [0, 0.68333, 0.05764, 0.08334],\n        \"84\": [0, 0.68333, 0.13889, 0.08334],\n        \"85\": [0, 0.68333, 0.10903, 0.02778],\n        \"86\": [0, 0.68333, 0.22222, 0],\n        \"87\": [0, 0.68333, 0.13889, 0],\n        \"88\": [0, 0.68333, 0.07847, 0.08334],\n        \"89\": [0, 0.68333, 0.22222, 0],\n        \"90\": [0, 0.68333, 0.07153, 0.08334],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0.05556],\n        \"100\": [0, 0.69444, 0, 0.16667],\n        \"101\": [0, 0.43056, 0, 0.05556],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.65952, 0, 0],\n        \"106\": [0.19444, 0.65952, 0.05724, 0],\n        \"107\": [0, 0.69444, 0.03148, 0],\n        \"108\": [0, 0.69444, 0.01968, 0.08334],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0.05556],\n        \"112\": [0.19444, 0.43056, 0, 0.08334],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],\n        \"114\": [0, 0.43056, 0.02778, 0.05556],\n        \"115\": [0, 0.43056, 0, 0.05556],\n        \"116\": [0, 0.61508, 0, 0.08334],\n        \"117\": [0, 0.43056, 0, 0.02778],\n        \"118\": [0, 0.43056, 0.03588, 0.02778],\n        \"119\": [0, 0.43056, 0.02691, 0.08334],\n        \"120\": [0, 0.43056, 0, 0.02778],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"122\": [0, 0.43056, 0.04398, 0.05556],\n        \"915\": [0, 0.68333, 0.13889, 0.08334],\n        \"916\": [0, 0.68333, 0, 0.16667],\n        \"920\": [0, 0.68333, 0.02778, 0.08334],\n        \"923\": [0, 0.68333, 0, 0.16667],\n        \"926\": [0, 0.68333, 0.07569, 0.08334],\n        \"928\": [0, 0.68333, 0.08125, 0.05556],\n        \"931\": [0, 0.68333, 0.05764, 0.08334],\n        \"933\": [0, 0.68333, 0.13889, 0.05556],\n        \"934\": [0, 0.68333, 0, 0.08334],\n        \"936\": [0, 0.68333, 0.11, 0.05556],\n        \"937\": [0, 0.68333, 0.05017, 0.08334],\n        \"945\": [0, 0.43056, 0.0037, 0.02778],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],\n        \"947\": [0.19444, 0.43056, 0.05556, 0],\n        \"948\": [0, 0.69444, 0.03785, 0.05556],\n        \"949\": [0, 0.43056, 0, 0.08334],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"952\": [0, 0.69444, 0.02778, 0.08334],\n        \"953\": [0, 0.43056, 0, 0.05556],\n        \"954\": [0, 0.43056, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.43056, 0, 0.02778],\n        \"957\": [0, 0.43056, 0.06366, 0.02778],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],\n        \"959\": [0, 0.43056, 0, 0.05556],\n        \"960\": [0, 0.43056, 0.03588, 0],\n        \"961\": [0.19444, 0.43056, 0, 0.08334],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],\n        \"963\": [0, 0.43056, 0.03588, 0],\n        \"964\": [0, 0.43056, 0.1132, 0.02778],\n        \"965\": [0, 0.43056, 0.03588, 0.02778],\n        \"966\": [0.19444, 0.43056, 0, 0.08334],\n        \"967\": [0.19444, 0.43056, 0, 0.05556],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],\n        \"969\": [0, 0.43056, 0.03588, 0],\n        \"977\": [0, 0.69444, 0, 0.08334],\n        \"981\": [0.19444, 0.69444, 0, 0.08334],\n        \"982\": [0, 0.43056, 0.02778, 0],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334],\n        \"1013\": [0, 0.43056, 0, 0.05556]\n    },\n    \"Math-Regular\": {\n        \"65\": [0, 0.68333, 0, 0.13889],\n        \"66\": [0, 0.68333, 0.05017, 0.08334],\n        \"67\": [0, 0.68333, 0.07153, 0.08334],\n        \"68\": [0, 0.68333, 0.02778, 0.05556],\n        \"69\": [0, 0.68333, 0.05764, 0.08334],\n        \"70\": [0, 0.68333, 0.13889, 0.08334],\n        \"71\": [0, 0.68333, 0, 0.08334],\n        \"72\": [0, 0.68333, 0.08125, 0.05556],\n        \"73\": [0, 0.68333, 0.07847, 0.11111],\n        \"74\": [0, 0.68333, 0.09618, 0.16667],\n        \"75\": [0, 0.68333, 0.07153, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.02778],\n        \"77\": [0, 0.68333, 0.10903, 0.08334],\n        \"78\": [0, 0.68333, 0.10903, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.08334],\n        \"80\": [0, 0.68333, 0.13889, 0.08334],\n        \"81\": [0.19444, 0.68333, 0, 0.08334],\n        \"82\": [0, 0.68333, 0.00773, 0.08334],\n        \"83\": [0, 0.68333, 0.05764, 0.08334],\n        \"84\": [0, 0.68333, 0.13889, 0.08334],\n        \"85\": [0, 0.68333, 0.10903, 0.02778],\n        \"86\": [0, 0.68333, 0.22222, 0],\n        \"87\": [0, 0.68333, 0.13889, 0],\n        \"88\": [0, 0.68333, 0.07847, 0.08334],\n        \"89\": [0, 0.68333, 0.22222, 0],\n        \"90\": [0, 0.68333, 0.07153, 0.08334],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0.05556],\n        \"100\": [0, 0.69444, 0, 0.16667],\n        \"101\": [0, 0.43056, 0, 0.05556],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.65952, 0, 0],\n        \"106\": [0.19444, 0.65952, 0.05724, 0],\n        \"107\": [0, 0.69444, 0.03148, 0],\n        \"108\": [0, 0.69444, 0.01968, 0.08334],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0.05556],\n        \"112\": [0.19444, 0.43056, 0, 0.08334],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],\n        \"114\": [0, 0.43056, 0.02778, 0.05556],\n        \"115\": [0, 0.43056, 0, 0.05556],\n        \"116\": [0, 0.61508, 0, 0.08334],\n        \"117\": [0, 0.43056, 0, 0.02778],\n        \"118\": [0, 0.43056, 0.03588, 0.02778],\n        \"119\": [0, 0.43056, 0.02691, 0.08334],\n        \"120\": [0, 0.43056, 0, 0.02778],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"122\": [0, 0.43056, 0.04398, 0.05556],\n        \"915\": [0, 0.68333, 0.13889, 0.08334],\n        \"916\": [0, 0.68333, 0, 0.16667],\n        \"920\": [0, 0.68333, 0.02778, 0.08334],\n        \"923\": [0, 0.68333, 0, 0.16667],\n        \"926\": [0, 0.68333, 0.07569, 0.08334],\n        \"928\": [0, 0.68333, 0.08125, 0.05556],\n        \"931\": [0, 0.68333, 0.05764, 0.08334],\n        \"933\": [0, 0.68333, 0.13889, 0.05556],\n        \"934\": [0, 0.68333, 0, 0.08334],\n        \"936\": [0, 0.68333, 0.11, 0.05556],\n        \"937\": [0, 0.68333, 0.05017, 0.08334],\n        \"945\": [0, 0.43056, 0.0037, 0.02778],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],\n        \"947\": [0.19444, 0.43056, 0.05556, 0],\n        \"948\": [0, 0.69444, 0.03785, 0.05556],\n        \"949\": [0, 0.43056, 0, 0.08334],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"952\": [0, 0.69444, 0.02778, 0.08334],\n        \"953\": [0, 0.43056, 0, 0.05556],\n        \"954\": [0, 0.43056, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.43056, 0, 0.02778],\n        \"957\": [0, 0.43056, 0.06366, 0.02778],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],\n        \"959\": [0, 0.43056, 0, 0.05556],\n        \"960\": [0, 0.43056, 0.03588, 0],\n        \"961\": [0.19444, 0.43056, 0, 0.08334],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],\n        \"963\": [0, 0.43056, 0.03588, 0],\n        \"964\": [0, 0.43056, 0.1132, 0.02778],\n        \"965\": [0, 0.43056, 0.03588, 0.02778],\n        \"966\": [0.19444, 0.43056, 0, 0.08334],\n        \"967\": [0.19444, 0.43056, 0, 0.05556],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],\n        \"969\": [0, 0.43056, 0.03588, 0],\n        \"977\": [0, 0.69444, 0, 0.08334],\n        \"981\": [0.19444, 0.69444, 0, 0.08334],\n        \"982\": [0, 0.43056, 0.02778, 0],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334],\n        \"1013\": [0, 0.43056, 0, 0.05556]\n    },\n    \"SansSerif-Regular\": {\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.08333, 0.58333, 0, 0],\n        \"44\": [0.125, 0.08333, 0, 0],\n        \"45\": [0, 0.44444, 0, 0],\n        \"46\": [0, 0.08333, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.65556, 0, 0],\n        \"49\": [0, 0.65556, 0, 0],\n        \"50\": [0, 0.65556, 0, 0],\n        \"51\": [0, 0.65556, 0, 0],\n        \"52\": [0, 0.65556, 0, 0],\n        \"53\": [0, 0.65556, 0, 0],\n        \"54\": [0, 0.65556, 0, 0],\n        \"55\": [0, 0.65556, 0, 0],\n        \"56\": [0, 0.65556, 0, 0],\n        \"57\": [0, 0.65556, 0, 0],\n        \"58\": [0, 0.44444, 0, 0],\n        \"59\": [0.125, 0.44444, 0, 0],\n        \"61\": [-0.13, 0.37, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.69444, 0, 0],\n        \"66\": [0, 0.69444, 0, 0],\n        \"67\": [0, 0.69444, 0, 0],\n        \"68\": [0, 0.69444, 0, 0],\n        \"69\": [0, 0.69444, 0, 0],\n        \"70\": [0, 0.69444, 0, 0],\n        \"71\": [0, 0.69444, 0, 0],\n        \"72\": [0, 0.69444, 0, 0],\n        \"73\": [0, 0.69444, 0, 0],\n        \"74\": [0, 0.69444, 0, 0],\n        \"75\": [0, 0.69444, 0, 0],\n        \"76\": [0, 0.69444, 0, 0],\n        \"77\": [0, 0.69444, 0, 0],\n        \"78\": [0, 0.69444, 0, 0],\n        \"79\": [0, 0.69444, 0, 0],\n        \"80\": [0, 0.69444, 0, 0],\n        \"81\": [0.125, 0.69444, 0, 0],\n        \"82\": [0, 0.69444, 0, 0],\n        \"83\": [0, 0.69444, 0, 0],\n        \"84\": [0, 0.69444, 0, 0],\n        \"85\": [0, 0.69444, 0, 0],\n        \"86\": [0, 0.69444, 0.01389, 0],\n        \"87\": [0, 0.69444, 0.01389, 0],\n        \"88\": [0, 0.69444, 0, 0],\n        \"89\": [0, 0.69444, 0.025, 0],\n        \"90\": [0, 0.69444, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.35, 0.09444, 0.02778, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0, 0.69444, 0.06944, 0],\n        \"103\": [0.19444, 0.44444, 0.01389, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.67937, 0, 0],\n        \"106\": [0.19444, 0.67937, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0, 0],\n        \"114\": [0, 0.44444, 0.01389, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.57143, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.01389, 0],\n        \"119\": [0, 0.44444, 0.01389, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.01389, 0],\n        \"122\": [0, 0.44444, 0, 0],\n        \"126\": [0.35, 0.32659, 0, 0],\n        \"305\": [0, 0.44444, 0, 0],\n        \"567\": [0.19444, 0.44444, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.67659, 0, 0],\n        \"772\": [0, 0.60889, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.67937, 0, 0],\n        \"776\": [0, 0.67937, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.63194, 0, 0],\n        \"915\": [0, 0.69444, 0, 0],\n        \"916\": [0, 0.69444, 0, 0],\n        \"920\": [0, 0.69444, 0, 0],\n        \"923\": [0, 0.69444, 0, 0],\n        \"926\": [0, 0.69444, 0, 0],\n        \"928\": [0, 0.69444, 0, 0],\n        \"931\": [0, 0.69444, 0, 0],\n        \"933\": [0, 0.69444, 0, 0],\n        \"934\": [0, 0.69444, 0, 0],\n        \"936\": [0, 0.69444, 0, 0],\n        \"937\": [0, 0.69444, 0, 0],\n        \"8211\": [0, 0.44444, 0.02778, 0],\n        \"8212\": [0, 0.44444, 0.02778, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0]\n    },\n    \"Script-Regular\": {\n        \"65\": [0, 0.7, 0.22925, 0],\n        \"66\": [0, 0.7, 0.04087, 0],\n        \"67\": [0, 0.7, 0.1689, 0],\n        \"68\": [0, 0.7, 0.09371, 0],\n        \"69\": [0, 0.7, 0.18583, 0],\n        \"70\": [0, 0.7, 0.13634, 0],\n        \"71\": [0, 0.7, 0.17322, 0],\n        \"72\": [0, 0.7, 0.29694, 0],\n        \"73\": [0, 0.7, 0.19189, 0],\n        \"74\": [0.27778, 0.7, 0.19189, 0],\n        \"75\": [0, 0.7, 0.31259, 0],\n        \"76\": [0, 0.7, 0.19189, 0],\n        \"77\": [0, 0.7, 0.15981, 0],\n        \"78\": [0, 0.7, 0.3525, 0],\n        \"79\": [0, 0.7, 0.08078, 0],\n        \"80\": [0, 0.7, 0.08078, 0],\n        \"81\": [0, 0.7, 0.03305, 0],\n        \"82\": [0, 0.7, 0.06259, 0],\n        \"83\": [0, 0.7, 0.19189, 0],\n        \"84\": [0, 0.7, 0.29087, 0],\n        \"85\": [0, 0.7, 0.25815, 0],\n        \"86\": [0, 0.7, 0.27523, 0],\n        \"87\": [0, 0.7, 0.27523, 0],\n        \"88\": [0, 0.7, 0.26006, 0],\n        \"89\": [0, 0.7, 0.2939, 0],\n        \"90\": [0, 0.7, 0.24037, 0]\n    },\n    \"Size1-Regular\": {\n        \"40\": [0.35001, 0.85, 0, 0],\n        \"41\": [0.35001, 0.85, 0, 0],\n        \"47\": [0.35001, 0.85, 0, 0],\n        \"91\": [0.35001, 0.85, 0, 0],\n        \"92\": [0.35001, 0.85, 0, 0],\n        \"93\": [0.35001, 0.85, 0, 0],\n        \"123\": [0.35001, 0.85, 0, 0],\n        \"125\": [0.35001, 0.85, 0, 0],\n        \"710\": [0, 0.72222, 0, 0],\n        \"732\": [0, 0.72222, 0, 0],\n        \"770\": [0, 0.72222, 0, 0],\n        \"771\": [0, 0.72222, 0, 0],\n        \"8214\": [-0.00099, 0.601, 0, 0],\n        \"8593\": [1e-05, 0.6, 0, 0],\n        \"8595\": [1e-05, 0.6, 0, 0],\n        \"8657\": [1e-05, 0.6, 0, 0],\n        \"8659\": [1e-05, 0.6, 0, 0],\n        \"8719\": [0.25001, 0.75, 0, 0],\n        \"8720\": [0.25001, 0.75, 0, 0],\n        \"8721\": [0.25001, 0.75, 0, 0],\n        \"8730\": [0.35001, 0.85, 0, 0],\n        \"8739\": [-0.00599, 0.606, 0, 0],\n        \"8741\": [-0.00599, 0.606, 0, 0],\n        \"8747\": [0.30612, 0.805, 0.19445, 0],\n        \"8748\": [0.306, 0.805, 0.19445, 0],\n        \"8749\": [0.306, 0.805, 0.19445, 0],\n        \"8750\": [0.30612, 0.805, 0.19445, 0],\n        \"8896\": [0.25001, 0.75, 0, 0],\n        \"8897\": [0.25001, 0.75, 0, 0],\n        \"8898\": [0.25001, 0.75, 0, 0],\n        \"8899\": [0.25001, 0.75, 0, 0],\n        \"8968\": [0.35001, 0.85, 0, 0],\n        \"8969\": [0.35001, 0.85, 0, 0],\n        \"8970\": [0.35001, 0.85, 0, 0],\n        \"8971\": [0.35001, 0.85, 0, 0],\n        \"9168\": [-0.00099, 0.601, 0, 0],\n        \"10216\": [0.35001, 0.85, 0, 0],\n        \"10217\": [0.35001, 0.85, 0, 0],\n        \"10752\": [0.25001, 0.75, 0, 0],\n        \"10753\": [0.25001, 0.75, 0, 0],\n        \"10754\": [0.25001, 0.75, 0, 0],\n        \"10756\": [0.25001, 0.75, 0, 0],\n        \"10758\": [0.25001, 0.75, 0, 0]\n    },\n    \"Size2-Regular\": {\n        \"40\": [0.65002, 1.15, 0, 0],\n        \"41\": [0.65002, 1.15, 0, 0],\n        \"47\": [0.65002, 1.15, 0, 0],\n        \"91\": [0.65002, 1.15, 0, 0],\n        \"92\": [0.65002, 1.15, 0, 0],\n        \"93\": [0.65002, 1.15, 0, 0],\n        \"123\": [0.65002, 1.15, 0, 0],\n        \"125\": [0.65002, 1.15, 0, 0],\n        \"710\": [0, 0.75, 0, 0],\n        \"732\": [0, 0.75, 0, 0],\n        \"770\": [0, 0.75, 0, 0],\n        \"771\": [0, 0.75, 0, 0],\n        \"8719\": [0.55001, 1.05, 0, 0],\n        \"8720\": [0.55001, 1.05, 0, 0],\n        \"8721\": [0.55001, 1.05, 0, 0],\n        \"8730\": [0.65002, 1.15, 0, 0],\n        \"8747\": [0.86225, 1.36, 0.44445, 0],\n        \"8748\": [0.862, 1.36, 0.44445, 0],\n        \"8749\": [0.862, 1.36, 0.44445, 0],\n        \"8750\": [0.86225, 1.36, 0.44445, 0],\n        \"8896\": [0.55001, 1.05, 0, 0],\n        \"8897\": [0.55001, 1.05, 0, 0],\n        \"8898\": [0.55001, 1.05, 0, 0],\n        \"8899\": [0.55001, 1.05, 0, 0],\n        \"8968\": [0.65002, 1.15, 0, 0],\n        \"8969\": [0.65002, 1.15, 0, 0],\n        \"8970\": [0.65002, 1.15, 0, 0],\n        \"8971\": [0.65002, 1.15, 0, 0],\n        \"10216\": [0.65002, 1.15, 0, 0],\n        \"10217\": [0.65002, 1.15, 0, 0],\n        \"10752\": [0.55001, 1.05, 0, 0],\n        \"10753\": [0.55001, 1.05, 0, 0],\n        \"10754\": [0.55001, 1.05, 0, 0],\n        \"10756\": [0.55001, 1.05, 0, 0],\n        \"10758\": [0.55001, 1.05, 0, 0]\n    },\n    \"Size3-Regular\": {\n        \"40\": [0.95003, 1.45, 0, 0],\n        \"41\": [0.95003, 1.45, 0, 0],\n        \"47\": [0.95003, 1.45, 0, 0],\n        \"91\": [0.95003, 1.45, 0, 0],\n        \"92\": [0.95003, 1.45, 0, 0],\n        \"93\": [0.95003, 1.45, 0, 0],\n        \"123\": [0.95003, 1.45, 0, 0],\n        \"125\": [0.95003, 1.45, 0, 0],\n        \"710\": [0, 0.75, 0, 0],\n        \"732\": [0, 0.75, 0, 0],\n        \"770\": [0, 0.75, 0, 0],\n        \"771\": [0, 0.75, 0, 0],\n        \"8730\": [0.95003, 1.45, 0, 0],\n        \"8968\": [0.95003, 1.45, 0, 0],\n        \"8969\": [0.95003, 1.45, 0, 0],\n        \"8970\": [0.95003, 1.45, 0, 0],\n        \"8971\": [0.95003, 1.45, 0, 0],\n        \"10216\": [0.95003, 1.45, 0, 0],\n        \"10217\": [0.95003, 1.45, 0, 0]\n    },\n    \"Size4-Regular\": {\n        \"40\": [1.25003, 1.75, 0, 0],\n        \"41\": [1.25003, 1.75, 0, 0],\n        \"47\": [1.25003, 1.75, 0, 0],\n        \"91\": [1.25003, 1.75, 0, 0],\n        \"92\": [1.25003, 1.75, 0, 0],\n        \"93\": [1.25003, 1.75, 0, 0],\n        \"123\": [1.25003, 1.75, 0, 0],\n        \"125\": [1.25003, 1.75, 0, 0],\n        \"710\": [0, 0.825, 0, 0],\n        \"732\": [0, 0.825, 0, 0],\n        \"770\": [0, 0.825, 0, 0],\n        \"771\": [0, 0.825, 0, 0],\n        \"8730\": [1.25003, 1.75, 0, 0],\n        \"8968\": [1.25003, 1.75, 0, 0],\n        \"8969\": [1.25003, 1.75, 0, 0],\n        \"8970\": [1.25003, 1.75, 0, 0],\n        \"8971\": [1.25003, 1.75, 0, 0],\n        \"9115\": [0.64502, 1.155, 0, 0],\n        \"9116\": [1e-05, 0.6, 0, 0],\n        \"9117\": [0.64502, 1.155, 0, 0],\n        \"9118\": [0.64502, 1.155, 0, 0],\n        \"9119\": [1e-05, 0.6, 0, 0],\n        \"9120\": [0.64502, 1.155, 0, 0],\n        \"9121\": [0.64502, 1.155, 0, 0],\n        \"9122\": [-0.00099, 0.601, 0, 0],\n        \"9123\": [0.64502, 1.155, 0, 0],\n        \"9124\": [0.64502, 1.155, 0, 0],\n        \"9125\": [-0.00099, 0.601, 0, 0],\n        \"9126\": [0.64502, 1.155, 0, 0],\n        \"9127\": [1e-05, 0.9, 0, 0],\n        \"9128\": [0.65002, 1.15, 0, 0],\n        \"9129\": [0.90001, 0, 0, 0],\n        \"9130\": [0, 0.3, 0, 0],\n        \"9131\": [1e-05, 0.9, 0, 0],\n        \"9132\": [0.65002, 1.15, 0, 0],\n        \"9133\": [0.90001, 0, 0, 0],\n        \"9143\": [0.88502, 0.915, 0, 0],\n        \"10216\": [1.25003, 1.75, 0, 0],\n        \"10217\": [1.25003, 1.75, 0, 0],\n        \"57344\": [-0.00499, 0.605, 0, 0],\n        \"57345\": [-0.00499, 0.605, 0, 0],\n        \"57680\": [0, 0.12, 0, 0],\n        \"57681\": [0, 0.12, 0, 0],\n        \"57682\": [0, 0.12, 0, 0],\n        \"57683\": [0, 0.12, 0, 0]\n    },\n    \"Typewriter-Regular\": {\n        \"33\": [0, 0.61111, 0, 0],\n        \"34\": [0, 0.61111, 0, 0],\n        \"35\": [0, 0.61111, 0, 0],\n        \"36\": [0.08333, 0.69444, 0, 0],\n        \"37\": [0.08333, 0.69444, 0, 0],\n        \"38\": [0, 0.61111, 0, 0],\n        \"39\": [0, 0.61111, 0, 0],\n        \"40\": [0.08333, 0.69444, 0, 0],\n        \"41\": [0.08333, 0.69444, 0, 0],\n        \"42\": [0, 0.52083, 0, 0],\n        \"43\": [-0.08056, 0.53055, 0, 0],\n        \"44\": [0.13889, 0.125, 0, 0],\n        \"45\": [-0.08056, 0.53055, 0, 0],\n        \"46\": [0, 0.125, 0, 0],\n        \"47\": [0.08333, 0.69444, 0, 0],\n        \"48\": [0, 0.61111, 0, 0],\n        \"49\": [0, 0.61111, 0, 0],\n        \"50\": [0, 0.61111, 0, 0],\n        \"51\": [0, 0.61111, 0, 0],\n        \"52\": [0, 0.61111, 0, 0],\n        \"53\": [0, 0.61111, 0, 0],\n        \"54\": [0, 0.61111, 0, 0],\n        \"55\": [0, 0.61111, 0, 0],\n        \"56\": [0, 0.61111, 0, 0],\n        \"57\": [0, 0.61111, 0, 0],\n        \"58\": [0, 0.43056, 0, 0],\n        \"59\": [0.13889, 0.43056, 0, 0],\n        \"60\": [-0.05556, 0.55556, 0, 0],\n        \"61\": [-0.19549, 0.41562, 0, 0],\n        \"62\": [-0.05556, 0.55556, 0, 0],\n        \"63\": [0, 0.61111, 0, 0],\n        \"64\": [0, 0.61111, 0, 0],\n        \"65\": [0, 0.61111, 0, 0],\n        \"66\": [0, 0.61111, 0, 0],\n        \"67\": [0, 0.61111, 0, 0],\n        \"68\": [0, 0.61111, 0, 0],\n        \"69\": [0, 0.61111, 0, 0],\n        \"70\": [0, 0.61111, 0, 0],\n        \"71\": [0, 0.61111, 0, 0],\n        \"72\": [0, 0.61111, 0, 0],\n        \"73\": [0, 0.61111, 0, 0],\n        \"74\": [0, 0.61111, 0, 0],\n        \"75\": [0, 0.61111, 0, 0],\n        \"76\": [0, 0.61111, 0, 0],\n        \"77\": [0, 0.61111, 0, 0],\n        \"78\": [0, 0.61111, 0, 0],\n        \"79\": [0, 0.61111, 0, 0],\n        \"80\": [0, 0.61111, 0, 0],\n        \"81\": [0.13889, 0.61111, 0, 0],\n        \"82\": [0, 0.61111, 0, 0],\n        \"83\": [0, 0.61111, 0, 0],\n        \"84\": [0, 0.61111, 0, 0],\n        \"85\": [0, 0.61111, 0, 0],\n        \"86\": [0, 0.61111, 0, 0],\n        \"87\": [0, 0.61111, 0, 0],\n        \"88\": [0, 0.61111, 0, 0],\n        \"89\": [0, 0.61111, 0, 0],\n        \"90\": [0, 0.61111, 0, 0],\n        \"91\": [0.08333, 0.69444, 0, 0],\n        \"92\": [0.08333, 0.69444, 0, 0],\n        \"93\": [0.08333, 0.69444, 0, 0],\n        \"94\": [0, 0.61111, 0, 0],\n        \"95\": [0.09514, 0, 0, 0],\n        \"96\": [0, 0.61111, 0, 0],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.61111, 0, 0],\n        \"99\": [0, 0.43056, 0, 0],\n        \"100\": [0, 0.61111, 0, 0],\n        \"101\": [0, 0.43056, 0, 0],\n        \"102\": [0, 0.61111, 0, 0],\n        \"103\": [0.22222, 0.43056, 0, 0],\n        \"104\": [0, 0.61111, 0, 0],\n        \"105\": [0, 0.61111, 0, 0],\n        \"106\": [0.22222, 0.61111, 0, 0],\n        \"107\": [0, 0.61111, 0, 0],\n        \"108\": [0, 0.61111, 0, 0],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0],\n        \"112\": [0.22222, 0.43056, 0, 0],\n        \"113\": [0.22222, 0.43056, 0, 0],\n        \"114\": [0, 0.43056, 0, 0],\n        \"115\": [0, 0.43056, 0, 0],\n        \"116\": [0, 0.55358, 0, 0],\n        \"117\": [0, 0.43056, 0, 0],\n        \"118\": [0, 0.43056, 0, 0],\n        \"119\": [0, 0.43056, 0, 0],\n        \"120\": [0, 0.43056, 0, 0],\n        \"121\": [0.22222, 0.43056, 0, 0],\n        \"122\": [0, 0.43056, 0, 0],\n        \"123\": [0.08333, 0.69444, 0, 0],\n        \"124\": [0.08333, 0.69444, 0, 0],\n        \"125\": [0.08333, 0.69444, 0, 0],\n        \"126\": [0, 0.61111, 0, 0],\n        \"127\": [0, 0.61111, 0, 0],\n        \"305\": [0, 0.43056, 0, 0],\n        \"567\": [0.22222, 0.43056, 0, 0],\n        \"768\": [0, 0.61111, 0, 0],\n        \"769\": [0, 0.61111, 0, 0],\n        \"770\": [0, 0.61111, 0, 0],\n        \"771\": [0, 0.61111, 0, 0],\n        \"772\": [0, 0.56555, 0, 0],\n        \"774\": [0, 0.61111, 0, 0],\n        \"776\": [0, 0.61111, 0, 0],\n        \"778\": [0, 0.61111, 0, 0],\n        \"780\": [0, 0.56597, 0, 0],\n        \"915\": [0, 0.61111, 0, 0],\n        \"916\": [0, 0.61111, 0, 0],\n        \"920\": [0, 0.61111, 0, 0],\n        \"923\": [0, 0.61111, 0, 0],\n        \"926\": [0, 0.61111, 0, 0],\n        \"928\": [0, 0.61111, 0, 0],\n        \"931\": [0, 0.61111, 0, 0],\n        \"933\": [0, 0.61111, 0, 0],\n        \"934\": [0, 0.61111, 0, 0],\n        \"936\": [0, 0.61111, 0, 0],\n        \"937\": [0, 0.61111, 0, 0],\n        \"2018\": [0, 0.61111, 0, 0],\n        \"2019\": [0, 0.61111, 0, 0],\n        \"8242\": [0, 0.61111, 0, 0]\n    }\n};\n\n},{}],19:[function(require,module,exports){\nvar utils = require(\"./utils\");\nvar ParseError = require(\"./ParseError\");\nvar parseData = require(\"./parseData\");\nvar ParseNode = parseData.ParseNode;\n\n/* This file contains a list of functions that we parse, identified by\n * the calls to defineFunction.\n *\n * The first argument to defineFunction is a single name or a list of names.\n * All functions named in such a list will share a single implementation.\n *\n * Each declared function can have associated properties, which\n * include the following:\n *\n *  - numArgs: The number of arguments the function takes.\n *             If this is the only property, it can be passed as a number\n *             instead of an element of a properties object.\n *  - argTypes: (optional) An array corresponding to each argument of the\n *              function, giving the type of argument that should be parsed. Its\n *              length should be equal to `numArgs + numOptionalArgs`. Valid\n *              types:\n *               - \"size\": A size-like thing, such as \"1em\" or \"5ex\"\n *               - \"color\": An html color, like \"#abc\" or \"blue\"\n *               - \"original\": The same type as the environment that the\n *                             function being parsed is in (e.g. used for the\n *                             bodies of functions like \\color where the first\n *                             argument is special and the second argument is\n *                             parsed normally)\n *              Other possible types (probably shouldn't be used)\n *               - \"text\": Text-like (e.g. \\text)\n *               - \"math\": Normal math\n *              If undefined, this will be treated as an appropriate length\n *              array of \"original\" strings\n *  - greediness: (optional) The greediness of the function to use ungrouped\n *                arguments.\n *\n *                E.g. if you have an expression\n *                  \\sqrt \\frac 1 2\n *                since \\frac has greediness=2 vs \\sqrt's greediness=1, \\frac\n *                will use the two arguments '1' and '2' as its two arguments,\n *                then that whole function will be used as the argument to\n *                \\sqrt. On the other hand, the expressions\n *                  \\frac \\frac 1 2 3\n *                and\n *                  \\frac \\sqrt 1 2\n *                will fail because \\frac and \\frac have equal greediness\n *                and \\sqrt has a lower greediness than \\frac respectively. To\n *                make these parse, we would have to change them to:\n *                  \\frac {\\frac 1 2} 3\n *                and\n *                  \\frac {\\sqrt 1} 2\n *\n *                The default value is `1`\n *  - allowedInText: (optional) Whether or not the function is allowed inside\n *                   text mode (default false)\n *  - numOptionalArgs: (optional) The number of optional arguments the function\n *                     should parse. If the optional arguments aren't found,\n *                     `null` will be passed to the handler in their place.\n *                     (default 0)\n *  - infix: (optional) Must be true if the function is an infix operator.\n *\n * The last argument is that implementation, the handler for the function(s).\n * It is called to handle these functions and their arguments.\n * It receives two arguments:\n *  - context contains information and references provided by the parser\n *  - args is an array of arguments obtained from TeX input\n * The context contains the following properties:\n *  - funcName: the text (i.e. name) of the function, including \\\n *  - parser: the parser object\n *  - lexer: the lexer object\n *  - positions: the positions in the overall string of the function\n *               and the arguments.\n * The latter three should only be used to produce error messages.\n *\n * The function should return an object with the following keys:\n *  - type: The type of element that this is. This is then used in\n *          buildHTML/buildMathML to determine which function\n *          should be called to build this node into a DOM node\n * Any other data can be added to the object, which will be passed\n * in to the function in buildHTML/buildMathML as `group.value`.\n */\n\nfunction defineFunction(names, props, handler) {\n    if (typeof names === \"string\") {\n        names = [names];\n    }\n    if (typeof props === \"number\") {\n        props = { numArgs: props };\n    }\n    // Set default values of functions\n    var data = {\n        numArgs: props.numArgs,\n        argTypes: props.argTypes,\n        greediness: (props.greediness === undefined) ? 1 : props.greediness,\n        allowedInText: !!props.allowedInText,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        infix: !!props.infix,\n        handler: handler\n    };\n    for (var i = 0; i < names.length; ++i) {\n        module.exports[names[i]] = data;\n    }\n}\n\n// Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\nvar ordargument = function(arg) {\n    if (arg.type === \"ordgroup\") {\n        return arg.value;\n    } else {\n        return [arg];\n    }\n};\n\n// A normal square root\ndefineFunction(\"\\\\sqrt\", {\n    numArgs: 1,\n    numOptionalArgs: 1\n}, function(context, args) {\n    var index = args[0];\n    var body = args[1];\n    return {\n        type: \"sqrt\",\n        body: body,\n        index: index\n    };\n});\n\n// Non-mathy text, possibly in a font\nvar textFunctionStyles = {\n    \"\\\\text\": undefined, \"\\\\textrm\": \"mathrm\", \"\\\\textsf\": \"mathsf\",\n    \"\\\\texttt\": \"mathtt\", \"\\\\textnormal\": \"mathrm\", \"\\\\textbf\": \"mathbf\",\n    \"\\\\textit\": \"textit\"\n};\n\ndefineFunction([\n    \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\",\n    \"\\\\textbf\", \"\\\\textit\"\n], {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    greediness: 2,\n    allowedInText: true\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"text\",\n        body: ordargument(body),\n        style: textFunctionStyles[context.funcName]\n    };\n});\n\n// A two-argument custom color\ndefineFunction(\"\\\\color\", {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"original\"]\n}, function(context, args) {\n    var color = args[0];\n    var body = args[1];\n    return {\n        type: \"color\",\n        color: color.value,\n        value: ordargument(body)\n    };\n});\n\n// An overline\ndefineFunction(\"\\\\overline\", {\n    numArgs: 1\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"overline\",\n        body: body\n    };\n});\n\n// An underline\ndefineFunction(\"\\\\underline\", {\n    numArgs: 1\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"underline\",\n        body: body\n    };\n});\n\n// A box of the width and height\ndefineFunction(\"\\\\rule\", {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"]\n}, function(context, args) {\n    var shift = args[0];\n    var width = args[1];\n    var height = args[2];\n    return {\n        type: \"rule\",\n        shift: shift && shift.value,\n        width: width.value,\n        height: height.value\n    };\n});\n\n// TODO: In TeX, \\mkern only accepts mu-units, and \\kern does not accept\n// mu-units. In current KaTeX we relax this; both commands accept any unit.\ndefineFunction([\"\\\\kern\", \"\\\\mkern\"], {\n    numArgs: 1,\n    argTypes: [\"size\"]\n}, function(context, args) {\n    return {\n        type: \"kern\",\n        dimension: args[0].value\n    };\n});\n\n// A KaTeX logo\ndefineFunction(\"\\\\KaTeX\", {\n    numArgs: 0\n}, function(context) {\n    return {\n        type: \"katex\"\n    };\n});\n\ndefineFunction(\"\\\\phantom\", {\n    numArgs: 1\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"phantom\",\n        value: ordargument(body)\n    };\n});\n\n// Math class commands except \\mathop\ndefineFunction([\n    \"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\",\n    \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"\n], {\n    numArgs: 1\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"mclass\",\n        mclass: \"m\" + context.funcName.substr(5),\n        value: ordargument(body)\n    };\n});\n\n// Build a relation by placing one symbol on top of another\ndefineFunction(\"\\\\stackrel\", {\n    numArgs: 2\n}, function(context, args) {\n    var top = args[0];\n    var bottom = args[1];\n\n    var bottomop = new ParseNode(\"op\", {\n        type: \"op\",\n        limits: true,\n        alwaysHandleSupSub: true,\n        symbol: false,\n        value: ordargument(bottom)\n    }, bottom.mode);\n\n    var supsub = new ParseNode(\"supsub\", {\n        base: bottomop,\n        sup: top,\n        sub: null\n    }, top.mode);\n\n    return {\n        type: \"mclass\",\n        mclass: \"mrel\",\n        value: [supsub]\n    };\n});\n\n// \\mod-type functions\ndefineFunction(\"\\\\bmod\", {\n    numArgs: 0\n}, function(context, args) {\n    return {\n        type: \"mod\",\n        modType: \"bmod\",\n        value: null\n    };\n});\n\ndefineFunction([\"\\\\pod\", \"\\\\pmod\", \"\\\\mod\"], {\n    numArgs: 1\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"mod\",\n        modType: context.funcName.substr(1),\n        value: ordargument(body)\n    };\n});\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n    \"\\\\bigl\" : {mclass: \"mopen\",    size: 1},\n    \"\\\\Bigl\" : {mclass: \"mopen\",    size: 2},\n    \"\\\\biggl\": {mclass: \"mopen\",    size: 3},\n    \"\\\\Biggl\": {mclass: \"mopen\",    size: 4},\n    \"\\\\bigr\" : {mclass: \"mclose\",   size: 1},\n    \"\\\\Bigr\" : {mclass: \"mclose\",   size: 2},\n    \"\\\\biggr\": {mclass: \"mclose\",   size: 3},\n    \"\\\\Biggr\": {mclass: \"mclose\",   size: 4},\n    \"\\\\bigm\" : {mclass: \"mrel\",     size: 1},\n    \"\\\\Bigm\" : {mclass: \"mrel\",     size: 2},\n    \"\\\\biggm\": {mclass: \"mrel\",     size: 3},\n    \"\\\\Biggm\": {mclass: \"mrel\",     size: 4},\n    \"\\\\big\"  : {mclass: \"mord\",     size: 1},\n    \"\\\\Big\"  : {mclass: \"mord\",     size: 2},\n    \"\\\\bigg\" : {mclass: \"mord\",     size: 3},\n    \"\\\\Bigg\" : {mclass: \"mord\",     size: 4}\n};\n\nvar delimiters = [\n    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",\n    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",\n    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",\n    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"\\\\lt\", \"\\\\gt\",\n    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",\n    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\",\n    \"/\", \"\\\\backslash\",\n    \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\",\n    \"\\\\uparrow\", \"\\\\Uparrow\",\n    \"\\\\downarrow\", \"\\\\Downarrow\",\n    \"\\\\updownarrow\", \"\\\\Updownarrow\",\n    \".\"\n];\n\nvar fontAliases = {\n    \"\\\\Bbb\": \"\\\\mathbb\",\n    \"\\\\bold\": \"\\\\mathbf\",\n    \"\\\\frak\": \"\\\\mathfrak\"\n};\n\n// Single-argument color functions\ndefineFunction([\n    \"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\",\n    \"\\\\green\", \"\\\\gray\", \"\\\\purple\",\n    \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\",\n    \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\",\n    \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\",\n    \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\",\n    \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\",\n    \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\",\n    \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\",\n    \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\",\n    \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\",\n    \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\",\n    \"\\\\kaBlue\", \"\\\\kaGreen\"\n], {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"color\",\n        color: \"katex-\" + context.funcName.slice(1),\n        value: ordargument(body)\n    };\n});\n\n// There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\n// No limits, not symbols\ndefineFunction([\n    \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arg\", \"\\\\cos\", \"\\\\cosh\",\n    \"\\\\cot\", \"\\\\coth\", \"\\\\csc\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\",\n    \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\",\n    \"\\\\tan\", \"\\\\tanh\"\n], {\n    numArgs: 0\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: false,\n        body: context.funcName\n    };\n});\n\n// Limits, not symbols\ndefineFunction([\n    \"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\liminf\", \"\\\\limsup\", \"\\\\max\",\n    \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"\n], {\n    numArgs: 0\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: true,\n        symbol: false,\n        body: context.funcName\n    };\n});\n\n// No limits, symbols\ndefineFunction([\n    \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\"\n], {\n    numArgs: 0\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: true,\n        body: context.funcName\n    };\n});\n\n// Limits, symbols\ndefineFunction([\n    \"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\",\n    \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\",\n    \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\"\n], {\n    numArgs: 0\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: true,\n        symbol: true,\n        body: context.funcName\n    };\n});\n\n// \\mathop class command\ndefineFunction(\"\\\\mathop\", {\n    numArgs: 1\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: false,\n        value: ordargument(body)\n    };\n});\n\n// Fractions\ndefineFunction([\n    \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\",\n    \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\",\n    \"\\\\\\\\atopfrac\" // can’t be entered directly\n], {\n    numArgs: 2,\n    greediness: 2\n}, function(context, args) {\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (context.funcName) {\n        case \"\\\\dfrac\":\n        case \"\\\\frac\":\n        case \"\\\\tfrac\":\n            hasBarLine = true;\n            break;\n        case \"\\\\\\\\atopfrac\":\n            hasBarLine = false;\n            break;\n        case \"\\\\dbinom\":\n        case \"\\\\binom\":\n        case \"\\\\tbinom\":\n            hasBarLine = false;\n            leftDelim = \"(\";\n            rightDelim = \")\";\n            break;\n        default:\n            throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (context.funcName) {\n        case \"\\\\dfrac\":\n        case \"\\\\dbinom\":\n            size = \"display\";\n            break;\n        case \"\\\\tfrac\":\n        case \"\\\\tbinom\":\n            size = \"text\";\n            break;\n    }\n\n    return {\n        type: \"genfrac\",\n        numer: numer,\n        denom: denom,\n        hasBarLine: hasBarLine,\n        leftDelim: leftDelim,\n        rightDelim: rightDelim,\n        size: size\n    };\n});\n\n// Left and right overlap functions\ndefineFunction([\"\\\\llap\", \"\\\\rlap\"], {\n    numArgs: 1,\n    allowedInText: true\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: context.funcName.slice(1),\n        body: body\n    };\n});\n\n// Delimiter functions\nvar checkDelimiter = function(delim, context) {\n    if (utils.contains(delimiters, delim.value)) {\n        return delim;\n    } else {\n        throw new ParseError(\n            \"Invalid delimiter: '\" + delim.value + \"' after '\" +\n            context.funcName + \"'\", delim);\n    }\n};\n\ndefineFunction([\n    \"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\",\n    \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\",\n    \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\",\n    \"\\\\big\",  \"\\\\Big\",  \"\\\\bigg\",  \"\\\\Bigg\"\n], {\n    numArgs: 1\n}, function(context, args) {\n    var delim = checkDelimiter(args[0], context);\n\n    return {\n        type: \"delimsizing\",\n        size: delimiterSizes[context.funcName].size,\n        mclass: delimiterSizes[context.funcName].mclass,\n        value: delim.value\n    };\n});\n\ndefineFunction([\n    \"\\\\left\", \"\\\\right\"\n], {\n    numArgs: 1\n}, function(context, args) {\n    var delim = checkDelimiter(args[0], context);\n\n    // \\left and \\right are caught somewhere in Parser.js, which is\n    // why this data doesn't match what is in buildHTML.\n    return {\n        type: \"leftright\",\n        value: delim.value\n    };\n});\n\ndefineFunction(\"\\\\middle\", {\n    numArgs: 1\n}, function(context, args) {\n    var delim = checkDelimiter(args[0], context);\n    if (!context.parser.leftrightDepth) {\n        throw new ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n        type: \"middle\",\n        value: delim.value\n    };\n});\n\n// Sizing functions (handled in Parser.js explicitly, hence no handler)\ndefineFunction([\n    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\",\n    \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"\n], 0, null);\n\n// Style changing functions (handled in Parser.js explicitly, hence no\n// handler)\ndefineFunction([\n    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\",\n    \"\\\\scriptscriptstyle\"\n], 0, null);\n\ndefineFunction([\n    // styles\n    \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\",\n\n    // families\n    \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\",\n    \"\\\\mathtt\",\n\n    // aliases\n    \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"\n], {\n    numArgs: 1,\n    greediness: 2\n}, function(context, args) {\n    var body = args[0];\n    var func = context.funcName;\n    if (func in fontAliases) {\n        func = fontAliases[func];\n    }\n    return {\n        type: \"font\",\n        font: func.slice(1),\n        body: body\n    };\n});\n\n// Accents\ndefineFunction([\n    \"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\",\n    \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\"\n    // We don't support expanding accents yet\n    // \"\\\\widetilde\", \"\\\\widehat\"\n], {\n    numArgs: 1\n}, function(context, args) {\n    var base = args[0];\n    return {\n        type: \"accent\",\n        accent: context.funcName,\n        base: base\n    };\n});\n\n// Infix generalized fractions\ndefineFunction([\"\\\\over\", \"\\\\choose\", \"\\\\atop\"], {\n    numArgs: 0,\n    infix: true\n}, function(context) {\n    var replaceWith;\n    switch (context.funcName) {\n        case \"\\\\over\":\n            replaceWith = \"\\\\frac\";\n            break;\n        case \"\\\\choose\":\n            replaceWith = \"\\\\binom\";\n            break;\n        case \"\\\\atop\":\n            replaceWith = \"\\\\\\\\atopfrac\";\n            break;\n        default:\n            throw new Error(\"Unrecognized infix genfrac command\");\n    }\n    return {\n        type: \"infix\",\n        replaceWith: replaceWith,\n        token: context.token\n    };\n});\n\n// Row breaks for aligned data\ndefineFunction([\"\\\\\\\\\", \"\\\\cr\"], {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"]\n}, function(context, args) {\n    var size = args[0];\n    return {\n        type: \"cr\",\n        size: size\n    };\n});\n\n// Environment delimiters\ndefineFunction([\"\\\\begin\", \"\\\\end\"], {\n    numArgs: 1,\n    argTypes: [\"text\"]\n}, function(context, args) {\n    var nameGroup = args[0];\n    if (nameGroup.type !== \"ordgroup\") {\n        throw new ParseError(\"Invalid environment name\", nameGroup);\n    }\n    var name = \"\";\n    for (var i = 0; i < nameGroup.value.length; ++i) {\n        name += nameGroup.value[i].value;\n    }\n    return {\n        type: \"environment\",\n        name: name,\n        nameGroup: nameGroup\n    };\n});\n\n},{\"./ParseError\":6,\"./parseData\":21,\"./utils\":25}],20:[function(require,module,exports){\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\nvar utils = require(\"./utils\");\n\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\nfunction MathNode(type, children) {\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n}\n\n/**\n * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n * semantic content, so this is used heavily.\n */\nMathNode.prototype.setAttribute = function(name, value) {\n    this.attributes[name] = value;\n};\n\n/**\n * Converts the math node into a MathML-namespaced DOM element.\n */\nMathNode.prototype.toNode = function() {\n    var node = document.createElementNS(\n        \"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            node.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n        node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n};\n\n/**\n * Converts the math node into an HTML markup string.\n */\nMathNode.prototype.toMarkup = function() {\n    var markup = \"<\" + this.type;\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            markup += \" \" + attr + \"=\\\"\";\n            markup += utils.escape(this.attributes[attr]);\n            markup += \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n\n    return markup;\n};\n\n/**\n * This node represents a piece of text.\n */\nfunction TextNode(text) {\n    this.text = text;\n}\n\n/**\n * Converts the text node into a DOM text node.\n */\nTextNode.prototype.toNode = function() {\n    return document.createTextNode(this.text);\n};\n\n/**\n * Converts the text node into HTML markup (which is just the text itself).\n */\nTextNode.prototype.toMarkup = function() {\n    return utils.escape(this.text);\n};\n\nmodule.exports = {\n    MathNode: MathNode,\n    TextNode: TextNode\n};\n\n},{\"./utils\":25}],21:[function(require,module,exports){\n/**\n * The resulting parse tree nodes of the parse tree.\n *\n * It is possible to provide position information, so that a ParseNode can\n * fulfil a role similar to a Token in error reporting.\n * For details on the corresponding properties see Token constructor.\n * Providing such information can lead to better error reporting.\n *\n * @param {string}  type       type of node, like e.g. \"ordgroup\"\n * @param {?object} value      type-specific representation of the node\n * @param {string}  mode       parse mode in action for this node,\n *                             \"math\" or \"text\"\n * @param {Token=} firstToken  first token of the input for this node,\n *                             will omit position information if unset\n * @param {Token=} lastToken   last token of the input for this node,\n *                             will default to firstToken if unset\n */\nfunction ParseNode(type, value, mode, firstToken, lastToken) {\n    this.type = type;\n    this.value = value;\n    this.mode = mode;\n    if (firstToken && (!lastToken || lastToken.lexer === firstToken.lexer)) {\n        this.lexer = firstToken.lexer;\n        this.start = firstToken.start;\n        this.end = (lastToken || firstToken).end;\n    }\n}\n\nmodule.exports = {\n    ParseNode: ParseNode\n};\n\n\n},{}],22:[function(require,module,exports){\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\nvar Parser = require(\"./Parser\");\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function(toParse, settings) {\n    if (!(typeof toParse === 'string' || toParse instanceof String)) {\n        throw new TypeError('KaTeX can only parse string typed expression');\n    }\n    var parser = new Parser(toParse, settings);\n\n    return parser.parse();\n};\n\nmodule.exports = parseTree;\n\n},{\"./Parser\":7}],23:[function(require,module,exports){\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n\nmodule.exports = {\n    math: {},\n    text: {}\n};\n\nfunction defineSymbol(mode, font, group, replace, name) {\n    module.exports[mode][name] = {\n        font: font,\n        group: group,\n        replace: replace\n    };\n}\n\n// Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n\n// modes:\nvar math = \"math\";\nvar text = \"text\";\n\n// fonts:\nvar main = \"main\";\nvar ams = \"ams\";\n\n// groups:\nvar accent = \"accent\";\nvar bin = \"bin\";\nvar close = \"close\";\nvar inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op\";\nvar open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar textord = \"textord\";\n\n// Now comes the symbol table\n\n// Relation Symbols\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\");\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\");\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\");\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\");\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\");\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\");\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\");\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\");\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\");\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\");\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\");\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\");\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\");\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\");\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\");\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\");\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\");\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\");\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\");\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\");\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\");\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\");\n\n// Punctuation\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\");\n\n// Misc Symbols\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(text, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(text, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\");\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\");\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\");\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\");\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\");\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\");\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\");\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\");\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\");\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\");\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\");\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\");\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\");\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\");\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\");\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\");\n\n// Math and Text\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\n\n// Large Delimiters\ndefineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\");\ndefineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\");\ndefineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\");\ndefineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\");\n\n// Binary Operators\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\");\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\");\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\");\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\");\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\");\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\");\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\");\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\n\n// Arrow Symbols\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\");\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\");\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\");\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\");\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\");\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\");\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\");\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\");\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\");\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\");\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\");\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\");\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\");\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\");\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\");\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\");\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\");\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\");\n\n// AMS Negated Binary Relations\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\");\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\");\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\");\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\");\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\");\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\");\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\");\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\");\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\");\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\");\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\");\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\");\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\");\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\");\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\");\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\");\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\");\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\");\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\");\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\");\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\");\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\");\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\");\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\");\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\");\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\");\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\");\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\");\n\n// AMS Negated Arrows\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\");\n\n// AMS Misc\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\");\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\");\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\");\ndefineSymbol(math, ams, textord, \"\\u006b\", \"\\\\Bbbk\");\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\");\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\");\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\");\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\");\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\");\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\");\n\n// AMS Hebrew\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\");\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\");\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\");\n\n// AMS Greek\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\");\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\");\n\n// AMS Delimiters\ndefineSymbol(math, ams, open, \"\\u250c\", \"\\\\ulcorner\");\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\urcorner\");\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\llcorner\");\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\lrcorner\");\n\n// AMS Binary Relations\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\");\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\");\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\");\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\");\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\");\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\");\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\");\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\");\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\");\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\");\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\");\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\");\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\");\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\");\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\");\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\");\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\");\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\");\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\");\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\");\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\");\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\");\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\");\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\");\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\");\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\");\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\");\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\");\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\");\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\");\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\");\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\");\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\");\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\");\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\");\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\");\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\");\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\");\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\");\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\");\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\");\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\");\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\");\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\");\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\");\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\");\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\");\n\n// AMS Binary Operators\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\");\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\");\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\");\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\");\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\");\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\");\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\");\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\");\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\");\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\");\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\");\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\");\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\");\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\");\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\");\n\n// AMS Arrows\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\");\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\");\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\");\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\");\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\");\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\");\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\");\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\");\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\");\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\");\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\");\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\");\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\");\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\");\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\");\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\");\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\");\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\");\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\");\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\");\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\");\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\n\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(text, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\");\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\");\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\");\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\");\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\");\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\");\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\");\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\");\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\");\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\");\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\");\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\");\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\");\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\");\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\");\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\");\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\");\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\");\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\");\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\");\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\");\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\");\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\");\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\");\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\");\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\");\ndefineSymbol(math, main, mathord, \"o\", \"\\\\omicron\");\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\");\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\");\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\");\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\");\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\");\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\");\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\");\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\");\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\");\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\");\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\");\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\");\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\");\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\");\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\");\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\");\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\");\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\");\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\");\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\");\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\");\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\");\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"(\", \"(\");\ndefineSymbol(math, main, open, \"[\", \"[\");\ndefineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\");\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \")\", \")\");\ndefineSymbol(math, main, close, \"]\", \"]\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\");\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \"<\", \"<\");\ndefineSymbol(math, main, rel, \">\", \">\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\");\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\");\ndefineSymbol(math, main, rel, \"\\u2209\", \"\\\\notin\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\");\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\");\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\");\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\");\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\");\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\");\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\");\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(math, main, rel, \"\\u2260\", \"\\\\ne\");\ndefineSymbol(math, main, rel, \"\\u2260\", \"\\\\neq\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\");\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\");\ndefineSymbol(math, main, spacing, null, \"\\\\!\");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"~\");\ndefineSymbol(math, main, spacing, null, \"\\\\,\");\ndefineSymbol(math, main, spacing, null, \"\\\\:\");\ndefineSymbol(math, main, spacing, null, \"\\\\;\");\ndefineSymbol(math, main, spacing, null, \"\\\\enspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\qquad\");\ndefineSymbol(math, main, spacing, null, \"\\\\quad\");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, main, punct, \":\", \"\\\\colon\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\");\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\");\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\");\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\");\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\");\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\");\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\");\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\");\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\");\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(text, main, textord, \"{\", \"\\\\{\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(text, main, textord, \"}\", \"\\\\}\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\");\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\");\ndefineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\");\ndefineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\");\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\");\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\");\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\");\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\");\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\");\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\");\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\");\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\");\ndefineSymbol(math, math, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, math, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, math, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, math, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, math, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, math, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, math, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, math, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, math, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, math, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, math, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, math, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, math, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, math, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, math, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(text, main, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(text, main, inner, \"\\u2026\", \"\\\\ldots\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\");\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\cdots\");\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\");\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\vdots\");\ndefineSymbol(math, main, accent, \"\\u00b4\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u0060\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u00af\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, mathord, \"\\u0131\", \"\\\\imath\");\ndefineSymbol(math, main, mathord, \"\\u0237\", \"\\\\jmath\");\n\ndefineSymbol(text, main, textord, \"\\u2013\", \"--\");\ndefineSymbol(text, main, textord, \"\\u2014\", \"---\");\ndefineSymbol(text, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(text, main, textord, \"\\u2019\", \"'\");\ndefineSymbol(text, main, textord, \"\\u201c\", \"``\");\ndefineSymbol(text, main, textord, \"\\u201d\", \"''\");\ndefineSymbol(math, main, textord, \"\\u00b0\", \"\\\\degree\");\ndefineSymbol(text, main, textord, \"\\u00b0\", \"\\\\degree\");\ndefineSymbol(math, main, mathord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text, ams, textord, \"\\u2720\", \"\\\\maltese\");\n\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"~\");\n\n// There are lots of symbols which are the same, so we add them in afterwards.\nvar i;\nvar ch;\n\n// All of these are textords in math mode\nvar mathTextSymbols = \"0123456789/@.\\\"\";\nfor (i = 0; i < mathTextSymbols.length; i++) {\n    ch = mathTextSymbols.charAt(i);\n    defineSymbol(math, main, textord, ch, ch);\n}\n\n// All of these are textords in text mode\nvar textSymbols = \"0123456789!@*()-=+[]\\\";:?/.,\";\nfor (i = 0; i < textSymbols.length; i++) {\n    ch = textSymbols.charAt(i);\n    defineSymbol(text, main, textord, ch, ch);\n}\n\n// All of these are textords in text mode, and mathords in math mode\nvar letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nfor (i = 0; i < letters.length; i++) {\n    ch = letters.charAt(i);\n    defineSymbol(math, main, mathord, ch, ch);\n    defineSymbol(text, main, textord, ch, ch);\n}\n\n// Latin-1 letters\nfor (i = 0x00C0; i <= 0x00D6; i++) {\n    ch = String.fromCharCode(i);\n    defineSymbol(text, main, textord, ch, ch);\n}\n\nfor (i = 0x00D8; i <= 0x00F6; i++) {\n    ch = String.fromCharCode(i);\n    defineSymbol(text, main, textord, ch, ch);\n}\n\nfor (i = 0x00F8; i <= 0x00FF; i++) {\n    ch = String.fromCharCode(i);\n    defineSymbol(text, main, textord, ch, ch);\n}\n\n// Cyrillic\nfor (i = 0x0410; i <= 0x044F; i++) {\n    ch = String.fromCharCode(i);\n    defineSymbol(text, main, textord, ch, ch);\n}\n\n// Unicode versions of existing characters\ndefineSymbol(text, main, textord, \"\\u2013\", \"–\");\ndefineSymbol(text, main, textord, \"\\u2014\", \"—\");\ndefineSymbol(text, main, textord, \"\\u2018\", \"‘\");\ndefineSymbol(text, main, textord, \"\\u2019\", \"’\");\ndefineSymbol(text, main, textord, \"\\u201c\", \"“\");\ndefineSymbol(text, main, textord, \"\\u201d\", \"”\");\n\n},{}],24:[function(require,module,exports){\nvar hangulRegex = /[\\uAC00-\\uD7AF]/;\n\n// This regex combines\n// - Hiragana: [\\u3040-\\u309F]\n// - Katakana: [\\u30A0-\\u30FF]\n// - CJK ideograms: [\\u4E00-\\u9FAF]\n// - Hangul syllables: [\\uAC00-\\uD7AF]\n// Notably missing are halfwidth Katakana and Romanji glyphs.\nvar cjkRegex =\n    /[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\u4E00-\\u9FAF]|[\\uAC00-\\uD7AF]/;\n\nmodule.exports = {\n    cjkRegex: cjkRegex,\n    hangulRegex: hangulRegex\n};\n\n},{}],25:[function(require,module,exports){\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Provide an `indexOf` function which works in IE8, but defers to native if\n * possible.\n */\nvar nativeIndexOf = Array.prototype.indexOf;\nvar indexOf = function(list, elem) {\n    if (list == null) {\n        return -1;\n    }\n    if (nativeIndexOf && list.indexOf === nativeIndexOf) {\n        return list.indexOf(elem);\n    }\n    var i = 0;\n    var l = list.length;\n    for (; i < l; i++) {\n        if (list[i] === elem) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function(list, elem) {\n    return indexOf(list, elem) !== -1;\n};\n\n/**\n * Provide a default value if a setting is undefined\n */\nvar deflt = function(setting, defaultIfUndefined) {\n    return setting === undefined ? defaultIfUndefined : setting;\n};\n\n// hyphenate and escape adapted from Facebook's React under Apache 2 license\n\nvar uppercase = /([A-Z])/g;\nvar hyphenate = function(str) {\n    return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n    \"&\": \"&amp;\",\n    \">\": \"&gt;\",\n    \"<\": \"&lt;\",\n    \"\\\"\": \"&quot;\",\n    \"'\": \"&#x27;\"\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n    return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escape(text) {\n    return (\"\" + text).replace(ESCAPE_REGEX, escaper);\n}\n\n/**\n * A function to set the text content of a DOM element in all supported\n * browsers. Note that we don't define this if there is no document.\n */\nvar setTextContent;\nif (typeof document !== \"undefined\") {\n    var testNode = document.createElement(\"span\");\n    if (\"textContent\" in testNode) {\n        setTextContent = function(node, text) {\n            node.textContent = text;\n        };\n    } else {\n        setTextContent = function(node, text) {\n            node.innerText = text;\n        };\n    }\n}\n\n/**\n * A function to clear a node.\n */\nfunction clearNode(node) {\n    setTextContent(node, \"\");\n}\n\nmodule.exports = {\n    contains: contains,\n    deflt: deflt,\n    escape: escape,\n    hyphenate: hyphenate,\n    indexOf: indexOf,\n    setTextContent: setTextContent,\n    clearNode: clearNode\n};\n\n},{}]},{},[1])(1)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/katex.js\n// module id = 57\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/img/output_3_0.9db7dc7.jpeg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/output_3_0.jpeg\n// module id = 64\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_AMS-Regular.9971d27.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_AMS-Regular.ttf\n// module id = 65\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_AMS-Regular.e78f217.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_AMS-Regular.woff\n// module id = 66\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_AMS-Regular.f4c3270.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_AMS-Regular.woff2\n// module id = 67\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Caligraphic-Bold.743b42a.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Caligraphic-Bold.ttf\n// module id = 68\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Caligraphic-Bold.bac6199.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff\n// module id = 69\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Caligraphic-Bold.a2e0522.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff2\n// module id = 70\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Caligraphic-Regular.244db27.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Caligraphic-Regular.ttf\n// module id = 71\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Caligraphic-Regular.a64e134.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff\n// module id = 72\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Caligraphic-Regular.479a68e.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff2\n// module id = 73\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Fraktur-Bold.ad26cc8.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Fraktur-Bold.ttf\n// module id = 74\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Fraktur-Bold.0a0aa19.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Fraktur-Bold.woff\n// module id = 75\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Fraktur-Bold.8e5f883.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Fraktur-Bold.woff2\n// module id = 76\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Fraktur-Regular.d459632.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Fraktur-Regular.ttf\n// module id = 77\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Fraktur-Regular.f980ca7.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Fraktur-Regular.woff\n// module id = 78\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Fraktur-Regular.ae2b6f4.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Fraktur-Regular.woff2\n// module id = 79\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Bold.e69b951.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Bold.ttf\n// module id = 80\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Bold.d8a629d.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Bold.woff\n// module id = 81\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Bold.83f8b32.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Bold.woff2\n// module id = 82\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Italic.1b22614.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Italic.ttf\n// module id = 83\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Italic.8dd42e0.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Italic.woff\n// module id = 84\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Italic.07510ed.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Italic.woff2\n// module id = 85\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Regular.d9162df.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Regular.ttf\n// module id = 86\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Regular.2dffc87.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Regular.woff\n// module id = 87\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Main-Regular.bd65225.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Main-Regular.woff2\n// module id = 88\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Math-Italic.55fbb3a.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Math-Italic.ttf\n// module id = 89\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Math-Italic.da58601.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Math-Italic.woff\n// module id = 90\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Math-Italic.afeebb7.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Math-Italic.woff2\n// module id = 91\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_SansSerif-Regular.8075d14.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_SansSerif-Regular.ttf\n// module id = 92\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_SansSerif-Regular.48c7df6.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_SansSerif-Regular.woff\n// module id = 93\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_SansSerif-Regular.7d5fa3e.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_SansSerif-Regular.woff2\n// module id = 94\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Script-Regular.abb12fc.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Script-Regular.ttf\n// module id = 95\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Script-Regular.5acb381.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Script-Regular.woff\n// module id = 96\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Script-Regular.c472b57.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Script-Regular.woff2\n// module id = 97\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Size1-Regular.8cc60fd.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size1-Regular.ttf\n// module id = 98\n// module chunks = 0","module.exports = \"data:application/font-woff;base64,\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size1-Regular.woff\n// module id = 99\n// module chunks = 0","module.exports = \"data:application/font-woff2;base64,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\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size1-Regular.woff2\n// module id = 100\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Size2-Regular.5976fff.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size2-Regular.ttf\n// module id = 101\n// module chunks = 0","module.exports = \"data:application/font-woff;base64,\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size2-Regular.woff\n// module id = 102\n// module chunks = 0","module.exports = \"data:application/font-woff2;base64,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\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size2-Regular.woff2\n// module id = 103\n// module chunks = 0","module.exports = \"data:application/x-font-ttf;base64,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\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size3-Regular.ttf\n// module id = 104\n// module chunks = 0","module.exports = \"data:application/font-woff;base64,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\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size3-Regular.woff\n// module id = 105\n// module chunks = 0","module.exports = \"data:application/font-woff2;base64,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\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size3-Regular.woff2\n// module id = 106\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Size4-Regular.81ab95e.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size4-Regular.ttf\n// module id = 107\n// module chunks = 0","module.exports = \"data:application/font-woff;base64,\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size4-Regular.woff\n// module id = 108\n// module chunks = 0","module.exports = \"data:application/font-woff2;base64,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\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Size4-Regular.woff2\n// module id = 109\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Typewriter-Regular.2901747.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Typewriter-Regular.ttf\n// module id = 110\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Typewriter-Regular.3e9e27f.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Typewriter-Regular.woff\n// module id = 111\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/fonts/KaTeX_Typewriter-Regular.8a6d8ed.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/katex/dist/fonts/KaTeX_Typewriter-Regular.woff2\n// module id = 112\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"research-article\"\n  }, [_c('div', {\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.rawHtml)\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-22f8fdc1\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/research_article/Plane_Shooting_Problem_Dynamic_Programming/article.vue\n// module id = 114\n// module chunks = 0"],"sourceRoot":""}